<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="13:ChaseTestAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x111997a50"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x110342940"/></to>
    </wire>
    <wire loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x110342940"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x110341c50"/></to>
    </wire>
    <wire loc="14:ChaseTestAppC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x111996188"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x11050bdc0"/></to>
    </wire>
    <wire loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x11050bdc0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x1105f92e8"/></to>
    </wire>
    <wire loc="15:ChaseTestAppC.nc">
      <from><interface-ref name="floodTimer" scoped="" ref="0x11199ca08"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x110c72a60"/></to>
    </wire>
    <wire loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x110c72a60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x110c5f7d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="16:ChaseTestAppC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x11199c0c0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x110e14350"/></to>
    </wire>
    <wire loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x110e14350"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x110e11160"/></to>
    </wire>
    <wire loc="17:ChaseTestAppC.nc">
      <from><interface-ref name="ChaseFlood" scoped="" ref="0x11199eb30"/></from>
      <to><interface-ref name="ChaseFlood" scoped="" ref="0x110df8c40"/></to>
    </wire>
    <wire loc="33:../../net/ChaseC.nc">
      <from><interface-ref name="ChaseFlood" scoped="" ref="0x110df8c40"/></from>
      <to><interface-ref name="ChaseFlood" scoped="" ref="0x1117f1378"/></to>
    </wire>
    <wire loc="18:ChaseTestAppC.nc">
      <from><interface-ref name="ChaseControl" scoped="" ref="0x11199d2f8"/></from>
      <to><interface-ref name="ChaseControl" scoped="" ref="0x110e3b2b8"/></to>
    </wire>
    <wire loc="35:../../net/ChaseC.nc">
      <from><interface-ref name="ChaseControl" scoped="" ref="0x110e3b2b8"/></from>
      <to><interface-ref name="ChaseControl" scoped="" ref="0x1117f02e8"/></to>
    </wire>
    <wire loc="19:ChaseTestAppC.nc">
      <from><interface-ref name="ChasePacket" scoped="" ref="0x11199da88"/></from>
      <to><interface-ref name="ChasePacket" scoped="" ref="0x110e3ab10"/></to>
    </wire>
    <wire loc="36:../../net/ChaseC.nc">
      <from><interface-ref name="ChasePacket" scoped="" ref="0x110e3ab10"/></from>
      <to><interface-ref name="ChasePacket" scoped="" ref="0x1117f0a78"/></to>
    </wire>
    <wire loc="20:ChaseTestAppC.nc">
      <from><interface-ref name="ChaseDelay" scoped="" ref="0x1119903a0"/></from>
      <to><interface-ref name="ChaseDelay" scoped="" ref="0x110e38568"/></to>
    </wire>
    <wire loc="37:../../net/ChaseC.nc">
      <from><interface-ref name="ChaseDelay" scoped="" ref="0x110e38568"/></from>
      <to><interface-ref name="ChaseDelay" scoped="" ref="0x1117ef0c0"/></to>
    </wire>
    <wire loc="21:ChaseTestAppC.nc">
      <from><interface-ref name="ChaseEnergy" scoped="" ref="0x111991d70"/></from>
      <to><interface-ref name="ChaseEnergy" scoped="" ref="0x110e36830"/></to>
    </wire>
    <wire loc="38:../../net/ChaseC.nc">
      <from><interface-ref name="ChaseEnergy" scoped="" ref="0x110e36830"/></from>
      <to><interface-ref name="ChaseEnergy" scoped="" ref="0x1117ef850"/></to>
    </wire>
    <wire loc="22:ChaseTestAppC.nc">
      <from><interface-ref name="dcTimer" scoped="" ref="0x111996dc0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x110ddb020"/></to>
    </wire>
    <wire loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x110ddb020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x110c5f7d8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="25:ChaseTestAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x111990af0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x110af1ba8"/></to>
    </wire>
    <wire loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x110af1ba8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x110b0c5e8"/></to>
    </wire>
    <wire loc="35:ChaseTestAppC.nc">
      <from><interface-ref name="floodSerialSend" scoped="" ref="0x11198e198"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x111a57020"/></to>
    </wire>
    <wire loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x111a57020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x11245b188"/></to>
    </wire>
    <wire loc="36:ChaseTestAppC.nc">
      <from><interface-ref name="floodSerialPkt" scoped="" ref="0x11198c998"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x111a57bd8"/></to>
    </wire>
    <wire loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x111a57bd8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x11056e9f8"/></to>
    </wire>
    <wire loc="37:ChaseTestAppC.nc">
      <from><interface-ref name="delaySerialSend" scoped="" ref="0x11198ee68"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x111a447b0"/></to>
    </wire>
    <wire loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x111a447b0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x112443958"/></to>
    </wire>
    <wire loc="38:ChaseTestAppC.nc">
      <from><interface-ref name="delaySerialPkt" scoped="" ref="0x11198b688"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x111a433f0"/></to>
    </wire>
    <wire loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x111a433f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x11056e9f8"/></to>
    </wire>
    <wire loc="39:ChaseTestAppC.nc">
      <from><interface-ref name="energySerialSend" scoped="" ref="0x11198dc78"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x111a3e060"/></to>
    </wire>
    <wire loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x111a3e060"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x11242de68"/></to>
    </wire>
    <wire loc="40:ChaseTestAppC.nc">
      <from><interface-ref name="energySerialPkt" scoped="" ref="0x11198a380"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x111a3ec18"/></to>
    </wire>
    <wire loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x111a3ec18"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x11056e9f8"/></to>
    </wire>
    <wire loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x110344d68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x111a59678"/></to>
    </wire>
    <wire loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x110344d68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x111a075a8"/></to>
    </wire>
    <wire loc="69:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x110344d68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1116354a0"/></to>
    </wire>
    <wire loc="64:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x110344d68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x11158d7d0"/></to>
    </wire>
    <wire loc="65:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x110344d68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x110f478e8"/></to>
    </wire>
    <wire loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x110344d68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x112225828"/></to>
    </wire>
    <wire loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x110344d68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1111bc5d8"/></to>
    </wire>
    <wire loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x110344d68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x110eba080"/></to>
    </wire>
    <wire loc="39:../../net/ChaseC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x110344d68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1117efe18"/></to>
    </wire>
    <wire loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x110344d68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x110e17840"/></to>
    </wire>
    <wire loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x110344d68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x110c990f0"/></to>
    </wire>
    <wire loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x110344d68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x111fd7080"/></to>
    </wire>
    <wire loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x110344d68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1105fcbb0"/></to>
    </wire>
    <wire loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x1104eb308"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x10fe47390"/></to>
    </wire>
    <wire loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x10fe47390"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x1103040c0"/></to>
    </wire>
    <wire loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x1104ebce0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x110343cb0"/></to>
    </wire>
    <wire loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x110343cb0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x11033fe58"/></to>
    </wire>
    <wire loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x110502418"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x110344d68"/></to>
    </wire>
    <wire loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x11033c568"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x11033d458"/></to>
    </wire>
    <wire loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x11033d458"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x11035a2e8"/></to>
    </wire>
    <wire loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x11033cc08"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x11033ebf8"/></to>
    </wire>
    <wire loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x11033b370"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x110b21460"/></to>
    </wire>
    <wire loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x11035a2e8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x11037d8f0"/></to>
    </wire>
    <wire loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x11036e5c0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x11037c020"/></to>
    </wire>
    <wire loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x1100f5020"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x11037b188"/></to>
    </wire>
    <wire loc="113:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x1103bad30"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x110481c80"/></to>
    </wire>
    <wire loc="126:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x1103c3d30"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x11047ac80"/></to>
    </wire>
    <wire loc="108:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x1103cb558"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x110465c58"/></to>
    </wire>
    <wire loc="149:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x1103cf020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x110483c58"/></to>
    </wire>
    <wire loc="107:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x1103b1e60"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x110465020"/></to>
    </wire>
    <wire loc="148:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x1103d66e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x110483020"/></to>
    </wire>
    <wire loc="170:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x1103ec020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x1104b2c58"/></to>
    </wire>
    <wire loc="154:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x1103dc060"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x1104a0c80"/></to>
    </wire>
    <wire loc="99:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x1103b44d0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x11042ac80"/></to>
    </wire>
    <wire loc="135:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x1103d1020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x110492c58"/></to>
    </wire>
    <wire loc="134:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x1103d8a70"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x110492020"/></to>
    </wire>
    <wire loc="133:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x1103c1120"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x110472c80"/></to>
    </wire>
    <wire loc="115:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x1103ca558"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x11047fc58"/></to>
    </wire>
    <wire loc="156:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x1103ce020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x11049ec58"/></to>
    </wire>
    <wire loc="140:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x1103c0710"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x11048dc80"/></to>
    </wire>
    <wire loc="114:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x1103b0bb8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x11047f020"/></to>
    </wire>
    <wire loc="93:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x1103a5060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x110418798"/></to>
    </wire>
    <wire loc="155:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x1103d5558"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x11049e020"/></to>
    </wire>
    <wire loc="106:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x1103bb898"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x110467c80"/></to>
    </wire>
    <wire loc="161:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x1103db400"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x110498c80"/></to>
    </wire>
    <wire loc="101:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x1103c5668"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x11046cc58"/></to>
    </wire>
    <wire loc="142:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x1103d0020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x11048bc58"/></to>
    </wire>
    <wire loc="100:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x1103b1140"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x11046c020"/></to>
    </wire>
    <wire loc="141:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x1103d7868"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x11048b020"/></to>
    </wire>
    <wire loc="163:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x1103ed020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x110496c58"/></to>
    </wire>
    <wire loc="147:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x1103bfba8"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x110485c80"/></to>
    </wire>
    <wire loc="120:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x1103c4520"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1104101e8"/></to>
    </wire>
    <wire loc="162:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x1103d43d0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x110496020"/></to>
    </wire>
    <wire loc="128:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x1103d2060"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x110478c58"/></to>
    </wire>
    <wire loc="169:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x1103d3120"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x1104b2020"/></to>
    </wire>
    <wire loc="127:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x1103d9d00"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x110478020"/></to>
    </wire>
    <wire loc="168:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x1103da898"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x1104b4c80"/></to>
    </wire>
    <wire loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x110416658"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x110416020"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x110416c70"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x1104ab520"/></to>
    </wire>
    <wire loc="96:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x1104152e8"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x1104abc68"/></to>
    </wire>
    <wire loc="102:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x11046ba90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x110418798"/></to>
    </wire>
    <wire loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x110469100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x110416020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x110464a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x110418798"/></to>
    </wire>
    <wire loc="110:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x110461100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x110416020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x11047ea90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x110418798"/></to>
    </wire>
    <wire loc="117:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x11047c100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x110416020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x11040e020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x11040f8a0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x11040e638"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x1104a9418"/></to>
    </wire>
    <wire loc="123:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x11040ec50"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x1104a9b60"/></to>
    </wire>
    <wire loc="129:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x110477a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1104101e8"/></to>
    </wire>
    <wire loc="130:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x110475100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x11040f8a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x110491a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1104101e8"/></to>
    </wire>
    <wire loc="137:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x11048f100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x11040f8a0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x11048aa90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1104101e8"/></to>
    </wire>
    <wire loc="144:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x110488100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x11040f8a0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x1104a4a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1104101e8"/></to>
    </wire>
    <wire loc="151:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x1104a2100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x11040f8a0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x11049da90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1104101e8"/></to>
    </wire>
    <wire loc="158:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x11049b100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x11040f8a0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x110495a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1104101e8"/></to>
    </wire>
    <wire loc="165:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x1104b6100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x11040f8a0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x1104b1a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1104101e8"/></to>
    </wire>
    <wire loc="172:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x1104af100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x11040f8a0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x10fe4eca0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x110302020"/></to>
    </wire>
    <wire loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x1102ff4e0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x10fec23e0"/></to>
    </wire>
    <wire loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x1105f92e8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x1105e9d50"/></to>
    </wire>
    <wire loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x1105559d0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x110597b60"/></to>
    </wire>
    <wire loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x11056e9f8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x1105d8578"/></to>
    </wire>
    <wire loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x1105535e0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x1105da9a8"/></to>
    </wire>
    <wire loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x11057d0d0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x1105d7268"/></to>
    </wire>
    <wire loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x110583190"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x1105d9020"/></to>
    </wire>
    <wire loc="69:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x1105fcbb0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1105e9738"/></to>
    </wire>
    <wire loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x1105f55a8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x11056f020"/></to>
    </wire>
    <wire loc="69:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x1105d7bb0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x1105f7ce8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x1105d68c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x1105f7270"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x1105f1ba8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x110c3e060"/></to>
    </wire>
    <wire loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x1105f7ce8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x110711020"/></to>
    </wire>
    <wire loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x1105f7270"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x110712868"/></to>
    </wire>
    <wire loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x110711db8"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x1105f1ba8"/></to>
    </wire>
    <wire loc="70:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x110609d18"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x1105f55a8"/></to>
    </wire>
    <wire loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x11073ba50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x1105f55a8"/></to>
    </wire>
    <wire loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x110732420"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x1105f55a8"/></to>
    </wire>
    <wire loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x11073c6c8"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x110607ba8"/></to>
    </wire>
    <wire loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x11073b020"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x11060b918"/></to>
    </wire>
    <wire loc="77:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x110601da8"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x110737b48"/></to>
    </wire>
    <wire loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x1105fdb00"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x1107367f8"/></to>
    </wire>
    <wire loc="17:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x1107367f8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x110c55da8"/></to>
    </wire>
    <wire loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x110726448"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x110769020"/></to>
    </wire>
    <wire loc="13:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x110769020"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x110c17880"/></to>
    </wire>
    <wire loc="332:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x110652dd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10fe4eca0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x1106338e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10fe4eca0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x110654590"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10fe4eca0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x110677020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10fe4eca0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x110739100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10fe4eca0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x1107398a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10fe4eca0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="14:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x110762210"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x110c578c8"/></to>
    </wire>
    <wire loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x110c578c8"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x1107bdb00"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x110c17880"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x1107be570"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x110c56060"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x110c52640"/></to>
    </wire>
    <wire loc="19:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x110c52c70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x110c184e0"/></to>
    </wire>
    <wire loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x110c184e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1107c3bc8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x110c17120"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x111c4bdc8"/></to>
    </wire>
    <wire loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x111c4bdc8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x110b5b1c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x1107b8b68"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x110c56060"/></to>
    </wire>
    <wire loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x111c45b90"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x1107bb888"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x1107b98b8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x111c4b1d0"/></to>
    </wire>
    <wire loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x111c4b1d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x110b5de70"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x1107b6030"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x111c45430"/></to>
    </wire>
    <wire loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x111c45430"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x110b5d1c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x1107bb888"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x110853060"/></to>
    </wire>
    <wire loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x1107bdb00"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x1108529e8"/></to>
    </wire>
    <wire loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x1107be570"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x110853900"/></to>
    </wire>
    <wire loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x1107c3bc8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1108542e8"/></to>
    </wire>
    <wire loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x110850180"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x1107b8b68"/></to>
    </wire>
    <wire loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x110851408"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x1107b98b8"/></to>
    </wire>
    <wire loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x11084b0c8"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x1107b6030"/></to>
    </wire>
    <wire loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x1108507b8"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x11086ece0"/></to>
    </wire>
    <wire loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x11086ece0"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x110867098"/></to>
    </wire>
    <wire loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x11084ba58"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x110aee020"/></to>
    </wire>
    <wire loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x110aee020"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x110aece00"/></to>
    </wire>
    <wire loc="70:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x110848a30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x110af1ba8"/></to>
    </wire>
    <wire loc="89:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x11086b528"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x110863a68"/></to>
    </wire>
    <wire loc="87:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x11086e4f0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x11086a7e0"/></to>
    </wire>
    <wire loc="91:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x110889ad8"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x110975560"/></to>
    </wire>
    <wire loc="539:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x110975560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110a4e3d8"/></to>
    </wire>
    <wire loc="92:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x110860968"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x110973560"/></to>
    </wire>
    <wire loc="540:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x110973560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110a4aca0"/></to>
    </wire>
    <wire loc="93:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x1108877e0"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x110971560"/></to>
    </wire>
    <wire loc="541:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x110971560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110a443d8"/></to>
    </wire>
    <wire loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x110885658"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x11096d560"/></to>
    </wire>
    <wire loc="543:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x11096d560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110a0b3d8"/></to>
    </wire>
    <wire loc="95:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x110882558"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x11096f560"/></to>
    </wire>
    <wire loc="542:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x11096f560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110a10ca0"/></to>
    </wire>
    <wire loc="442:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x11090c7f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1109bbca0"/></to>
    </wire>
    <wire loc="455:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x1108f8568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1109fdca0"/></to>
    </wire>
    <wire loc="531:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x11094d7d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1109ef3d8"/></to>
    </wire>
    <wire loc="551:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x11095e558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110a86ca0"/></to>
    </wire>
    <wire loc="532:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x11094b660"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1109ebca0"/></to>
    </wire>
    <wire loc="460:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x1108f4568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1109f4ca0"/></to>
    </wire>
    <wire loc="473:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x110913568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110a36ca0"/></to>
    </wire>
    <wire loc="486:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x110934568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110a40ca0"/></to>
    </wire>
    <wire loc="497:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x110959568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110a8fca0"/></to>
    </wire>
    <wire loc="535:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x110945560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110a19ca0"/></to>
    </wire>
    <wire loc="545:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x11096b558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110a68ca0"/></to>
    </wire>
    <wire loc="557:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x11098c560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110a813d8"/></to>
    </wire>
    <wire loc="445:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x110906568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1109e53d8"/></to>
    </wire>
    <wire loc="536:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x110943560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110a143d8"/></to>
    </wire>
    <wire loc="450:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x110902568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1109dc3d8"/></to>
    </wire>
    <wire loc="463:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x110921568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110a1d3d8"/></to>
    </wire>
    <wire loc="476:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x11090d568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110a273d8"/></to>
    </wire>
    <wire loc="489:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x11092e568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110a6c3d8"/></to>
    </wire>
    <wire loc="500:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x110953568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110a813d8"/></to>
    </wire>
    <wire loc="440:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x1108dcb00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1109c5ca0"/></to>
    </wire>
    <wire loc="453:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x1108fc568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1109ced08"/></to>
    </wire>
    <wire loc="466:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x11091b568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110a10ca0"/></to>
    </wire>
    <wire loc="530:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x11094f970"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1109ef3d8"/></to>
    </wire>
    <wire loc="548:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x110964558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110a593d8"/></to>
    </wire>
    <wire loc="555:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x11098e558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110a813d8"/></to>
    </wire>
    <wire loc="471:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x110917568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110a07dd8"/></to>
    </wire>
    <wire loc="484:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x110938568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110a4aca0"/></to>
    </wire>
    <wire loc="495:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x110927568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110a5eca0"/></to>
    </wire>
    <wire loc="549:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x110962558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110a8fca0"/></to>
    </wire>
    <wire loc="538:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x110977558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110a53ca0"/></to>
    </wire>
    <wire loc="443:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x11090a668"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1109b63d8"/></to>
    </wire>
    <wire loc="456:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x1108f6568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1109f83d8"/></to>
    </wire>
    <wire loc="493:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x11092c568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110a68ca0"/></to>
    </wire>
    <wire loc="461:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x110926568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1109ef3d8"/></to>
    </wire>
    <wire loc="474:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x110911568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110a303d8"/></to>
    </wire>
    <wire loc="487:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x110932568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110a3b3d8"/></to>
    </wire>
    <wire loc="498:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x110957568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110a8a3d8"/></to>
    </wire>
    <wire loc="438:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x1108e2d48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110986e18"/></to>
    </wire>
    <wire loc="451:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x110900568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1109d8ca0"/></to>
    </wire>
    <wire loc="464:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x11091f568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110a19ca0"/></to>
    </wire>
    <wire loc="477:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x110940568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110a23ca0"/></to>
    </wire>
    <wire loc="546:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x110969558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110a633d8"/></to>
    </wire>
    <wire loc="552:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x110992558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110a813d8"/></to>
    </wire>
    <wire loc="482:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x11093c568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110a53ca0"/></to>
    </wire>
    <wire loc="441:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x1108da978"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1109c03d8"/></to>
    </wire>
    <wire loc="454:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x1108fa568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110a013d8"/></to>
    </wire>
    <wire loc="467:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x110919568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110a0b3d8"/></to>
    </wire>
    <wire loc="550:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x110960558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110a8a3d8"/></to>
    </wire>
    <wire loc="472:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x110915668"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110a02478"/></to>
    </wire>
    <wire loc="485:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x110936568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110a443d8"/></to>
    </wire>
    <wire loc="496:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x11095b568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110a593d8"/></to>
    </wire>
    <wire loc="444:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x110908568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1109b2ca0"/></to>
    </wire>
    <wire loc="494:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x11092a568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110a633d8"/></to>
    </wire>
    <wire loc="449:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x110904568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1109e1ca0"/></to>
    </wire>
    <wire loc="462:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x110924568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1109ebca0"/></to>
    </wire>
    <wire loc="475:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x11090f568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110a2cca0"/></to>
    </wire>
    <wire loc="488:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x110930568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110a71ca0"/></to>
    </wire>
    <wire loc="499:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x110955568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110a86ca0"/></to>
    </wire>
    <wire loc="439:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x1108dec88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1109c9478"/></to>
    </wire>
    <wire loc="452:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x1108fe568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1109d33d8"/></to>
    </wire>
    <wire loc="465:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x11091d568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110a143d8"/></to>
    </wire>
    <wire loc="478:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x11093e568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110a1e3d8"/></to>
    </wire>
    <wire loc="534:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x110947548"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110a1d3d8"/></to>
    </wire>
    <wire loc="547:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x110967558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110a5eca0"/></to>
    </wire>
    <wire loc="533:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x110949560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110a1d3d8"/></to>
    </wire>
    <wire loc="483:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x11093a568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110a4e3d8"/></to>
    </wire>
    <wire loc="554:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x110990558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110a86ca0"/></to>
    </wire>
    <wire loc="558:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x11098a568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x110a6c3d8"/></to>
    </wire>
    <wire loc="529:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x1109515b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1109f4ca0"/></to>
    </wire>
    <wire loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x110aece00"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x110ae4330"/></to>
    </wire>
    <wire loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x110b142a0"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x1103c4520"/></to>
    </wire>
    <wire loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x110b21460"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x110b0c020"/></to>
    </wire>
    <wire loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x110b047c8"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x110b24020"/></to>
    </wire>
    <wire loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x110b24020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x110b1e4e0"/></to>
    </wire>
    <wire loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x110b0a958"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x110b231b0"/></to>
    </wire>
    <wire loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x110b231b0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x110b48cd0"/></to>
    </wire>
    <wire loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x110b09ae0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x110b22378"/></to>
    </wire>
    <wire loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x110b22378"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x110b43448"/></to>
    </wire>
    <wire loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x110b4b5f8"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x110934568"/></to>
    </wire>
    <wire loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x110b47e20"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x110932568"/></to>
    </wire>
    <wire loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x110b425f8"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x110930568"/></to>
    </wire>
    <wire loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x111c4ace0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x11086ece0"/></to>
    </wire>
    <wire loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x111c4a580"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x110b5b998"/></to>
    </wire>
    <wire loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x110b5b998"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x110c080e0"/></to>
    </wire>
    <wire loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x110b976c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x111c45b90"/></to>
    </wire>
    <wire loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x110b5b1c8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x110c0ad18"/></to>
    </wire>
    <wire loc="106:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x110c0ad18"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x111fd3388"/></to>
    </wire>
    <wire loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x110b5d1c8"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x110b95b20"/></to>
    </wire>
    <wire loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x110b5de70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x110c0a020"/></to>
    </wire>
    <wire loc="105:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x110c0a020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x111fd4668"/></to>
    </wire>
    <wire loc="108:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x110c080e0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x111fd2700"/></to>
    </wire>
    <wire loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x110b94bc8"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x11086b528"/></to>
    </wire>
    <wire loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x110c08960"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x110b976c0"/></to>
    </wire>
    <wire loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x110b82a48"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x110c080e0"/></to>
    </wire>
    <wire loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x110c2e268"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x110c094a8"/></to>
    </wire>
    <wire loc="107:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x110c094a8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x111fd3ac8"/></to>
    </wire>
    <wire loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x110c03478"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x11086e4f0"/></to>
    </wire>
    <wire loc="109:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x111fd1020"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x110c08960"/></to>
    </wire>
    <wire loc="111:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x111fd17a0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x111fd7658"/></to>
    </wire>
    <wire loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x111fcf908"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10fe4eca0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x112030600"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x110c03478"/></to>
    </wire>
    <wire loc="82:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x112030d20"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x110c03b98"/></to>
    </wire>
    <wire loc="84:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x11202f2e8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x110c2e268"/></to>
    </wire>
    <wire loc="85:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x11202e020"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x110c2ee20"/></to>
    </wire>
    <wire loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x110c5f7d8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x110c99de8"/></to>
    </wire>
    <wire loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x110c99de8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x110db9020"/></to>
    </wire>
    <wire loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x110c990f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x110d5d418"/></to>
    </wire>
    <wire loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x110c8fae8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x110df3c38"/></to>
    </wire>
    <wire loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x110d5d418"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1120207d8"/></to>
    </wire>
    <wire loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x110db3208"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x110d56d88"/></to>
    </wire>
    <wire loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x110d73020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x110d5dc00"/></to>
    </wire>
    <wire loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x110d5dc00"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x112019020"/></to>
    </wire>
    <wire loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x110df2e48"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x110cf0be0"/></to>
    </wire>
    <wire loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x110cf0be0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x110d13c50"/></to>
    </wire>
    <wire loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x1120207d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x112097bd8"/></to>
    </wire>
    <wire loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x112013450"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x11201f020"/></to>
    </wire>
    <wire loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x11201f020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x1120964f8"/></to>
    </wire>
    <wire loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x1120161a8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x110cf0be0"/></to>
    </wire>
    <wire loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x112092568"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x11209db88"/></to>
    </wire>
    <wire loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x11209db88"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x110cb3858"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x112091bd8"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x11209a2a8"/></to>
    </wire>
    <wire loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x11209a2a8"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x110cb14d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x11208f020"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x1120995b8"/></to>
    </wire>
    <wire loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x1120995b8"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x110cb0cb8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x110cb3858"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x1103c4520"/></to>
    </wire>
    <wire loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x110cb14d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x1103c3d30"/></to>
    </wire>
    <wire loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x110cb0cb8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x1103d9d00"/></to>
    </wire>
    <wire loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x110cb3858"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x1103c4520"/></to>
    </wire>
    <wire loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x110cb14d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x1103c0710"/></to>
    </wire>
    <wire loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x110cb0cb8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x1103d7868"/></to>
    </wire>
    <wire loc="70:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x110cb3858"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x1103c4520"/></to>
    </wire>
    <wire loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x110cb14d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x1103bfba8"/></to>
    </wire>
    <wire loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x110cb0cb8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x1103d66e0"/></to>
    </wire>
    <wire loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x110cb3858"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x1103c4520"/></to>
    </wire>
    <wire loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x110cb14d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x1103dc060"/></to>
    </wire>
    <wire loc="76:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x110cb0cb8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x1103d5558"/></to>
    </wire>
    <wire loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x110cb3858"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x1103c4520"/></to>
    </wire>
    <wire loc="79:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x110cb14d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x1103db400"/></to>
    </wire>
    <wire loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x110cb0cb8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x1103d43d0"/></to>
    </wire>
    <wire loc="82:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x110cb3858"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x1103c4520"/></to>
    </wire>
    <wire loc="83:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x110cb14d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x1103da898"/></to>
    </wire>
    <wire loc="84:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x110cb0cb8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x1103d3120"/></to>
    </wire>
    <wire loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x110d11e20"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x110aece00"/></to>
    </wire>
    <wire loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x110d6f020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10fe4eca0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x110dae478"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10fe4eca0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x110e18d00"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x110e12118"/></to>
    </wire>
    <wire loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x110dd3020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x110e17840"/></to>
    </wire>
    <wire loc="34:../../net/ChaseC.nc">
      <from><interface-ref name="ChaseListen" scoped="" ref="0x110df65c0"/></from>
      <to><interface-ref name="ChaseListen" scoped="" ref="0x1117f1b08"/></to>
    </wire>
    <wire loc="41:../../net/ChaseC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x1117ec9c8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x110e2bcf0"/></to>
    </wire>
    <wire loc="55:../../chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x110e2bcf0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x110e27860"/></to>
    </wire>
    <wire loc="42:../../net/ChaseC.nc">
      <from><interface-ref name="subReceive" scoped="" ref="0x1117ed580"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x11163bde8"/></to>
    </wire>
    <wire loc="64:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x11163bde8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x111634c60"/></to>
    </wire>
    <wire loc="43:../../net/ChaseC.nc">
      <from><interface-ref name="subSend" scoped="" ref="0x1117edc30"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x11152f870"/></to>
    </wire>
    <wire loc="57:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x11152f870"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x11158b6b8"/></to>
    </wire>
    <wire loc="44:../../net/ChaseC.nc">
      <from><interface-ref name="DisableRx" scoped="" ref="0x1117eb5d8"/></from>
      <to><interface-ref name="DisableRx" scoped="" ref="0x11158f0d0"/></to>
    </wire>
    <wire loc="61:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="DisableRx" scoped="" ref="0x11158f0d0"/></from>
      <to><interface-ref name="DisableRx" scoped="" ref="0x1115c5bb8"/></to>
    </wire>
    <wire loc="45:../../net/ChaseC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x1117ebe78"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x11163a578"/></to>
    </wire>
    <wire loc="65:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x11163a578"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x11169d428"/></to>
    </wire>
    <wire loc="46:../../net/ChaseC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x1117ea5c0"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x111592280"/></to>
    </wire>
    <wire loc="59:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x111592280"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x111589428"/></to>
    </wire>
    <wire loc="47:../../net/ChaseC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x1117ead28"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x110f9b378"/></to>
    </wire>
    <wire loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x110f9b378"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x110fdab18"/></to>
    </wire>
    <wire loc="48:../../net/ChaseC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x1117e9e10"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x1113197f0"/></to>
    </wire>
    <wire loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x1113197f0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x11136e700"/></to>
    </wire>
    <wire loc="49:../../net/ChaseC.nc">
      <from><interface-ref name="delayTimer" scoped="" ref="0x1118587a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1117d25e8"/></to>
    </wire>
    <wire loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x1117d25e8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x110c5f7d8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:../../net/ChaseC.nc">
      <from><interface-ref name="sleepTimer" scoped="" ref="0x1118538e8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1117d80a0"/></to>
    </wire>
    <wire loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x1117d80a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x110c5f7d8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:../../net/ChaseC.nc">
      <from><interface-ref name="randTimer" scoped="" ref="0x11184ead0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1117cbaa0"/></to>
    </wire>
    <wire loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x1117cbaa0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x110c5f7d8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../net/ChaseC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x111849a60"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x110e14350"/></to>
    </wire>
    <wire loc="54:../../net/ChaseC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x111848430"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x110c8fae8"/></to>
    </wire>
    <wire loc="55:../../net/ChaseC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x111847428"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x110af1ba8"/></to>
    </wire>
    <wire loc="59:../../net/ChaseC.nc">
      <from><interface-ref name="TailSend" scoped="" ref="0x111846b08"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x1119b21d0"/></to>
    </wire>
    <wire loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x1119b21d0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x11237e530"/></to>
    </wire>
    <wire loc="60:../../net/ChaseC.nc">
      <from><interface-ref name="TailPacket" scoped="" ref="0x1118457e8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x1119b2d88"/></to>
    </wire>
    <wire loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x1119b2d88"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x11056e9f8"/></to>
    </wire>
    <wire loc="54:../../chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x110e21d88"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x110e1c140"/></to>
    </wire>
    <wire loc="56:../../chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x110e2a7f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x110e1e460"/></to>
    </wire>
    <wire loc="68:../../chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x110e29478"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x11163bde8"/></to>
    </wire>
    <wire loc="59:../../chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x110e1b020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x110e89e18"/></to>
    </wire>
    <wire loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x110e89e18"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x110eba6b0"/></to>
    </wire>
    <wire loc="60:../../chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x110e5c320"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x110ece8b0"/></to>
    </wire>
    <wire loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x110ece8b0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x110eb7318"/></to>
    </wire>
    <wire loc="63:../../chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x110e1a540"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x11152f0c0"/></to>
    </wire>
    <wire loc="69:../../chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x110e1a540"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x11163eba0"/></to>
    </wire>
    <wire loc="62:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x11163eba0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x111635ae0"/></to>
    </wire>
    <wire loc="56:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x11152f0c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x11158de10"/></to>
    </wire>
    <wire loc="64:../../chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x110e55d48"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x11152f870"/></to>
    </wire>
    <wire loc="65:../../chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x110e62aa8"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x1115965f8"/></to>
    </wire>
    <wire loc="58:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x1115965f8"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x11158a4b0"/></to>
    </wire>
    <wire loc="72:../../chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x110e4a888"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x1116ed8b0"/></to>
    </wire>
    <wire loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x1116ed8b0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x1116da160"/></to>
    </wire>
    <wire loc="73:../../chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x110e45b68"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x1116e9310"/></to>
    </wire>
    <wire loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x1116e9310"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x1116d9970"/></to>
    </wire>
    <wire loc="76:../../chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x110e5b908"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x110e14350"/></to>
    </wire>
    <wire loc="79:../../chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x110e49110"/></from>
      <to><interface-ref name="State" scoped="" ref="0x1117e0268"/></to>
    </wire>
    <wire loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x1117e0268"/></from>
      <to><interface-ref name="State" scoped="" ref="0x1111c4868"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x110e540c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x110af1ba8"/></to>
    </wire>
    <wire loc="76:../../chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x110e85800"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10fe4eca0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x110e879a8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10fe4eca0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x110e3eab8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10fe4eca0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x110ec3af8"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x110eb94b0"/></to>
    </wire>
    <wire loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x110ebed28"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x110eb6658"/></to>
    </wire>
    <wire loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x110eb3370"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x110f912a0"/></to>
    </wire>
    <wire loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x110f912a0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x110fa34f8"/></to>
    </wire>
    <wire loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x110eae4f8"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x110f9c1a0"/></to>
    </wire>
    <wire loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x110f9c1a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x110fde280"/></to>
    </wire>
    <wire loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x110ead688"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x110f99698"/></to>
    </wire>
    <wire loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x110f99698"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x110fd0b18"/></to>
    </wire>
    <wire loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x110ef8810"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x110f96998"/></to>
    </wire>
    <wire loc="77:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x110f96998"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x110fc7b18"/></to>
    </wire>
    <wire loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x110ef3e80"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x111004140"/></to>
    </wire>
    <wire loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x111004140"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x1110deb58"/></to>
    </wire>
    <wire loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x110ee1550"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1114067d0"/></to>
    </wire>
    <wire loc="126:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x1114067d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x111139020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x110ee0768"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x111465020"/></to>
    </wire>
    <wire loc="132:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x111465020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x110ee0e40"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x1114642e8"/></to>
    </wire>
    <wire loc="135:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x1114642e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x110ee2e40"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x1114673a0"/></to>
    </wire>
    <wire loc="130:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x1114673a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x110ee2560"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x111464900"/></to>
    </wire>
    <wire loc="136:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x111464900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x110ee61d0"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x11145ce10"/></to>
    </wire>
    <wire loc="154:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x11145ce10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x110ee6a40"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x111459d60"/></to>
    </wire>
    <wire loc="158:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x111459d60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x110eed3b8"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x111458528"/></to>
    </wire>
    <wire loc="159:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x111458528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x110eedc40"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x11145f470"/></to>
    </wire>
    <wire loc="147:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x11145f470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x110ee5558"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x11145fc10"/></to>
    </wire>
    <wire loc="148:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x11145fc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x110ee9c18"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x11144b7c0"/></to>
    </wire>
    <wire loc="184:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x11144b7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111135020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x110ee92e0"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x11144b020"/></to>
    </wire>
    <wire loc="183:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x11144b020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111135020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x110ee5dd0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x11145c470"/></to>
    </wire>
    <wire loc="153:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x11145c470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x110ee4680"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x11145e470"/></to>
    </wire>
    <wire loc="149:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x11145e470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x110ee3020"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x11145d470"/></to>
    </wire>
    <wire loc="151:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x11145d470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x110ede140"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x11143ae60"/></to>
    </wire>
    <wire loc="126:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x11143ae60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x111139020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x110edf3c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x111470558"/></to>
    </wire>
    <wire loc="126:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x111470558"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x111139020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x110eee338"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x1114a4690"/></to>
    </wire>
    <wire loc="100:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x110eb1998"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x1114a6ce0"/></to>
    </wire>
    <wire loc="23:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x1114a6ce0"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x1114ee190"/></to>
    </wire>
    <wire loc="126:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x110ed3720"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10fe4eca0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x110ed58d8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10fe4eca0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x110f478e8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x110f8cb78"/></to>
    </wire>
    <wire loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x110f8cb78"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x11212b538"/></to>
    </wire>
    <wire loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x110fa34f8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x11212bd20"/></to>
    </wire>
    <wire loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x11212b538"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1121230c0"/></to>
    </wire>
    <wire loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x11212bd20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x11211d830"/></to>
    </wire>
    <wire loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x1121230c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1121087a8"/></to>
    </wire>
    <wire loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x112117ce8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x1121238a8"/></to>
    </wire>
    <wire loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x1121238a8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x112107020"/></to>
    </wire>
    <wire loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x11211aad0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x110f75520"/></to>
    </wire>
    <wire loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x110f75520"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x110f71e40"/></to>
    </wire>
    <wire loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x112104020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x11210e7d8"/></to>
    </wire>
    <wire loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x11210e7d8"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x110cb3858"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x1121035b8"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x11210dd60"/></to>
    </wire>
    <wire loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x11210dd60"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x110cb14d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x1121028c8"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x11210b020"/></to>
    </wire>
    <wire loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x11210b020"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x110cb0cb8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x110f6c060"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x110aece00"/></to>
    </wire>
    <wire loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x110f9a508"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x110fd5280"/></to>
    </wire>
    <wire loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x110f9d020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x110f94ad0"/></to>
    </wire>
    <wire loc="76:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x110f97810"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x110fcb280"/></to>
    </wire>
    <wire loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x110f93c18"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x11090c7f0"/></to>
    </wire>
    <wire loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x110fdd470"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x110913568"/></to>
    </wire>
    <wire loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x110fd9c18"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x1108da978"/></to>
    </wire>
    <wire loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x110fd4470"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x1108e2d48"/></to>
    </wire>
    <wire loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x110fcfc18"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x110940568"/></to>
    </wire>
    <wire loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x110fca470"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x110915668"/></to>
    </wire>
    <wire loc="69:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x110fc6c18"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x11090d568"/></to>
    </wire>
    <wire loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x111000518"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x110ffd100"/></to>
    </wire>
    <wire loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x111004d08"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x111122a78"/></to>
    </wire>
    <wire loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x110ffdb70"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x1103c1120"/></to>
    </wire>
    <wire loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x110feb020"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x1103d1020"/></to>
    </wire>
    <wire loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x110febde0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x110915668"/></to>
    </wire>
    <wire loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x1110dd780"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x11102b878"/></to>
    </wire>
    <wire loc="70:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x11102b878"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x111018568"/></to>
    </wire>
    <wire loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x1111215f8"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x11102e8e0"/></to>
    </wire>
    <wire loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x11102e8e0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x11101c5c8"/></to>
    </wire>
    <wire loc="82:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x111021878"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x11100d568"/></to>
    </wire>
    <wire loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x111028878"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x111015568"/></to>
    </wire>
    <wire loc="77:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x111026878"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x111012568"/></to>
    </wire>
    <wire loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x11102d878"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x11101a568"/></to>
    </wire>
    <wire loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x111023878"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x11100f568"/></to>
    </wire>
    <wire loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x11102a878"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x111017568"/></to>
    </wire>
    <wire loc="83:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x111020878"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x11100c568"/></to>
    </wire>
    <wire loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x111025878"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x111011568"/></to>
    </wire>
    <wire loc="69:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x11102c878"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x111019568"/></to>
    </wire>
    <wire loc="81:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x111022878"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x11100e568"/></to>
    </wire>
    <wire loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x111029878"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x111016568"/></to>
    </wire>
    <wire loc="76:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x111027878"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x111013568"/></to>
    </wire>
    <wire loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x111032878"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x11101b568"/></to>
    </wire>
    <wire loc="79:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x111024878"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x111010568"/></to>
    </wire>
    <wire loc="131:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x1114679b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x11145bd98"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x111452470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x1114595c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x1114477c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111135020"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x1114497c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111135020"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x111465c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x11144fc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x11144a7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111135020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x111455c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x111456470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x111468430"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x111139cb0"/></to>
    </wire>
    <wire loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x111139cb0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x111133e00"/></to>
    </wire>
    <wire loc="138:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x111463638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x111463c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x11144d060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x1114623a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x111449020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111135020"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x11144f470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x11145ec10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x111450470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x111452c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x111450c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x111447020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111135020"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x111448020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111135020"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x111456c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x111451470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x11144a020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111135020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x111458cc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x111446020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x111138c00"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x111468d58"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x111461c50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x11145dc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x111454470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x111454c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x11145b5f8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x1114629b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x111461638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x111463020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x11144d800"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x1114487c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111135020"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x111455470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x111451c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x111465638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x1114574f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x111461020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x111457c90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x11144e470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x111446c58"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x111138c00"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x111138c00"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x11112fe50"/></to>
    </wire>
    <wire loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x111135020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111182040"/></to>
    </wire>
    <wire loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x111135d60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111182d40"/></to>
    </wire>
    <wire loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x111139020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x111130c48"/></to>
    </wire>
    <wire loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111181a98"/></to>
    </wire>
    <wire loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x11117d838"/></from>
      <to><interface-ref name="State" scoped="" ref="0x1111c6100"/></to>
    </wire>
    <wire loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x1111c6100"/></from>
      <to><interface-ref name="State" scoped="" ref="0x1111c4868"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x1111801e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1111fccf0"/></to>
    </wire>
    <wire loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x1111fccf0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1122017d0"/></to>
    </wire>
    <wire loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x11117fd20"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x1111fb948"/></to>
    </wire>
    <wire loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x1111fb948"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x112200b90"/></to>
    </wire>
    <wire loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x11117d020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x11142a020"/></to>
    </wire>
    <wire loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x11142a020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x1121ffd18"/></to>
    </wire>
    <wire loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x11117b730"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x110af1ba8"/></to>
    </wire>
    <wire loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x1111705d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10fe4eca0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x1111c4868"/></from>
      <to><interface-ref name="State" scoped="" ref="0x1111bb1c8"/></to>
    </wire>
    <wire loc="110:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x1121ffd18"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x1111e64d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x112200b90"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x1111e9e68"/></to>
    </wire>
    <wire loc="105:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x1122017d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1111ea4e8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x112200430"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x1121f68c8"/></to>
    </wire>
    <wire loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x1121f68c8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x111319020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x1111e9e68"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x11123f020"/></to>
    </wire>
    <wire loc="108:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x1121ff2a8"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x1111e84e0"/></to>
    </wire>
    <wire loc="92:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x1111e84e0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x11123f5f8"/></to>
    </wire>
    <wire loc="111:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x1111e4498"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x1121fe4b0"/></to>
    </wire>
    <wire loc="115:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x1121e98c8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x1111e96c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x1111e5270"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x1121f7b38"/></to>
    </wire>
    <wire loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x1121f7b38"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x11131cce8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x1111e4c40"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x1121f0020"/></to>
    </wire>
    <wire loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x1121f0020"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x11131d2b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x1111e96c0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x111240860"/></to>
    </wire>
    <wire loc="93:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x1111e64d0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x11123e1e0"/></to>
    </wire>
    <wire loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x1111ea4e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x111241ae8"/></to>
    </wire>
    <wire loc="90:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x11123c860"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x1111e4498"/></to>
    </wire>
    <wire loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x11123eac0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x1111e5270"/></to>
    </wire>
    <wire loc="95:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x111237780"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x1111e4c40"/></to>
    </wire>
    <wire loc="98:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x11123b020"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x11128abe0"/></to>
    </wire>
    <wire loc="85:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x11128abe0"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x11127f350"/></to>
    </wire>
    <wire loc="101:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x111236020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x110af1ba8"/></to>
    </wire>
    <wire loc="102:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x1112355f8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10fe4eca0"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x111283d68"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x11127a5d8"/></to>
    </wire>
    <wire loc="86:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x111283528"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x11127bbf0"/></to>
    </wire>
    <wire loc="90:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x1112a86e0"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x11094f970"/></to>
    </wire>
    <wire loc="91:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x1112a5658"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x11094b660"/></to>
    </wire>
    <wire loc="92:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x1112a3558"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x110949560"/></to>
    </wire>
    <wire loc="93:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x1112a1558"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x110943560"/></to>
    </wire>
    <wire loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x11129f558"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x110945560"/></to>
    </wire>
    <wire loc="14:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x1112ada48"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x11135a4e8"/></to>
    </wire>
    <wire loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x1121f0780"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x11131c1c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x1121f0d58"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x111366b48"/></to>
    </wire>
    <wire loc="11:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x111366b48"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x11135a4e8"/></to>
    </wire>
    <wire loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x1121f57c0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x11128abe0"/></to>
    </wire>
    <wire loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x1121f5060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x1113197f0"/></to>
    </wire>
    <wire loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x111318570"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x1121e98c8"/></to>
    </wire>
    <wire loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x111319020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x11136f388"/></to>
    </wire>
    <wire loc="106:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x11136f388"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x112222b48"/></to>
    </wire>
    <wire loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x11131d2b0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x111317b70"/></to>
    </wire>
    <wire loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x11131cce8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x111370558"/></to>
    </wire>
    <wire loc="105:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x111370558"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x112223e20"/></to>
    </wire>
    <wire loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x11131c1c8"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x111316590"/></to>
    </wire>
    <wire loc="108:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x11136e700"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x112220020"/></to>
    </wire>
    <wire loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x11136d020"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x111318570"/></to>
    </wire>
    <wire loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x111315a48"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x11136e700"/></to>
    </wire>
    <wire loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x111316bc8"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x111283528"/></to>
    </wire>
    <wire loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x111315470"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x111283d68"/></to>
    </wire>
    <wire loc="107:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x11136fac8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x1122213f0"/></to>
    </wire>
    <wire loc="109:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x1122208c0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x11136d020"/></to>
    </wire>
    <wire loc="111:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x11221f0a0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x112225e00"/></to>
    </wire>
    <wire loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x11221c100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10fe4eca0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x111353060"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x11127f350"/></to>
    </wire>
    <wire loc="18:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x11134f868"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x11094f970"/></to>
    </wire>
    <wire loc="19:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x11134d7e0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x110949560"/></to>
    </wire>
    <wire loc="153:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x11148fa88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x111499100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x111493a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x11148d470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x111486c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x11148dc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x1114792e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111135020"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x11147c2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111135020"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x1114983a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x111481470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x11147d2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111135020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x111492a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x111491a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x111487470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x11148ac10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x11148c470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x111439a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x111139cb0"/></to>
    </wire>
    <wire loc="138:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x111497c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x1114952e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x111480a38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x111495a00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x11147da88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111135020"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x111497020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x111482c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x1114912e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x1114922e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x111438a88"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x111484c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x111485470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x111482470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x11147aa88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111135020"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x11147ca88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111135020"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x111488470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x111485c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x11147ea88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111135020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x11148b470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x111479a88"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x111138c00"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x111438470"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x1114932e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x11148f2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x111487c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x11148cc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x111486470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x11148e470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x111499718"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x11148ec10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x111494060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x111494c90"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x11147e2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111135020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x11147fa88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111135020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x111497638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x11147f2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x11147a2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111135020"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x111488c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x111484470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x111499d30"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x1114989b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x11148bc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x111494678"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x11148a470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x111481c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x111478780"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x111138c00"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x1114c5470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x11146e900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x1114c8470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x1114c4d98"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x1114bb470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x1114c25c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x1114b07c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111135020"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x1114b27c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111135020"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x11146cc50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x1114b8c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x1114b37c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111135020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x1114c7470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x1114c6470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x1114bec10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x1114bf470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x1114c2d60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x11146f2a8"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x111139cb0"/></to>
    </wire>
    <wire loc="138:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x11146a638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x11146ac50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x1114b6060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x1114693a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x1114b2020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111135020"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x11146b900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x1114b8470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x1114c7c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x1114c8c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x11146e2e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x1114b9470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x1114bbc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x1114b9c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x1114b0020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111135020"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x1114b1020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111135020"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x1114bfc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x1114ba470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x1114b3020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111135020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x1114c1cc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x1114af020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x111138c00"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x11146fbd0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x1114cac50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x1114c6c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x1114bd470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x1114c1528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x1114bdc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x1114c5e10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x11146c020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x1114c45f8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x1114699b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x1114ca638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x1114b47c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111135020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x1114b4020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111135020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x11146a020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x1114b6800"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x1114b17c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111135020"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x1114be470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x1114bac10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x11146c638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x11146b2e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x1114c04f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x1114ca020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x1114c0c90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x1114b7470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x1114afc58"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x111138c00"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x1114eb648"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x1114f2ad8"/></to>
    </wire>
    <wire loc="20:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x1114f2ad8"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x1114dcb08"/></to>
    </wire>
    <wire loc="16:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x1114d63f8"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x1114dfbb0"/></to>
    </wire>
    <wire loc="21:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x1114dfbb0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x111527108"/></to>
    </wire>
    <wire loc="17:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x1114d6c40"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x11153e588"/></to>
    </wire>
    <wire loc="18:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x11152b530"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x11152c828"/></to>
    </wire>
    <wire loc="11:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x11152c828"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x111543ae8"/></to>
    </wire>
    <wire loc="18:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x111522748"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x111529b88"/></to>
    </wire>
    <wire loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x111529b88"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x1114ff020"/></to>
    </wire>
    <wire loc="19:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x111527968"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x11152b530"/></to>
    </wire>
    <wire loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x111556410"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x111550790"/></to>
    </wire>
    <wire loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x111550790"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x11154ce08"/></to>
    </wire>
    <wire loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x11154ade8"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x1103a5060"/></to>
    </wire>
    <wire loc="9:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x111542c18"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x1108fc568"/></to>
    </wire>
    <wire loc="60:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x111592988"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x111589b70"/></to>
    </wire>
    <wire loc="68:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x111588648"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x110f912a0"/></to>
    </wire>
    <wire loc="71:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x111575800"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x110f9d020"/></to>
    </wire>
    <wire loc="72:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x111570b10"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x110f9c1a0"/></to>
    </wire>
    <wire loc="73:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x11156ec98"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x110f97810"/></to>
    </wire>
    <wire loc="76:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x111576ba8"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x111000518"/></to>
    </wire>
    <wire loc="79:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x11156de68"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x111606da0"/></to>
    </wire>
    <wire loc="126:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x111606da0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x111139020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x11156cb28"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x111605a18"/></to>
    </wire>
    <wire loc="125:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x111605a18"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x111139cb0"/></to>
    </wire>
    <wire loc="81:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x111569520"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x111604470"/></to>
    </wire>
    <wire loc="129:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x111604470"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x111569bf0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x111603d30"/></to>
    </wire>
    <wire loc="133:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x111603d30"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x111568a90"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x1116013a0"/></to>
    </wire>
    <wire loc="134:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x1116013a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x1115671d8"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x111600c50"/></to>
    </wire>
    <wire loc="138:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x111600c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x11156ac20"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x111663a88"/></to>
    </wire>
    <wire loc="151:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x111663a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x11156b528"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x11164b780"/></to>
    </wire>
    <wire loc="196:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x11164b780"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x111138c00"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x11156a3b0"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x11164f2e8"/></to>
    </wire>
    <wire loc="186:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x11164f2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111135020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x111567ad8"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x1116642e8"/></to>
    </wire>
    <wire loc="148:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x1116642e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x111566aa8"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x111661c10"/></to>
    </wire>
    <wire loc="155:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x111661c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x1115653d0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x111660470"/></to>
    </wire>
    <wire loc="156:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x111660470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x1115663a8"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x111667678"/></to>
    </wire>
    <wire loc="142:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x111667678"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x111564d48"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x11164da88"/></to>
    </wire>
    <wire loc="191:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x11164da88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111135020"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="93:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x111565c00"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x11164e2e8"/></to>
    </wire>
    <wire loc="188:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x11164e2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111135020"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x111564500"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x11164ea88"/></to>
    </wire>
    <wire loc="189:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x11164ea88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111135020"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="96:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x1115c8e78"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x111600638"/></to>
    </wire>
    <wire loc="137:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x111600638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x1115c5580"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x1116019b8"/></to>
    </wire>
    <wire loc="135:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x1116019b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x1115683a0"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x111603718"/></to>
    </wire>
    <wire loc="132:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x111603718"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="101:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x1115c6e10"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x11163b4b8"/></to>
    </wire>
    <wire loc="63:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x11163b4b8"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x111634330"/></to>
    </wire>
    <wire loc="104:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x111584628"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x1116ed8b0"/></to>
    </wire>
    <wire loc="105:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x1115834d8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x1116e9310"/></to>
    </wire>
    <wire loc="106:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x111581150"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x1116e4d80"/></to>
    </wire>
    <wire loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x1116e4d80"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x1116d8d08"/></to>
    </wire>
    <wire loc="107:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x111576020"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x1116df870"/></to>
    </wire>
    <wire loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x1116df870"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x11173c6c8"/></to>
    </wire>
    <wire loc="110:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x1115c9770"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x110af1ba8"/></to>
    </wire>
    <wire loc="153:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x111662a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x111603100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x111665a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x111659c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x111660c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x11164c2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111135020"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x111654470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x111664a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x11165a470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x11165cc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x11165e470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x1116682e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x111653a38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x111668a00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x11164fa88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111135020"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x111600020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x111655c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x1116632e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x111604a88"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x111656c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x111657470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x111655470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x11165b470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x111657c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x111650a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111135020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x11165d470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x11164ca88"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x111138c00"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x1116652e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x1116622e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x11165ac10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x11165ec10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x111659470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x111661470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x111667060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x111667c90"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x1116502e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111135020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x111652a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111135020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x1116522e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x11164d2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111135020"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x11165bc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x111656470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x11165dc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x11165c470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x111654c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="DisableFifoP" scoped="" ref="0x111637d80"/></from>
      <to><interface-ref name="DisableFifoP" scoped="" ref="0x11169da80"/></to>
    </wire>
    <wire loc="60:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x111688a98"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x110af1ba8"/></to>
    </wire>
    <wire loc="71:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x11169c368"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x110f9c1a0"/></to>
    </wire>
    <wire loc="72:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x11169b500"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x110f9b378"/></to>
    </wire>
    <wire loc="73:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x11169a690"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x110f9a508"/></to>
    </wire>
    <wire loc="74:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x1116998a8"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x111004d08"/></to>
    </wire>
    <wire loc="75:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x111697538"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x11174bc60"/></to>
    </wire>
    <wire loc="126:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x11174bc60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x111139020"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x111696390"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x111796a88"/></to>
    </wire>
    <wire loc="195:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x111796a88"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x111138c00"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x1116958e0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x111745638"/></to>
    </wire>
    <wire loc="137:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x111745638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x1116950f0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x1117442e8"/></to>
    </wire>
    <wire loc="139:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x1117442e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x111694020"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x1116ed8b0"/></to>
    </wire>
    <wire loc="80:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x111694e48"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x1116e9310"/></to>
    </wire>
    <wire loc="81:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x111691870"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x1116e4d80"/></to>
    </wire>
    <wire loc="82:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x1116937d8"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x110ec3af8"/></to>
    </wire>
    <wire loc="84:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x11168db48"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x1117abc10"/></to>
    </wire>
    <wire loc="155:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x1117abc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x11168c558"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x1117aa470"/></to>
    </wire>
    <wire loc="156:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x1117aa470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x11168d448"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x111743060"/></to>
    </wire>
    <wire loc="141:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x111743060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x11168a020"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x1117962e8"/></to>
    </wire>
    <wire loc="192:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x1117962e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111135020"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x11168cd88"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x1117982e8"/></to>
    </wire>
    <wire loc="188:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x1117982e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111135020"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x11168b650"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x111798a88"/></to>
    </wire>
    <wire loc="189:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x111798a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111135020"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x11168a888"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x111799a88"/></to>
    </wire>
    <wire loc="187:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x111799a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111135020"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x111689398"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x1117492e8"/></to>
    </wire>
    <wire loc="129:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x1117492e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="ChaseListen" scoped="" ref="0x1116899e0"/></from>
      <to><interface-ref name="ChaseListen" scoped="" ref="0x110df65c0"/></to>
    </wire>
    <wire loc="98:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="DisableRx" scoped="" ref="0x111688308"/></from>
      <to><interface-ref name="DisableRx" scoped="" ref="0x11158f0d0"/></to>
    </wire>
    <wire loc="156:../../chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x11167b3f8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10fe4eca0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x1116e4398"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x1116d8320"/></to>
    </wire>
    <wire loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x1116e3c58"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x1116d4bf0"/></to>
    </wire>
    <wire loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x1116ea850"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x1116d9020"/></to>
    </wire>
    <wire loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x111757230"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x110f75520"/></to>
    </wire>
    <wire loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x11173a1d8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x111758020"/></to>
    </wire>
    <wire loc="69:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x111739438"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x110c8fae8"/></to>
    </wire>
    <wire loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x111752020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x110c5f7d8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x1117aca88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x111748020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x111742a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x1117a3c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x1117aac10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x1117472e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x11179e470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x1117992e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111135020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x111740a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x11173fa88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x1117a4470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x1117a6c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x1117a9470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x11174a8c8"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x111139cb0"/></to>
    </wire>
    <wire loc="138:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x111745c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x11179da38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x111744a00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x111745020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x11179fc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x11173f2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x1117402e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x111749900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x1117a0c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x1117a2470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x11179f470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x111797a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111135020"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x1117a5470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x1117a2c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x11179ba88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111135020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x1117a7470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x1117422e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x1117ac2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x1117a4c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x1117a9c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x1117a3470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x1117ab470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x111748638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x111743c90"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x11179b2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111135020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x11179ca88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111135020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x11179c2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x1117972e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111135020"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x1117a5c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x1117a0470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x111748c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x111747900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x1117a7c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x111743678"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x1117a6470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x11179ec10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111135d60"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x111795780"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x111138c00"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="103:../../net/ChaseP.nc">
      <from><interface-ref name="cc2420_begin_rec" scoped="" ref="0x111834020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10fe4eca0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="113:../../net/ChaseP.nc">
      <from><interface-ref name="radio_stop" scoped="" ref="0x11182f3f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10fe4eca0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="102:../../net/ChaseP.nc">
      <from><interface-ref name="pkt_resend" scoped="" ref="0x111835100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10fe4eca0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="96:../../net/ChaseP.nc">
      <from><interface-ref name="signal_classify" scoped="" ref="0x111839298"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10fe4eca0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="104:../../net/ChaseP.nc">
      <from><interface-ref name="start_rand_ippi" scoped="" ref="0x111834e60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10fe4eca0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="112:../../net/ChaseP.nc">
      <from><interface-ref name="radio_start" scoped="" ref="0x1118305a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10fe4eca0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../net/ChaseP.nc">
      <from><interface-ref name="signal_detect" scoped="" ref="0x11183a298"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10fe4eca0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="100:../../net/ChaseP.nc">
      <from><interface-ref name="pkt_send_init" scoped="" ref="0x111838350"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10fe4eca0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="101:../../net/ChaseP.nc">
      <from><interface-ref name="pkt_send" scoped="" ref="0x111836298"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10fe4eca0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x1119b19d8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x110583190"/></to>
    </wire>
    <wire loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x1119af0a0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x11057d0d0"/></to>
    </wire>
    <wire loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x11237d2c8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x11191c5d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x11237de80"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x110583190"/></to>
    </wire>
    <wire loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x11191c5d8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x11194a920"/></to>
    </wire>
    <wire loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x1119496f8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x1105559d0"/></to>
    </wire>
    <wire loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x1119483f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x110583190"/></to>
    </wire>
    <wire loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x111947a10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x11056e9f8"/></to>
    </wire>
    <wire loc="169:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x111946780"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10fe4eca0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x111945020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10fe4eca0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x111a064e8"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x111a31c28"/></to>
    </wire>
    <wire loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x111a01cc8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x1119bf398"/></to>
    </wire>
    <wire loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x1119bf398"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x1123ddd00"/></to>
    </wire>
    <wire loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x111a00948"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x1119be020"/></to>
    </wire>
    <wire loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x1119be020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x11056e9f8"/></to>
    </wire>
    <wire loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x111a5a400"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x111a04c10"/></to>
    </wire>
    <wire loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x1119bebd8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x110583190"/></to>
    </wire>
    <wire loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x111a342a8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x11057d0d0"/></to>
    </wire>
    <wire loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x1123dc968"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x11191c5d8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x1123db578"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x110583190"/></to>
    </wire>
    <wire loc="114:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/PrintfP.nc">
      <from><interface-ref name="retrySend" scoped="" ref="0x1119fa9a8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10fe4eca0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x111a59c98"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x111a5a400"/></to>
    </wire>
    <wire loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/SerialStartC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x111a51358"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x110342940"/></to>
    </wire>
    <wire loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/SerialStartC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x111a51a38"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x11050bdc0"/></to>
    </wire>
    <wire loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x111a48888"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x110583190"/></to>
    </wire>
    <wire loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x111a46020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x11057d0d0"/></to>
    </wire>
    <wire loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x11245bda0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x11191c5d8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x1124599d8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x110583190"/></to>
    </wire>
    <wire loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x111a42020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x110583190"/></to>
    </wire>
    <wire loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x111a415b8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x11057d0d0"/></to>
    </wire>
    <wire loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x1124425d8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x11191c5d8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x112441268"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x110583190"/></to>
    </wire>
    <wire loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x111a3c888"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x110583190"/></to>
    </wire>
    <wire loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x111a3a020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x11057d0d0"/></to>
    </wire>
    <wire loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x11242bab0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x11191c5d8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x112429700"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x110583190"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/MainC.nc">
      <documentation loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="41(Msp430Uart1P.UartP):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b0150"/>
            <typename><typedef-ref name="T32khz" ref="0x1107b04a8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ChaseTestAppC.floodTimer" loc="44(ChaseTestAppC.floodTimer):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliP.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b0150"/>
            <typename><typedef-ref name="T32khz" ref="0x1107b04a8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b1990"/>
            <typename><typedef-ref name="TMilli" ref="0x1107b1ce8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fbc6020"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b0150"/>
            <typename><typedef-ref name="T32khz" ref="0x1107b04a8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fbc6020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b1990"/>
            <typename><typedef-ref name="TMilli" ref="0x1107b1ce8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fbc6020"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b0150"/>
            <typename><typedef-ref name="T32khz" ref="0x1107b04a8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b1990"/>
            <typename><typedef-ref name="TMilli" ref="0x1107b1ce8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b1990"/>
            <typename><typedef-ref name="TMilli" ref="0x1107b1ce8"/></typename>
          </type-tag>
          <value cst="I:6">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b1990"/>
            <typename><typedef-ref name="TMilli" ref="0x1107b1ce8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ChaseTestAppC.dcTimer" loc="44(ChaseTestAppC.dcTimer):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard&#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard&#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative&#10;  linear congruential generator,&#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1)&#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt&#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ChaseC" loc="6:../../net/ChaseC.nc">
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:../../chips/cc2420/csma/CC2420CsmaC.nc">
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:../../chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b0150"/>
            <typename><typedef-ref name="T32khz" ref="0x1107b04a8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b0150"/>
            <typename><typedef-ref name="T32khz" ref="0x1107b04a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fbc6020"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b0150"/>
            <typename><typedef-ref name="T32khz" ref="0x1107b04a8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b0150"/>
            <typename><typedef-ref name="T32khz" ref="0x1107b04a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fbc6020"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b0150"/>
            <typename><typedef-ref name="T32khz" ref="0x1107b04a8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="38(HplCC2420InterruptsC.CaptureSFDC):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/StateC.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/StateImplC.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/StateImplP.nc" safe="">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <documentation loc="31:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.8 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b08b8"/>
            <typename><typedef-ref name="TMicro" ref="0x1107b0c10"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b08b8"/>
            <typename><typedef-ref name="TMicro" ref="0x1107b0c10"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b0150"/>
            <typename><typedef-ref name="T32khz" ref="0x1107b04a8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/StateC.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ChaseC.sleepTimer" loc="44(ChaseC.sleepTimer):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ChaseC.delayTimer" loc="44(ChaseC.delayTimer):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ChaseC.randTimer" loc="44(ChaseC.randTimer):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ChaseP" loc="11:../../net/ChaseP.nc">
      <module/>
    </component>
    <component qname="ChaseC.TailSend" loc="47(ChaseC.TailSend):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:99">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ChaseC.TailSend.AMQueueEntryP" loc="43(ChaseC.TailSend.AMQueueEntryP):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x1104f73b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ChaseTestC" loc="5:ChaseTestC.nc">
      <module/>
    </component>
    <component qname="PrintfC.SerialAMSenderC" loc="47(PrintfC.SerialAMSenderC):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:100">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PrintfC.SerialAMSenderC.AMQueueEntryP" loc="43(PrintfC.SerialAMSenderC.AMQueueEntryP):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x1104f73b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfC.QueueC" loc="42(PrintfC.QueueC):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/QueueC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
          </type-int>
          <value cst="I:250">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfP" loc="87:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/PrintfP.nc" safe="">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PutcharC" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/PutcharC.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/PutcharP.nc">
      <documentation loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/PutcharP.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialStartP" loc="37:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/SerialStartP.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/SerialStartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Thomas Schmid&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ChaseTestAppC.floodSerialSend" loc="47(ChaseTestAppC.floodSerialSend):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:22">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ChaseTestAppC.floodSerialSend.AMQueueEntryP" loc="43(ChaseTestAppC.floodSerialSend.AMQueueEntryP):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x1104f73b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ChaseTestAppC.delaySerialSend" loc="47(ChaseTestAppC.delaySerialSend):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:44">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ChaseTestAppC.delaySerialSend.AMQueueEntryP" loc="43(ChaseTestAppC.delaySerialSend.AMQueueEntryP):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x1104f73b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ChaseTestAppC.energySerialSend" loc="47(ChaseTestAppC.energySerialSend):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:77">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ChaseTestAppC.energySerialSend.AMQueueEntryP" loc="43(ChaseTestAppC.energySerialSend.AMQueueEntryP):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x1104f73b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerP" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x1103e8898" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x1103e8c10" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x1103e7020" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x1103e7378" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x1103e76d0" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x1103e7a20" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x1103e7d88" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x1103e5150" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x1103e5500" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x11042c950" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x11042cd00" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x110985998" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x110985d20" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x110984108" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x110984490" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x1109847e0" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x110ae6d38" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x110ae6d38"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x110b7d5a0" loc="89:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x110bae170" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x110bd5aa0" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x110cdaa38" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x110cdaa38"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x110ce7550" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x110ce7550"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x110ce7cb8" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x110ce7cb8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x110ce60a8" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x110ce60a8"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x110ce6820" loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x110ce6820"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x110ce6bc8" loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x110ce5380" loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x110ce5380"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x110d0a020" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x110d0a020"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x110d0a788" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x110d0a788"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x110d0ab50" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x110d0ab50"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x110d08348" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x110d08348"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x110d086f0" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x110d55068" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x110d55068"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x110d6b4e0" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x110d6b4e0"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x110d6b7f0" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x110df1510" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x110df1510"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="GpioCaptureC" loc="38:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/StateC.nc" abstract="">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <documentation loc="31:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x111501d00" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x111501d00"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x1114fe460" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1114fe460"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMSenderC" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x11193c920" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x1104f73b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x111932380" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x1104f73b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x11191a8a8" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/QueueC.nc" abstract="">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x111a32490" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x111a32490"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x111a327e8" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x110344d68" loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x110344d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1103430f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x110342940" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x110342940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x110342c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x110343cb0" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x110343cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x11033f0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x11033cc08" loc="6:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x11033cc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x11033b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x11033fe58" loc="4:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x11033fe58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x11033c1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x11033c568" loc="5:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x11033c568"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x11033c8b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x11033b370" loc="7:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x11033b370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x11033b6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x11033ebf8" loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x11033ebf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x110353020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x11033d458" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x11033d458"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x11033d7a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x11036e5c0" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x11036e5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x1103564b8"/>
        <function-ref name="initTimerB" scoped="" ref="0x11036ea98"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x11036ec20"/>
        <function-ref name="initTimerA" scoped="" ref="0x11036eda8"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x11036e910"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x110356020"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x1103561a8"/>
        <function-ref name="initClocks" scoped="" ref="0x110356330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x11035a2e8" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x11035a2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x11035a638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x11037c020" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x11037c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x11037ce28"/>
        <function-ref name="initTimerB" scoped="" ref="0x11037c4f8"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x11037c680"/>
        <function-ref name="initTimerA" scoped="" ref="0x11037c808"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x11037c370"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x11037c990"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x11037cb18"/>
        <function-ref name="initClocks" scoped="" ref="0x11037cca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x11037b188" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x11037b188"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x11037b4d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x11037d8f0" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x11037d8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x11037dc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x1103bad30" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x1103bad30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1103b30d8"/>
        <function-ref name="getControl" scoped="" ref="0x1103b3260"/>
        <function-ref name="enableEvents" scoped="" ref="0x1103b33e8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1103b3570"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1103b36f8"/>
        <function-ref name="disableEvents" scoped="" ref="0x1103b3880"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1103b3a08"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1103b3b90"/>
        <function-ref name="setControl" scoped="" ref="0x1103b3d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x1103c3d30" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x1103c3d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1103c20d8"/>
        <function-ref name="getControl" scoped="" ref="0x1103c2260"/>
        <function-ref name="enableEvents" scoped="" ref="0x1103c23e8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1103c2570"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1103c26f8"/>
        <function-ref name="disableEvents" scoped="" ref="0x1103c2880"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1103c2a08"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1103c2b90"/>
        <function-ref name="setControl" scoped="" ref="0x1103c2d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x1103cb558" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x1103cb558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1103cb8a8"/>
        <function-ref name="setSynchronous" scoped="" ref="0x1103cba30"/>
        <function-ref name="captured" scoped="" ref="0x1103cbbb8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1103cbd40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1103ca020"/>
        <function-ref name="setEdge" scoped="" ref="0x1103ca1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x1103cf020" loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x1103cf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1103cf370"/>
        <function-ref name="setSynchronous" scoped="" ref="0x1103cf4f8"/>
        <function-ref name="captured" scoped="" ref="0x1103cf680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1103cf808"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1103cf990"/>
        <function-ref name="setEdge" scoped="" ref="0x1103cfb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x1103b1e60" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x1103b1e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1103b01e8"/>
        <function-ref name="setEvent" scoped="" ref="0x1103b0370"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1103b04f8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1103b0680"/>
        <function-ref name="fired" scoped="" ref="0x1103b0808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x1103d66e0" loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x1103d66e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1103d6a30"/>
        <function-ref name="setEvent" scoped="" ref="0x1103d6bb8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1103d6d40"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1103d5020"/>
        <function-ref name="fired" scoped="" ref="0x1103d51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x1103ec020" loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x1103ec020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1103ec370"/>
        <function-ref name="setSynchronous" scoped="" ref="0x1103ec4f8"/>
        <function-ref name="captured" scoped="" ref="0x1103ec680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1103ec808"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1103ec990"/>
        <function-ref name="setEdge" scoped="" ref="0x1103ecb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x1103dc060" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x1103dc060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1103dc3b0"/>
        <function-ref name="getControl" scoped="" ref="0x1103dc538"/>
        <function-ref name="enableEvents" scoped="" ref="0x1103dc6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1103dc848"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1103dc9d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x1103dcb58"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1103dcce0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1103dce68"/>
        <function-ref name="setControl" scoped="" ref="0x1103db020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x1103b44d0" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x1103b44d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1103b4820"/>
        <function-ref name="getControl" scoped="" ref="0x1103b49a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x1103b4b30"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1103b4cb8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1103b4e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x1103bb020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1103bb1a8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1103bb330"/>
        <function-ref name="setControl" scoped="" ref="0x1103bb4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x1103d1020" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x1103d1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1103d1370"/>
        <function-ref name="setSynchronous" scoped="" ref="0x1103d14f8"/>
        <function-ref name="captured" scoped="" ref="0x1103d1680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1103d1808"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1103d1990"/>
        <function-ref name="setEdge" scoped="" ref="0x1103d1b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x1103d8a70" loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x1103d8a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1103d8dc0"/>
        <function-ref name="setEvent" scoped="" ref="0x1103d7020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1103d71a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1103d7330"/>
        <function-ref name="fired" scoped="" ref="0x1103d74b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x1103c1120" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x1103c1120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1103c1570"/>
        <function-ref name="getControl" scoped="" ref="0x1103c16f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x1103c1880"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1103c1a08"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1103c1b90"/>
        <function-ref name="disableEvents" scoped="" ref="0x1103c1d18"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1103c0020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1103c01a8"/>
        <function-ref name="setControl" scoped="" ref="0x1103c0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x1103ca558" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x1103ca558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1103ca8a8"/>
        <function-ref name="setSynchronous" scoped="" ref="0x1103caa30"/>
        <function-ref name="captured" scoped="" ref="0x1103cabb8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1103cad40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1103c4020"/>
        <function-ref name="setEdge" scoped="" ref="0x1103c41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x1103ce020" loc="69:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x1103ce020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1103ce370"/>
        <function-ref name="setSynchronous" scoped="" ref="0x1103ce4f8"/>
        <function-ref name="captured" scoped="" ref="0x1103ce680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1103ce808"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1103ce990"/>
        <function-ref name="setEdge" scoped="" ref="0x1103ceb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x1103c0710" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x1103c0710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1103c0a60"/>
        <function-ref name="getControl" scoped="" ref="0x1103c0be8"/>
        <function-ref name="enableEvents" scoped="" ref="0x1103c0d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1103bf020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1103bf1a8"/>
        <function-ref name="disableEvents" scoped="" ref="0x1103bf330"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1103bf4b8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1103bf640"/>
        <function-ref name="setControl" scoped="" ref="0x1103bf7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x1103b0bb8" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x1103b0bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1103cc020"/>
        <function-ref name="setEvent" scoped="" ref="0x1103cc1a8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1103cc330"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1103cc4b8"/>
        <function-ref name="fired" scoped="" ref="0x1103cc640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x1103a5060" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x1103a5060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1103a53b0"/>
        <function-ref name="setClockSource" scoped="" ref="0x1103a5538"/>
        <function-ref name="enableEvents" scoped="" ref="0x1103a56c0"/>
        <function-ref name="get" scoped="" ref="0x1103a5848"/>
        <function-ref name="disableEvents" scoped="" ref="0x1103a59d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1103a5b58"/>
        <function-ref name="getMode" scoped="" ref="0x1103a5ce0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1103a5e68"/>
        <function-ref name="overflow" scoped="" ref="0x1103a4020"/>
        <function-ref name="setMode" scoped="" ref="0x1103a41a8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x1103a4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x1103d5558" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x1103d5558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1103d58a8"/>
        <function-ref name="setEvent" scoped="" ref="0x1103d5a30"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1103d5bb8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1103d5d40"/>
        <function-ref name="fired" scoped="" ref="0x1103d4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x1103bb898" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x1103bb898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1103bbbe8"/>
        <function-ref name="getControl" scoped="" ref="0x1103bbd70"/>
        <function-ref name="enableEvents" scoped="" ref="0x1103ba020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1103ba1a8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1103ba330"/>
        <function-ref name="disableEvents" scoped="" ref="0x1103ba4b8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1103ba640"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1103ba7c8"/>
        <function-ref name="setControl" scoped="" ref="0x1103ba950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x1103db400" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x1103db400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1103db750"/>
        <function-ref name="getControl" scoped="" ref="0x1103db8d8"/>
        <function-ref name="enableEvents" scoped="" ref="0x1103dba60"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1103dbbe8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1103dbd70"/>
        <function-ref name="disableEvents" scoped="" ref="0x1103da020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1103da1a8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1103da330"/>
        <function-ref name="setControl" scoped="" ref="0x1103da4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x1103c5668" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x1103c5668"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1103c59b8"/>
        <function-ref name="setSynchronous" scoped="" ref="0x1103c5b40"/>
        <function-ref name="captured" scoped="" ref="0x1103c5cc8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1103c5e50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1103cb020"/>
        <function-ref name="setEdge" scoped="" ref="0x1103cb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x1103d0020" loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x1103d0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1103d0370"/>
        <function-ref name="setSynchronous" scoped="" ref="0x1103d04f8"/>
        <function-ref name="captured" scoped="" ref="0x1103d0680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1103d0808"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1103d0990"/>
        <function-ref name="setEdge" scoped="" ref="0x1103d0b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x1103b1140" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x1103b1140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1103b1490"/>
        <function-ref name="setEvent" scoped="" ref="0x1103b1618"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1103b17a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1103b1928"/>
        <function-ref name="fired" scoped="" ref="0x1103b1ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x1103d7868" loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x1103d7868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1103d7bb8"/>
        <function-ref name="setEvent" scoped="" ref="0x1103d7d40"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1103d6020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1103d61a8"/>
        <function-ref name="fired" scoped="" ref="0x1103d6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x1103ed020" loc="70:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x1103ed020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1103ed370"/>
        <function-ref name="setSynchronous" scoped="" ref="0x1103ed4f8"/>
        <function-ref name="captured" scoped="" ref="0x1103ed680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1103ed808"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1103ed990"/>
        <function-ref name="setEdge" scoped="" ref="0x1103edb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x1103bfba8" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x1103bfba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1103dd020"/>
        <function-ref name="getControl" scoped="" ref="0x1103dd1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x1103dd330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1103dd4b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1103dd640"/>
        <function-ref name="disableEvents" scoped="" ref="0x1103dd7c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1103dd950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1103ddad8"/>
        <function-ref name="setControl" scoped="" ref="0x1103ddc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x1103c4520" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x1103c4520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1103c4870"/>
        <function-ref name="setClockSource" scoped="" ref="0x1103c49f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x1103c4b80"/>
        <function-ref name="get" scoped="" ref="0x1103c4d08"/>
        <function-ref name="disableEvents" scoped="" ref="0x1103c3020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1103c31a8"/>
        <function-ref name="getMode" scoped="" ref="0x1103c3330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1103c34b8"/>
        <function-ref name="overflow" scoped="" ref="0x1103c3640"/>
        <function-ref name="setMode" scoped="" ref="0x1103c37c8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x1103c3950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x1103d43d0" loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x1103d43d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1103d4720"/>
        <function-ref name="setEvent" scoped="" ref="0x1103d48a8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1103d4a30"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1103d4bb8"/>
        <function-ref name="fired" scoped="" ref="0x1103d4d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x1103d2060" loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x1103d2060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1103d23b0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x1103d2538"/>
        <function-ref name="captured" scoped="" ref="0x1103d26c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1103d2848"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1103d29d0"/>
        <function-ref name="setEdge" scoped="" ref="0x1103d2b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x1103d3120" loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x1103d3120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1103d3670"/>
        <function-ref name="setEvent" scoped="" ref="0x1103d37f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1103d3980"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1103d3b08"/>
        <function-ref name="fired" scoped="" ref="0x1103d3c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x1103d9d00" loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x1103d9d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1103d80a0"/>
        <function-ref name="setEvent" scoped="" ref="0x1103d8228"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1103d83b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1103d8538"/>
        <function-ref name="fired" scoped="" ref="0x1103d86c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x1103da898" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x1103da898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1103dabe8"/>
        <function-ref name="getControl" scoped="" ref="0x1103dad70"/>
        <function-ref name="enableEvents" scoped="" ref="0x1103d9020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1103d91a8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1103d9330"/>
        <function-ref name="disableEvents" scoped="" ref="0x1103d94b8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1103d9640"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1103d97c8"/>
        <function-ref name="setControl" scoped="" ref="0x1103d9950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x110416c70" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x110416c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x110415020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x110416658" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x110416658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1104169a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x1104152e8" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x1104152e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x110415638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x110416020" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x110416020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x110416390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x110418798" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x110418798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x110418ae8"/>
        <function-ref name="setClockSource" scoped="" ref="0x110418c70"/>
        <function-ref name="enableEvents" scoped="" ref="0x110418df8"/>
        <function-ref name="get" scoped="" ref="0x110417020"/>
        <function-ref name="disableEvents" scoped="" ref="0x1104171a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110417330"/>
        <function-ref name="getMode" scoped="" ref="0x1104174b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110417640"/>
        <function-ref name="overflow" scoped="" ref="0x1104177c8"/>
        <function-ref name="setMode" scoped="" ref="0x110417950"/>
        <function-ref name="setInputDivider" scoped="" ref="0x110417ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x11040e638" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x11040e638"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x11040e988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x11040e020" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x11040e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x11040e370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x11040ec50" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x11040ec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x11042d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x11040f8a0" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x11040f8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x11040fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x1104101e8" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x1104101e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x110410538"/>
        <function-ref name="setClockSource" scoped="" ref="0x1104106c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x110410848"/>
        <function-ref name="get" scoped="" ref="0x1104109d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x110410b58"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110410ce0"/>
        <function-ref name="getMode" scoped="" ref="0x110410e68"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x11040f020"/>
        <function-ref name="overflow" scoped="" ref="0x11040f1a8"/>
        <function-ref name="setMode" scoped="" ref="0x11040f330"/>
        <function-ref name="setInputDivider" scoped="" ref="0x11040f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x11046cc58" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x11046cc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x11046b020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x11046b1a8"/>
        <function-ref name="captured" scoped="" ref="0x11046b330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x11046b4b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x11046b640"/>
        <function-ref name="setEdge" scoped="" ref="0x11046b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x11042ac80" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x11042ac80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x11046d020"/>
        <function-ref name="getControl" scoped="" ref="0x11046d1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x11046d330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x11046d4b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x11046d640"/>
        <function-ref name="disableEvents" scoped="" ref="0x11046d7c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x11046d950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x11046dad8"/>
        <function-ref name="setControl" scoped="" ref="0x11046dc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x110469100" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x110469100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x110469450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x11046c020" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x11046c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x11046c370"/>
        <function-ref name="setEvent" scoped="" ref="0x11046c4f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x11046c680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x11046c808"/>
        <function-ref name="fired" scoped="" ref="0x11046c990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x11046ba90" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x11046ba90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x11046bde0"/>
        <function-ref name="setClockSource" scoped="" ref="0x11046a020"/>
        <function-ref name="enableEvents" scoped="" ref="0x11046a1a8"/>
        <function-ref name="get" scoped="" ref="0x11046a330"/>
        <function-ref name="disableEvents" scoped="" ref="0x11046a4b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x11046a640"/>
        <function-ref name="getMode" scoped="" ref="0x11046a7c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x11046a950"/>
        <function-ref name="overflow" scoped="" ref="0x11046aad8"/>
        <function-ref name="setMode" scoped="" ref="0x11046ac60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x11046ade8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x110465c58" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x110465c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x110464020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x1104641a8"/>
        <function-ref name="captured" scoped="" ref="0x110464330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1104644b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110464640"/>
        <function-ref name="setEdge" scoped="" ref="0x1104647c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x110467c80" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x110467c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x110466020"/>
        <function-ref name="getControl" scoped="" ref="0x1104661a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x110466330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1104664b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x110466640"/>
        <function-ref name="disableEvents" scoped="" ref="0x1104667c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x110466950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x110466ad8"/>
        <function-ref name="setControl" scoped="" ref="0x110466c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x110461100" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x110461100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x110461450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x110465020" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x110465020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x110465370"/>
        <function-ref name="setEvent" scoped="" ref="0x1104654f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x110465680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x110465808"/>
        <function-ref name="fired" scoped="" ref="0x110465990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x110464a90" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x110464a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x110464de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x110462020"/>
        <function-ref name="enableEvents" scoped="" ref="0x1104621a8"/>
        <function-ref name="get" scoped="" ref="0x110462330"/>
        <function-ref name="disableEvents" scoped="" ref="0x1104624b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110462640"/>
        <function-ref name="getMode" scoped="" ref="0x1104627c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110462950"/>
        <function-ref name="overflow" scoped="" ref="0x110462ad8"/>
        <function-ref name="setMode" scoped="" ref="0x110462c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x110462de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x11047fc58" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x11047fc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x11047e020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x11047e1a8"/>
        <function-ref name="captured" scoped="" ref="0x11047e330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x11047e4b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x11047e640"/>
        <function-ref name="setEdge" scoped="" ref="0x11047e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x110481c80" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x110481c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x110480020"/>
        <function-ref name="getControl" scoped="" ref="0x1104801a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x110480330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1104804b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x110480640"/>
        <function-ref name="disableEvents" scoped="" ref="0x1104807c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x110480950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x110480ad8"/>
        <function-ref name="setControl" scoped="" ref="0x110480c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x11047c100" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x11047c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x11047c450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x11047f020" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x11047f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x11047f370"/>
        <function-ref name="setEvent" scoped="" ref="0x11047f4f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x11047f680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x11047f808"/>
        <function-ref name="fired" scoped="" ref="0x11047f990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x11047ea90" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x11047ea90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x11047ede0"/>
        <function-ref name="setClockSource" scoped="" ref="0x11047d020"/>
        <function-ref name="enableEvents" scoped="" ref="0x11047d1a8"/>
        <function-ref name="get" scoped="" ref="0x11047d330"/>
        <function-ref name="disableEvents" scoped="" ref="0x11047d4b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x11047d640"/>
        <function-ref name="getMode" scoped="" ref="0x11047d7c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x11047d950"/>
        <function-ref name="overflow" scoped="" ref="0x11047dad8"/>
        <function-ref name="setMode" scoped="" ref="0x11047dc60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x11047dde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x110478c58" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x110478c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x110477020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x1104771a8"/>
        <function-ref name="captured" scoped="" ref="0x110477330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1104774b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110477640"/>
        <function-ref name="setEdge" scoped="" ref="0x1104777c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x11047ac80" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x11047ac80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x110479020"/>
        <function-ref name="getControl" scoped="" ref="0x1104791a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x110479330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1104794b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x110479640"/>
        <function-ref name="disableEvents" scoped="" ref="0x1104797c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x110479950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x110479ad8"/>
        <function-ref name="setControl" scoped="" ref="0x110479c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x110475100" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x110475100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x110475450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x110478020" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x110478020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x110478370"/>
        <function-ref name="setEvent" scoped="" ref="0x1104784f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x110478680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x110478808"/>
        <function-ref name="fired" scoped="" ref="0x110478990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x110477a90" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x110477a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x110477de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x110476020"/>
        <function-ref name="enableEvents" scoped="" ref="0x1104761a8"/>
        <function-ref name="get" scoped="" ref="0x110476330"/>
        <function-ref name="disableEvents" scoped="" ref="0x1104764b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110476640"/>
        <function-ref name="getMode" scoped="" ref="0x1104767c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110476950"/>
        <function-ref name="overflow" scoped="" ref="0x110476ad8"/>
        <function-ref name="setMode" scoped="" ref="0x110476c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x110476de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x110492c58" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x110492c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x110491020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x1104911a8"/>
        <function-ref name="captured" scoped="" ref="0x110491330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1104914b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110491640"/>
        <function-ref name="setEdge" scoped="" ref="0x1104917c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x110472c80" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x110472c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x110493020"/>
        <function-ref name="getControl" scoped="" ref="0x1104931a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x110493330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1104934b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x110493640"/>
        <function-ref name="disableEvents" scoped="" ref="0x1104937c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x110493950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x110493ad8"/>
        <function-ref name="setControl" scoped="" ref="0x110493c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x11048f100" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x11048f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x11048f450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x110492020" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x110492020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x110492370"/>
        <function-ref name="setEvent" scoped="" ref="0x1104924f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x110492680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x110492808"/>
        <function-ref name="fired" scoped="" ref="0x110492990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x110491a90" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x110491a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x110491de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x110490020"/>
        <function-ref name="enableEvents" scoped="" ref="0x1104901a8"/>
        <function-ref name="get" scoped="" ref="0x110490330"/>
        <function-ref name="disableEvents" scoped="" ref="0x1104904b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110490640"/>
        <function-ref name="getMode" scoped="" ref="0x1104907c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110490950"/>
        <function-ref name="overflow" scoped="" ref="0x110490ad8"/>
        <function-ref name="setMode" scoped="" ref="0x110490c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x110490de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x11048bc58" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x11048bc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x11048a020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x11048a1a8"/>
        <function-ref name="captured" scoped="" ref="0x11048a330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x11048a4b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x11048a640"/>
        <function-ref name="setEdge" scoped="" ref="0x11048a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x11048dc80" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x11048dc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x11048c020"/>
        <function-ref name="getControl" scoped="" ref="0x11048c1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x11048c330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x11048c4b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x11048c640"/>
        <function-ref name="disableEvents" scoped="" ref="0x11048c7c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x11048c950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x11048cad8"/>
        <function-ref name="setControl" scoped="" ref="0x11048cc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x110488100" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x110488100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x110488450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x11048b020" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x11048b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x11048b370"/>
        <function-ref name="setEvent" scoped="" ref="0x11048b4f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x11048b680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x11048b808"/>
        <function-ref name="fired" scoped="" ref="0x11048b990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x11048aa90" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x11048aa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x11048ade0"/>
        <function-ref name="setClockSource" scoped="" ref="0x110489020"/>
        <function-ref name="enableEvents" scoped="" ref="0x1104891a8"/>
        <function-ref name="get" scoped="" ref="0x110489330"/>
        <function-ref name="disableEvents" scoped="" ref="0x1104894b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110489640"/>
        <function-ref name="getMode" scoped="" ref="0x1104897c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110489950"/>
        <function-ref name="overflow" scoped="" ref="0x110489ad8"/>
        <function-ref name="setMode" scoped="" ref="0x110489c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x110489de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x110483c58" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x110483c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1104a4020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x1104a41a8"/>
        <function-ref name="captured" scoped="" ref="0x1104a4330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1104a44b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1104a4640"/>
        <function-ref name="setEdge" scoped="" ref="0x1104a47c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x110485c80" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x110485c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x110484020"/>
        <function-ref name="getControl" scoped="" ref="0x1104841a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x110484330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1104844b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x110484640"/>
        <function-ref name="disableEvents" scoped="" ref="0x1104847c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x110484950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x110484ad8"/>
        <function-ref name="setControl" scoped="" ref="0x110484c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x1104a2100" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x1104a2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1104a2450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x110483020" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x110483020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x110483370"/>
        <function-ref name="setEvent" scoped="" ref="0x1104834f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x110483680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x110483808"/>
        <function-ref name="fired" scoped="" ref="0x110483990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x1104a4a90" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x1104a4a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1104a4de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x1104a3020"/>
        <function-ref name="enableEvents" scoped="" ref="0x1104a31a8"/>
        <function-ref name="get" scoped="" ref="0x1104a3330"/>
        <function-ref name="disableEvents" scoped="" ref="0x1104a34b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1104a3640"/>
        <function-ref name="getMode" scoped="" ref="0x1104a37c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1104a3950"/>
        <function-ref name="overflow" scoped="" ref="0x1104a3ad8"/>
        <function-ref name="setMode" scoped="" ref="0x1104a3c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x1104a3de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x11049ec58" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x11049ec58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x11049d020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x11049d1a8"/>
        <function-ref name="captured" scoped="" ref="0x11049d330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x11049d4b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x11049d640"/>
        <function-ref name="setEdge" scoped="" ref="0x11049d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x1104a0c80" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x1104a0c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x11049f020"/>
        <function-ref name="getControl" scoped="" ref="0x11049f1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x11049f330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x11049f4b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x11049f640"/>
        <function-ref name="disableEvents" scoped="" ref="0x11049f7c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x11049f950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x11049fad8"/>
        <function-ref name="setControl" scoped="" ref="0x11049fc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x11049b100" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x11049b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x11049b450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x11049e020" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x11049e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x11049e370"/>
        <function-ref name="setEvent" scoped="" ref="0x11049e4f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x11049e680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x11049e808"/>
        <function-ref name="fired" scoped="" ref="0x11049e990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x11049da90" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x11049da90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x11049dde0"/>
        <function-ref name="setClockSource" scoped="" ref="0x11049c020"/>
        <function-ref name="enableEvents" scoped="" ref="0x11049c1a8"/>
        <function-ref name="get" scoped="" ref="0x11049c330"/>
        <function-ref name="disableEvents" scoped="" ref="0x11049c4b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x11049c640"/>
        <function-ref name="getMode" scoped="" ref="0x11049c7c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x11049c950"/>
        <function-ref name="overflow" scoped="" ref="0x11049cad8"/>
        <function-ref name="setMode" scoped="" ref="0x11049cc60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x11049cde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x110496c58" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x110496c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x110495020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x1104951a8"/>
        <function-ref name="captured" scoped="" ref="0x110495330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1104954b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110495640"/>
        <function-ref name="setEdge" scoped="" ref="0x1104957c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x110498c80" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x110498c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x110497020"/>
        <function-ref name="getControl" scoped="" ref="0x1104971a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x110497330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1104974b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x110497640"/>
        <function-ref name="disableEvents" scoped="" ref="0x1104977c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x110497950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x110497ad8"/>
        <function-ref name="setControl" scoped="" ref="0x110497c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x1104b6100" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x1104b6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1104b6450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x110496020" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x110496020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x110496370"/>
        <function-ref name="setEvent" scoped="" ref="0x1104964f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x110496680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x110496808"/>
        <function-ref name="fired" scoped="" ref="0x110496990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x110495a90" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x110495a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x110495de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x110494020"/>
        <function-ref name="enableEvents" scoped="" ref="0x1104941a8"/>
        <function-ref name="get" scoped="" ref="0x110494330"/>
        <function-ref name="disableEvents" scoped="" ref="0x1104944b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110494640"/>
        <function-ref name="getMode" scoped="" ref="0x1104947c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110494950"/>
        <function-ref name="overflow" scoped="" ref="0x110494ad8"/>
        <function-ref name="setMode" scoped="" ref="0x110494c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x110494de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x1104b2c58" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x1104b2c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1104b1020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x1104b11a8"/>
        <function-ref name="captured" scoped="" ref="0x1104b1330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1104b14b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1104b1640"/>
        <function-ref name="setEdge" scoped="" ref="0x1104b17c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x1104b4c80" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x1104b4c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1104b3020"/>
        <function-ref name="getControl" scoped="" ref="0x1104b31a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x1104b3330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1104b34b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1104b3640"/>
        <function-ref name="disableEvents" scoped="" ref="0x1104b37c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1104b3950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1104b3ad8"/>
        <function-ref name="setControl" scoped="" ref="0x1104b3c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x1104af100" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x1104af100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1104af450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x1104b2020" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x1104b2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1104b2370"/>
        <function-ref name="setEvent" scoped="" ref="0x1104b24f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1104b2680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1104b2808"/>
        <function-ref name="fired" scoped="" ref="0x1104b2990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x1104b1a90" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x1104b1a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1104b1de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x1104b0020"/>
        <function-ref name="enableEvents" scoped="" ref="0x1104b01a8"/>
        <function-ref name="get" scoped="" ref="0x1104b0330"/>
        <function-ref name="disableEvents" scoped="" ref="0x1104b04b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1104b0640"/>
        <function-ref name="getMode" scoped="" ref="0x1104b07c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1104b0950"/>
        <function-ref name="overflow" scoped="" ref="0x1104b0ad8"/>
        <function-ref name="setMode" scoped="" ref="0x1104b0c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x1104b0de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x1104a9b60" loc="7:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x1104a9b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1104a8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x1104ab520" loc="4:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x1104ab520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1104ab870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x1104abc68" loc="5:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x1104abc68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1104a9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x1104a9418" loc="6:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x1104a9418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1104a9768"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x1100f5020" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x1100f5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x1100f5370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x10fec23e0" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x10fec23e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x10fec2730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x1101c1838" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x1101c1838"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x1101c1b88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x110359ab8" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x110359ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x1104ea950"/>
        <function-ref name="initTimerB" scoped="" ref="0x1104ea020"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x1104ea1a8"/>
        <function-ref name="initTimerA" scoped="" ref="0x1104ea330"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x110359e08"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x1104ea4b8"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x1104ea640"/>
        <function-ref name="initClocks" scoped="" ref="0x1104ea7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x110502418" loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x110502418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x110502768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x110341c50" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x110341c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x1104eb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x1104ebce0" loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x1104ebce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1105020a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x1104eb308" loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x1104eb308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1104eb658"/>
        <function-ref name="taskLoop" scoped="" ref="0x1104eb7e0"/>
        <function-ref name="runNextTask" scoped="" ref="0x1104eb968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x10fe4eca0" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x10fe4eca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x10fe0d020"/>
        <function-ref name="runTask" scoped="" ref="0x10fe0d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x10fe47390" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x10fe47390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10fe476e0"/>
        <function-ref name="taskLoop" scoped="" ref="0x10fe47868"/>
        <function-ref name="runNextTask" scoped="" ref="0x10fe479f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x110302020" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x110302020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x110302370"/>
        <function-ref name="runTask" scoped="" ref="0x1103024f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x1102ff4e0" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x1102ff4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x1102ff830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x1103040c0" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x1103040c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x110304410"/>
        <function-ref name="taskLoop" scoped="" ref="0x110304598"/>
        <function-ref name="runNextTask" scoped="" ref="0x110304720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x11050bdc0" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x11050bdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x11050e170"/>
        <function-ref name="stopDone" scoped="" ref="0x11050e2f8"/>
        <function-ref name="start" scoped="" ref="0x11050e480"/>
        <function-ref name="stop" scoped="" ref="0x11050e608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x1105559d0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x1105559d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x1104f73b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x110555d20"/>
        <function-ref name="getPayload" scoped="" ref="0x11050d020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x11050d1a8"/>
        <function-ref name="cancel" scoped="" ref="0x11050d330"/>
        <function-ref name="sendDone" scoped="" ref="0x11050d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x11056e9f8" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x11056e9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x11056ed48"/>
        <function-ref name="payloadLength" scoped="" ref="0x11050a020"/>
        <function-ref name="getPayload" scoped="" ref="0x11050a1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x11050a330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x11050a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x1105535e0" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x1105535e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x1104f73b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x110553930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x11056f020" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x11056f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x11056f370"/>
        <function-ref name="led0Toggle" scoped="" ref="0x11056f4f8"/>
        <function-ref name="led1On" scoped="" ref="0x11056f680"/>
        <function-ref name="led1Toggle" scoped="" ref="0x11056f808"/>
        <function-ref name="led2Toggle" scoped="" ref="0x11056f990"/>
        <function-ref name="get" scoped="" ref="0x11056fb18"/>
        <function-ref name="led1Off" scoped="" ref="0x11056fca0"/>
        <function-ref name="led2Off" scoped="" ref="0x110582330"/>
        <function-ref name="set" scoped="" ref="0x11056fe28"/>
        <function-ref name="led0On" scoped="" ref="0x110582020"/>
        <function-ref name="led2On" scoped="" ref="0x1105821a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x11057d0d0" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x11057d0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x11057d420"/>
        <function-ref name="noAck" scoped="" ref="0x11057d5a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x11057d730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x110583190" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x110583190"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x1105834e0"/>
        <function-ref name="source" scoped="" ref="0x110583668"/>
        <function-ref name="address" scoped="" ref="0x1105837f0"/>
        <function-ref name="destination" scoped="" ref="0x110583978"/>
        <function-ref name="setSource" scoped="" ref="0x110583b00"/>
        <function-ref name="setDestination" scoped="" ref="0x110583c88"/>
        <function-ref name="type" scoped="" ref="0x110583e10"/>
        <function-ref name="setType" scoped="" ref="0x110557020"/>
        <function-ref name="isForMe" scoped="" ref="0x1105571a8"/>
        <function-ref name="setGroup" scoped="" ref="0x110557330"/>
        <function-ref name="localGroup" scoped="" ref="0x1105574b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x1105d7bb0" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x1105d7bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1105d6020"/>
        <function-ref name="getPayload" scoped="" ref="0x1105d61a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1105d6330"/>
        <function-ref name="cancel" scoped="" ref="0x1105d64b8"/>
        <function-ref name="sendDone" scoped="" ref="0x1105d6640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x1105d68c8" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x1105d68c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1105d6c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x110597b60" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x110597b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x1104f73b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1105da020"/>
        <function-ref name="getPayload" scoped="" ref="0x1105da1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1105da330"/>
        <function-ref name="cancel" scoped="" ref="0x1105da4b8"/>
        <function-ref name="sendDone" scoped="" ref="0x1105da640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x1105d8578" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x1105d8578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1105d88c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x1105d8a50"/>
        <function-ref name="getPayload" scoped="" ref="0x1105d8bd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1105d8d60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x1105d7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x1105da9a8" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x1105da9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x1104f73b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1105dad18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x1105d7268" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x1105d7268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x1105d75b8"/>
        <function-ref name="noAck" scoped="" ref="0x1105d7740"/>
        <function-ref name="wasAcked" scoped="" ref="0x1105d78c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x1105d9020" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x1105d9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x1105d9370"/>
        <function-ref name="source" scoped="" ref="0x1105d94f8"/>
        <function-ref name="address" scoped="" ref="0x1105d9680"/>
        <function-ref name="destination" scoped="" ref="0x1105d9808"/>
        <function-ref name="setSource" scoped="" ref="0x1105d9990"/>
        <function-ref name="setDestination" scoped="" ref="0x1105d9b18"/>
        <function-ref name="type" scoped="" ref="0x1105d9ca0"/>
        <function-ref name="setType" scoped="" ref="0x1105d9e28"/>
        <function-ref name="isForMe" scoped="" ref="0x1105d8020"/>
        <function-ref name="setGroup" scoped="" ref="0x1105d81a8"/>
        <function-ref name="localGroup" scoped="" ref="0x1105d8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x1105f92e8" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x1105f92e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x1105f9638"/>
        <function-ref name="stopDone" scoped="" ref="0x1105f97c0"/>
        <function-ref name="start" scoped="" ref="0x1105f9948"/>
        <function-ref name="stop" scoped="" ref="0x1105f9ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x1105f7ce8" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x1105f7ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x1104f6db0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1105f60a0"/>
        <function-ref name="getPayload" scoped="" ref="0x1105f6228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1105f63b0"/>
        <function-ref name="cancel" scoped="" ref="0x1105f6538"/>
        <function-ref name="sendDone" scoped="" ref="0x1105f66c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1105fcbb0" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1105fcbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1105f9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x1105f7270" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x1105f7270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x1104f6db0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1105f75c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x1105f55a8" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x1105f55a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x1105f58f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x1105f5a80"/>
        <function-ref name="led1On" scoped="" ref="0x1105f5c08"/>
        <function-ref name="led1Toggle" scoped="" ref="0x1105f5d90"/>
        <function-ref name="led2Toggle" scoped="" ref="0x1105f4020"/>
        <function-ref name="get" scoped="" ref="0x1105f41a8"/>
        <function-ref name="led1Off" scoped="" ref="0x1105f4330"/>
        <function-ref name="led2Off" scoped="" ref="0x1105f4950"/>
        <function-ref name="set" scoped="" ref="0x1105f44b8"/>
        <function-ref name="led0On" scoped="" ref="0x1105f4640"/>
        <function-ref name="led2On" scoped="" ref="0x1105f47c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x1105f1ba8" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x1105f1ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x1104f6db0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x1105f5020"/>
        <function-ref name="offset" scoped="" ref="0x1105f51a8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x1105f5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x1105e9d50" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x1105e9d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x1106100d8"/>
        <function-ref name="stopDone" scoped="" ref="0x110610260"/>
        <function-ref name="start" scoped="" ref="0x1106103e8"/>
        <function-ref name="stop" scoped="" ref="0x110610570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x110652dd0" loc="332:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x110652dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x110651170"/>
        <function-ref name="runTask" scoped="" ref="0x1106512f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x1105fdb00" loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x1105fdb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x1105fde50"/>
        <function-ref name="stop" scoped="" ref="0x1105ff020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x1106338e0" loc="191:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x1106338e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x110633c30"/>
        <function-ref name="runTask" scoped="" ref="0x110633db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1105e9738" loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1105e9738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1105e9a88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x110622608" loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x110622608"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x110622958"/>
        <function-ref name="flush" scoped="" ref="0x110622ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x110654590" loc="322:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x110654590"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1106548e0"/>
        <function-ref name="runTask" scoped="" ref="0x110654a68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x110601da8" loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x110601da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x110609170"/>
        <function-ref name="resetSend" scoped="" ref="0x1106092f8"/>
        <function-ref name="dataReceived" scoped="" ref="0x110609480"/>
        <function-ref name="resetReceive" scoped="" ref="0x110609608"/>
        <function-ref name="putData" scoped="" ref="0x110609790"/>
        <function-ref name="putDone" scoped="" ref="0x110609918"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x110609aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x110609d18" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x110609d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x1106060a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x110606228"/>
        <function-ref name="led1On" scoped="" ref="0x1106063b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x110606538"/>
        <function-ref name="led2Toggle" scoped="" ref="0x1106066c0"/>
        <function-ref name="get" scoped="" ref="0x110606848"/>
        <function-ref name="led1Off" scoped="" ref="0x1106069d0"/>
        <function-ref name="led2Off" scoped="" ref="0x110600020"/>
        <function-ref name="set" scoped="" ref="0x110606b58"/>
        <function-ref name="led0On" scoped="" ref="0x110606ce0"/>
        <function-ref name="led2On" scoped="" ref="0x110606e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x110677020" loc="341:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x110677020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x110677370"/>
        <function-ref name="runTask" scoped="" ref="0x1106774f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x11060b918" loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x11060b918"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x11060bc68"/>
        <function-ref name="nextByte" scoped="" ref="0x11060bdf0"/>
        <function-ref name="startSend" scoped="" ref="0x11060f020"/>
        <function-ref name="sendCompleted" scoped="" ref="0x11060f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x110607ba8" loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x110607ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x11060e020"/>
        <function-ref name="byteReceived" scoped="" ref="0x11060e1a8"/>
        <function-ref name="endPacket" scoped="" ref="0x11060e330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x110739100" loc="275:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x110739100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x110739450"/>
        <function-ref name="runTask" scoped="" ref="0x1107395d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x110711020" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x110711020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x1104f6db0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x110711390"/>
        <function-ref name="getPayload" scoped="" ref="0x110711518"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1107116a0"/>
        <function-ref name="cancel" scoped="" ref="0x110711828"/>
        <function-ref name="sendDone" scoped="" ref="0x1107119b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x1107398a0" loc="158:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x1107398a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x110739bf0"/>
        <function-ref name="runTask" scoped="" ref="0x110739d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x110712868" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x110712868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x1104f6db0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x110712bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x110711db8" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x110711db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x1104f6db0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x11073c170"/>
        <function-ref name="offset" scoped="" ref="0x11073c2f8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x11073c480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x11073ba50" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x11073ba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x11073bda0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x11073a020"/>
        <function-ref name="led1On" scoped="" ref="0x11073a1a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x11073a330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x11073a4b8"/>
        <function-ref name="get" scoped="" ref="0x11073a640"/>
        <function-ref name="led1Off" scoped="" ref="0x11073a7c8"/>
        <function-ref name="led2On" scoped="" ref="0x11073ade8"/>
        <function-ref name="set" scoped="" ref="0x11073aad8"/>
        <function-ref name="led2Off" scoped="" ref="0x11073a950"/>
        <function-ref name="led0On" scoped="" ref="0x11073ac60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x11073b020" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x11073b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x11073b370"/>
        <function-ref name="nextByte" scoped="" ref="0x11073b4f8"/>
        <function-ref name="startSend" scoped="" ref="0x11073b680"/>
        <function-ref name="sendCompleted" scoped="" ref="0x11073b808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x11073c6c8" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x11073c6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x11073ca18"/>
        <function-ref name="byteReceived" scoped="" ref="0x11073cba0"/>
        <function-ref name="endPacket" scoped="" ref="0x11073cd28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x110726448" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x110726448"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x110726798"/>
        <function-ref name="receivedByte" scoped="" ref="0x110726920"/>
        <function-ref name="receive" scoped="" ref="0x110726aa8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x110726c30"/>
        <function-ref name="receiveDone" scoped="" ref="0x110726db8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x110732020"/>
        <function-ref name="sendDone" scoped="" ref="0x1107321a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x110737b48" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x110737b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x110733020"/>
        <function-ref name="resetSend" scoped="" ref="0x1107331a8"/>
        <function-ref name="dataReceived" scoped="" ref="0x110733330"/>
        <function-ref name="resetReceive" scoped="" ref="0x1107334b8"/>
        <function-ref name="putData" scoped="" ref="0x110733640"/>
        <function-ref name="putDone" scoped="" ref="0x1107337c8"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x110733950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x110732420" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x110732420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x110732770"/>
        <function-ref name="led0Toggle" scoped="" ref="0x1107328f8"/>
        <function-ref name="led1On" scoped="" ref="0x110732a80"/>
        <function-ref name="led1Toggle" scoped="" ref="0x110732c08"/>
        <function-ref name="led2Toggle" scoped="" ref="0x110732d90"/>
        <function-ref name="get" scoped="" ref="0x110731020"/>
        <function-ref name="led1Off" scoped="" ref="0x1107311a8"/>
        <function-ref name="led2Off" scoped="" ref="0x1107317c8"/>
        <function-ref name="set" scoped="" ref="0x110731330"/>
        <function-ref name="led0On" scoped="" ref="0x1107314b8"/>
        <function-ref name="led2On" scoped="" ref="0x110731640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x110762210" loc="6:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x110762210"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x110762560"/>
        <function-ref name="receive" scoped="" ref="0x1107626e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x110769020" loc="5:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x110769020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x110769370"/>
        <function-ref name="receivedByte" scoped="" ref="0x1107694f8"/>
        <function-ref name="receive" scoped="" ref="0x110769680"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x110769808"/>
        <function-ref name="receiveDone" scoped="" ref="0x110769990"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x110769b18"/>
        <function-ref name="sendDone" scoped="" ref="0x110769ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x1107367f8" loc="4:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x1107367f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x110736b48"/>
        <function-ref name="stop" scoped="" ref="0x110736cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x110c17120" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x110c17120"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x110c17470"/>
        <function-ref name="immediateRequested" scoped="" ref="0x110c175f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x110c578c8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x110c578c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x110c57c18"/>
        <function-ref name="receive" scoped="" ref="0x110c57da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x110c56060" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x110c56060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x110c563b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x110c17880" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x110c17880"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x110c17bd0"/>
        <function-ref name="receivedByte" scoped="" ref="0x110c17d58"/>
        <function-ref name="receive" scoped="" ref="0x110c57020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x110c571a8"/>
        <function-ref name="receiveDone" scoped="" ref="0x110c57330"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x110c574b8"/>
        <function-ref name="sendDone" scoped="" ref="0x110c57640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x110c184e0" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x110c184e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x110c18830"/>
        <function-ref name="immediateRequest" scoped="" ref="0x110c189b8"/>
        <function-ref name="request" scoped="" ref="0x110c18b40"/>
        <function-ref name="granted" scoped="" ref="0x110c18cc8"/>
        <function-ref name="isOwner" scoped="" ref="0x110c18e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x1107bb888" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x1107bb888"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x1107bbbd8"/>
        <function-ref name="configure" scoped="" ref="0x1107bbd60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x1107bdb00" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x1107bdb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1107bde50"/>
        <function-ref name="receive" scoped="" ref="0x1107b9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x1107b8b68" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x1107b8b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x1107b7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x1107be570" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x1107be570"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1107be8c0"/>
        <function-ref name="receivedByte" scoped="" ref="0x1107bea48"/>
        <function-ref name="receive" scoped="" ref="0x1107bebd0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x1107bed58"/>
        <function-ref name="receiveDone" scoped="" ref="0x1107bd020"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x1107bd1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x1107bd330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x1107b98b8" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x1107b98b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1107b9c08"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1107b9d90"/>
        <function-ref name="request" scoped="" ref="0x1107b8020"/>
        <function-ref name="granted" scoped="" ref="0x1107b81a8"/>
        <function-ref name="isOwner" scoped="" ref="0x1107b8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1107c3bc8" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x1107c3bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1107bf020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1107bf1a8"/>
        <function-ref name="request" scoped="" ref="0x1107bf330"/>
        <function-ref name="granted" scoped="" ref="0x1107bf4b8"/>
        <function-ref name="isOwner" scoped="" ref="0x1107bf640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x1107b6030" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x1107b6030"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x1107b6380"/>
        <function-ref name="txDone" scoped="" ref="0x1107b6508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x110853060" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x110853060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x1108533d0"/>
        <function-ref name="configure" scoped="" ref="0x110853558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x1108529e8" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x1108529e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x110852d58"/>
        <function-ref name="receive" scoped="" ref="0x110851020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x110850180" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x110850180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x1108504f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x1108507b8" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x1108507b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x110850b08"/>
        <function-ref name="enableUartRx" scoped="" ref="0x110850c90"/>
        <function-ref name="setUctl" scoped="" ref="0x110850e18"/>
        <function-ref name="enableUart" scoped="" ref="0x11084f020"/>
        <function-ref name="setUrctl" scoped="" ref="0x11084f1a8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x11084f330"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x11084f4b8"/>
        <function-ref name="getUtctl" scoped="" ref="0x11084f640"/>
        <function-ref name="getUrctl" scoped="" ref="0x11084f7c8"/>
        <function-ref name="resetUsart" scoped="" ref="0x11084f950"/>
        <function-ref name="getUmctl" scoped="" ref="0x11084fad8"/>
        <function-ref name="disableIntr" scoped="" ref="0x11084fc60"/>
        <function-ref name="setUtctl" scoped="" ref="0x11084fde8"/>
        <function-ref name="getUbr" scoped="" ref="0x11084e120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x11084e2a8"/>
        <function-ref name="setUmctl" scoped="" ref="0x11084e430"/>
        <function-ref name="isUartRx" scoped="" ref="0x11084e5b8"/>
        <function-ref name="isUart" scoped="" ref="0x11084e740"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x11084e8c8"/>
        <function-ref name="isSpi" scoped="" ref="0x11084ea50"/>
        <function-ref name="enableUartTx" scoped="" ref="0x11084ebd8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x11084ed60"/>
        <function-ref name="disableUartRx" scoped="" ref="0x11084d020"/>
        <function-ref name="enableIntr" scoped="" ref="0x11084d1a8"/>
        <function-ref name="getMode" scoped="" ref="0x11084d330"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x11084d6b8"/>
        <function-ref name="clrIntr" scoped="" ref="0x11084d840"/>
        <function-ref name="setUbr" scoped="" ref="0x11084d9c8"/>
        <function-ref name="tx" scoped="" ref="0x11084db50"/>
        <function-ref name="getUctl" scoped="" ref="0x11084dcd8"/>
        <function-ref name="disableUart" scoped="" ref="0x11084de60"/>
        <function-ref name="enableSpi" scoped="" ref="0x11084c020"/>
        <function-ref name="setModeUart" scoped="" ref="0x11084c1a8"/>
        <function-ref name="setModeSpi" scoped="" ref="0x11084c330"/>
        <function-ref name="rx" scoped="" ref="0x11084c4b8"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x11084c640"/>
        <function-ref name="isUartTx" scoped="" ref="0x11084c7c8"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x11084c950"/>
        <function-ref name="disableSpi" scoped="" ref="0x11084cad8"/>
        <function-ref name="disableUartTx" scoped="" ref="0x11084cc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x110853900" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x110853900"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x110853c70"/>
        <function-ref name="receivedByte" scoped="" ref="0x110853df8"/>
        <function-ref name="receive" scoped="" ref="0x110852020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x1108521a8"/>
        <function-ref name="receiveDone" scoped="" ref="0x110852330"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x1108524b8"/>
        <function-ref name="sendDone" scoped="" ref="0x110852640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x11084ba58" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x11084ba58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b0150"/>
            <typename><typedef-ref name="T32khz" ref="0x1107b04a8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x11084a828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110848190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x11084acb0"/>
        <function-ref name="overflow" scoped="" ref="0x110848618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x110851408" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x110851408"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x110851778"/>
        <function-ref name="immediateRequest" scoped="" ref="0x110851900"/>
        <function-ref name="request" scoped="" ref="0x110851a88"/>
        <function-ref name="granted" scoped="" ref="0x110851c10"/>
        <function-ref name="isOwner" scoped="" ref="0x110851d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1108542e8" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x1108542e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x110854658"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1108547e0"/>
        <function-ref name="request" scoped="" ref="0x110854968"/>
        <function-ref name="granted" scoped="" ref="0x110854af0"/>
        <function-ref name="isOwner" scoped="" ref="0x110854c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x11084b0c8" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x11084b0c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x11084b438"/>
        <function-ref name="txDone" scoped="" ref="0x11084b5c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x110848a30" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x110848a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x110848d80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x110847020"/>
        <function-ref name="led1On" scoped="" ref="0x1108471a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x110847330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x1108474b8"/>
        <function-ref name="get" scoped="" ref="0x110847640"/>
        <function-ref name="led1Off" scoped="" ref="0x1108477c8"/>
        <function-ref name="led2On" scoped="" ref="0x110847de8"/>
        <function-ref name="set" scoped="" ref="0x110847ad8"/>
        <function-ref name="led2Off" scoped="" ref="0x110847950"/>
        <function-ref name="led0On" scoped="" ref="0x110847c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x11086b528" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x11086b528"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x11086b878"/>
        <function-ref name="txDone" scoped="" ref="0x11086ba00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x11086e4f0" loc="76:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x11086e4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x11086e840"/>
        <function-ref name="stop" scoped="" ref="0x11086e9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x11086ece0" loc="77:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x11086ece0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x1108710a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x110871228"/>
        <function-ref name="setUctl" scoped="" ref="0x1108713b0"/>
        <function-ref name="enableUart" scoped="" ref="0x110871538"/>
        <function-ref name="setUrctl" scoped="" ref="0x1108716c0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x110871848"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x1108719d0"/>
        <function-ref name="getUtctl" scoped="" ref="0x110871b58"/>
        <function-ref name="getUrctl" scoped="" ref="0x110871ce0"/>
        <function-ref name="resetUsart" scoped="" ref="0x110871e68"/>
        <function-ref name="getUmctl" scoped="" ref="0x110870020"/>
        <function-ref name="disableIntr" scoped="" ref="0x1108701a8"/>
        <function-ref name="setUtctl" scoped="" ref="0x110870330"/>
        <function-ref name="getUbr" scoped="" ref="0x1108705b8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x110870740"/>
        <function-ref name="setUmctl" scoped="" ref="0x1108708c8"/>
        <function-ref name="isUartRx" scoped="" ref="0x110870a50"/>
        <function-ref name="isUart" scoped="" ref="0x110870bd8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x110870d60"/>
        <function-ref name="isSpi" scoped="" ref="0x11086d020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x11086d1a8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x11086d330"/>
        <function-ref name="disableUartRx" scoped="" ref="0x11086d4b8"/>
        <function-ref name="enableIntr" scoped="" ref="0x11086d640"/>
        <function-ref name="getMode" scoped="" ref="0x11086d7c8"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x11086db50"/>
        <function-ref name="clrIntr" scoped="" ref="0x11086dcd8"/>
        <function-ref name="setUbr" scoped="" ref="0x11086de60"/>
        <function-ref name="tx" scoped="" ref="0x11086c020"/>
        <function-ref name="getUctl" scoped="" ref="0x11086c1a8"/>
        <function-ref name="disableUart" scoped="" ref="0x11086c330"/>
        <function-ref name="enableSpi" scoped="" ref="0x11086c4b8"/>
        <function-ref name="setModeUart" scoped="" ref="0x11086c640"/>
        <function-ref name="setModeSpi" scoped="" ref="0x11086c7c8"/>
        <function-ref name="rx" scoped="" ref="0x11086c950"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x11086cad8"/>
        <function-ref name="isUartTx" scoped="" ref="0x11086cc60"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x11086cde8"/>
        <function-ref name="disableSpi" scoped="" ref="0x11086b020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x11086b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x1108877e0" loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x1108877e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110887b30"/>
        <function-ref name="isInput" scoped="" ref="0x110887cb8"/>
        <function-ref name="setResistor" scoped="" ref="0x110887e40"/>
        <function-ref name="toggle" scoped="" ref="0x110886020"/>
        <function-ref name="isOutput" scoped="" ref="0x1108861a8"/>
        <function-ref name="getResistor" scoped="" ref="0x110886330"/>
        <function-ref name="makeOutput" scoped="" ref="0x1108864b8"/>
        <function-ref name="get" scoped="" ref="0x110886640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1108867c8"/>
        <function-ref name="getRaw" scoped="" ref="0x110886950"/>
        <function-ref name="set" scoped="" ref="0x110886ad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110886c60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110886de8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110885120"/>
        <function-ref name="clr" scoped="" ref="0x1108852a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x110863a68" loc="76:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x110863a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x110863db8"/>
        <function-ref name="txDone" scoped="" ref="0x110862020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x110885658" loc="81:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x110885658"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1108859a8"/>
        <function-ref name="isInput" scoped="" ref="0x110885b30"/>
        <function-ref name="setResistor" scoped="" ref="0x110885cb8"/>
        <function-ref name="toggle" scoped="" ref="0x110885e40"/>
        <function-ref name="isOutput" scoped="" ref="0x110883020"/>
        <function-ref name="getResistor" scoped="" ref="0x1108831a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110883330"/>
        <function-ref name="get" scoped="" ref="0x1108834b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110883640"/>
        <function-ref name="getRaw" scoped="" ref="0x1108837c8"/>
        <function-ref name="set" scoped="" ref="0x110883950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110883ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110883c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110882020"/>
        <function-ref name="clr" scoped="" ref="0x1108821a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x110882558" loc="82:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x110882558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1108828a8"/>
        <function-ref name="isInput" scoped="" ref="0x110882a30"/>
        <function-ref name="setResistor" scoped="" ref="0x110882bb8"/>
        <function-ref name="toggle" scoped="" ref="0x110882d40"/>
        <function-ref name="isOutput" scoped="" ref="0x110881020"/>
        <function-ref name="getResistor" scoped="" ref="0x1108811a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110881330"/>
        <function-ref name="get" scoped="" ref="0x1108814b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110881640"/>
        <function-ref name="getRaw" scoped="" ref="0x1108817c8"/>
        <function-ref name="set" scoped="" ref="0x110881950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110881ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110881c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110880020"/>
        <function-ref name="clr" scoped="" ref="0x1108801a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x110867098" loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x110867098"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x1108673e8"/>
        <function-ref name="enableUartRx" scoped="" ref="0x110867570"/>
        <function-ref name="setUctl" scoped="" ref="0x1108676f8"/>
        <function-ref name="enableUart" scoped="" ref="0x110867880"/>
        <function-ref name="setUrctl" scoped="" ref="0x110867a08"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x110867b90"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x110867d18"/>
        <function-ref name="getUtctl" scoped="" ref="0x110866020"/>
        <function-ref name="getUrctl" scoped="" ref="0x1108661a8"/>
        <function-ref name="resetUsart" scoped="" ref="0x110866330"/>
        <function-ref name="getUmctl" scoped="" ref="0x1108664b8"/>
        <function-ref name="disableIntr" scoped="" ref="0x110866640"/>
        <function-ref name="setUtctl" scoped="" ref="0x1108667c8"/>
        <function-ref name="getUbr" scoped="" ref="0x110866a50"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x110866bd8"/>
        <function-ref name="setUmctl" scoped="" ref="0x110866d60"/>
        <function-ref name="isUartRx" scoped="" ref="0x110865020"/>
        <function-ref name="isUart" scoped="" ref="0x1108651a8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x110865330"/>
        <function-ref name="isSpi" scoped="" ref="0x1108654b8"/>
        <function-ref name="enableUartTx" scoped="" ref="0x110865640"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x1108657c8"/>
        <function-ref name="disableUartRx" scoped="" ref="0x110865950"/>
        <function-ref name="enableIntr" scoped="" ref="0x110865ad8"/>
        <function-ref name="getMode" scoped="" ref="0x110865c60"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x110864020"/>
        <function-ref name="clrIntr" scoped="" ref="0x1108641a8"/>
        <function-ref name="setUbr" scoped="" ref="0x110864330"/>
        <function-ref name="tx" scoped="" ref="0x1108644b8"/>
        <function-ref name="getUctl" scoped="" ref="0x110864640"/>
        <function-ref name="disableUart" scoped="" ref="0x1108647c8"/>
        <function-ref name="enableSpi" scoped="" ref="0x110864950"/>
        <function-ref name="setModeUart" scoped="" ref="0x110864ad8"/>
        <function-ref name="setModeSpi" scoped="" ref="0x110864c60"/>
        <function-ref name="rx" scoped="" ref="0x110864de8"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x110863020"/>
        <function-ref name="isUartTx" scoped="" ref="0x1108631a8"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x110863330"/>
        <function-ref name="disableSpi" scoped="" ref="0x1108634b8"/>
        <function-ref name="disableUartTx" scoped="" ref="0x110863640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x11086a7e0" loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x11086a7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x11086ab30"/>
        <function-ref name="stop" scoped="" ref="0x11086acb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x110860968" loc="79:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x110860968"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110860cb8"/>
        <function-ref name="isInput" scoped="" ref="0x110860e40"/>
        <function-ref name="setResistor" scoped="" ref="0x110888020"/>
        <function-ref name="toggle" scoped="" ref="0x1108881a8"/>
        <function-ref name="isOutput" scoped="" ref="0x110888330"/>
        <function-ref name="getResistor" scoped="" ref="0x1108884b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110888640"/>
        <function-ref name="get" scoped="" ref="0x1108887c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110888950"/>
        <function-ref name="getRaw" scoped="" ref="0x110888ad8"/>
        <function-ref name="set" scoped="" ref="0x110888c60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110888de8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110887020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1108872a8"/>
        <function-ref name="clr" scoped="" ref="0x110887430"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x110889ad8" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x110889ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110889e28"/>
        <function-ref name="isInput" scoped="" ref="0x110861020"/>
        <function-ref name="setResistor" scoped="" ref="0x1108611a8"/>
        <function-ref name="toggle" scoped="" ref="0x110861330"/>
        <function-ref name="isOutput" scoped="" ref="0x1108614b8"/>
        <function-ref name="getResistor" scoped="" ref="0x110861640"/>
        <function-ref name="makeOutput" scoped="" ref="0x1108617c8"/>
        <function-ref name="get" scoped="" ref="0x110861950"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110861ad8"/>
        <function-ref name="getRaw" scoped="" ref="0x110861c60"/>
        <function-ref name="set" scoped="" ref="0x110861de8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110860020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1108601a8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110860430"/>
        <function-ref name="clr" scoped="" ref="0x1108605b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x11090c7f0" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x11090c7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11090cb40"/>
        <function-ref name="isInput" scoped="" ref="0x11090ccc8"/>
        <function-ref name="setResistor" scoped="" ref="0x11090ce50"/>
        <function-ref name="toggle" scoped="" ref="0x11090b020"/>
        <function-ref name="isOutput" scoped="" ref="0x11090b1a8"/>
        <function-ref name="getResistor" scoped="" ref="0x11090b330"/>
        <function-ref name="makeOutput" scoped="" ref="0x11090b4b8"/>
        <function-ref name="get" scoped="" ref="0x11090b640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11090b7c8"/>
        <function-ref name="getRaw" scoped="" ref="0x11090b950"/>
        <function-ref name="set" scoped="" ref="0x11090bad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11090bc60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11090bde8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11090a120"/>
        <function-ref name="clr" scoped="" ref="0x11090a2a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x1108f8568" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x1108f8568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1108f88b8"/>
        <function-ref name="isInput" scoped="" ref="0x1108f8a40"/>
        <function-ref name="setResistor" scoped="" ref="0x1108f8bc8"/>
        <function-ref name="toggle" scoped="" ref="0x1108f8d50"/>
        <function-ref name="isOutput" scoped="" ref="0x1108f7020"/>
        <function-ref name="getResistor" scoped="" ref="0x1108f71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1108f7330"/>
        <function-ref name="get" scoped="" ref="0x1108f74b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1108f7640"/>
        <function-ref name="getRaw" scoped="" ref="0x1108f77c8"/>
        <function-ref name="set" scoped="" ref="0x1108f7950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1108f7ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1108f7c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1108f6020"/>
        <function-ref name="clr" scoped="" ref="0x1108f61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x11094d7d0" loc="145:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x11094d7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11094db20"/>
        <function-ref name="isInput" scoped="" ref="0x11094dca8"/>
        <function-ref name="setResistor" scoped="" ref="0x11094de30"/>
        <function-ref name="toggle" scoped="" ref="0x11094c020"/>
        <function-ref name="isOutput" scoped="" ref="0x11094c1a8"/>
        <function-ref name="getResistor" scoped="" ref="0x11094c330"/>
        <function-ref name="makeOutput" scoped="" ref="0x11094c4b8"/>
        <function-ref name="get" scoped="" ref="0x11094c640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11094c7c8"/>
        <function-ref name="getRaw" scoped="" ref="0x11094c950"/>
        <function-ref name="set" scoped="" ref="0x11094cad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11094cc60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11094cde8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11094b120"/>
        <function-ref name="clr" scoped="" ref="0x11094b2a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x11095e558" loc="165:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x11095e558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11095e8a8"/>
        <function-ref name="isInput" scoped="" ref="0x11095ea30"/>
        <function-ref name="setResistor" scoped="" ref="0x11095ebb8"/>
        <function-ref name="toggle" scoped="" ref="0x11095ed40"/>
        <function-ref name="isOutput" scoped="" ref="0x11095d020"/>
        <function-ref name="getResistor" scoped="" ref="0x11095d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x11095d330"/>
        <function-ref name="get" scoped="" ref="0x11095d4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11095d640"/>
        <function-ref name="getRaw" scoped="" ref="0x11095d7c8"/>
        <function-ref name="set" scoped="" ref="0x11095d950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11095dad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11095dc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110992020"/>
        <function-ref name="clr" scoped="" ref="0x1109921a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x11094b660" loc="146:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x11094b660"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11094b9b0"/>
        <function-ref name="isInput" scoped="" ref="0x11094bb38"/>
        <function-ref name="setResistor" scoped="" ref="0x11094bcc0"/>
        <function-ref name="toggle" scoped="" ref="0x11094be48"/>
        <function-ref name="isOutput" scoped="" ref="0x11094a020"/>
        <function-ref name="getResistor" scoped="" ref="0x11094a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x11094a330"/>
        <function-ref name="get" scoped="" ref="0x11094a4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11094a640"/>
        <function-ref name="getRaw" scoped="" ref="0x11094a7c8"/>
        <function-ref name="set" scoped="" ref="0x11094a950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11094aad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11094ac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110949020"/>
        <function-ref name="clr" scoped="" ref="0x1109491a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x1108f4568" loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x1108f4568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1108f48b8"/>
        <function-ref name="isInput" scoped="" ref="0x1108f4a40"/>
        <function-ref name="setResistor" scoped="" ref="0x1108f4bc8"/>
        <function-ref name="toggle" scoped="" ref="0x1108f4d50"/>
        <function-ref name="isOutput" scoped="" ref="0x1108f3020"/>
        <function-ref name="getResistor" scoped="" ref="0x1108f31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1108f3330"/>
        <function-ref name="get" scoped="" ref="0x1108f34b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1108f3640"/>
        <function-ref name="getRaw" scoped="" ref="0x1108f37c8"/>
        <function-ref name="set" scoped="" ref="0x1108f3950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1108f3ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1108f3c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110926020"/>
        <function-ref name="clr" scoped="" ref="0x1109261a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x110913568" loc="84:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x110913568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1109138b8"/>
        <function-ref name="isInput" scoped="" ref="0x110913a40"/>
        <function-ref name="setResistor" scoped="" ref="0x110913bc8"/>
        <function-ref name="toggle" scoped="" ref="0x110913d50"/>
        <function-ref name="isOutput" scoped="" ref="0x110912020"/>
        <function-ref name="getResistor" scoped="" ref="0x1109121a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110912330"/>
        <function-ref name="get" scoped="" ref="0x1109124b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110912640"/>
        <function-ref name="getRaw" scoped="" ref="0x1109127c8"/>
        <function-ref name="set" scoped="" ref="0x110912950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110912ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110912c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110911020"/>
        <function-ref name="clr" scoped="" ref="0x1109111a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x110934568" loc="97:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x110934568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1109348b8"/>
        <function-ref name="isInput" scoped="" ref="0x110934a40"/>
        <function-ref name="setResistor" scoped="" ref="0x110934bc8"/>
        <function-ref name="toggle" scoped="" ref="0x110934d50"/>
        <function-ref name="isOutput" scoped="" ref="0x110933020"/>
        <function-ref name="getResistor" scoped="" ref="0x1109331a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110933330"/>
        <function-ref name="get" scoped="" ref="0x1109334b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110933640"/>
        <function-ref name="getRaw" scoped="" ref="0x1109337c8"/>
        <function-ref name="set" scoped="" ref="0x110933950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110933ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110933c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110932020"/>
        <function-ref name="clr" scoped="" ref="0x1109321a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x110959568" loc="108:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x110959568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1109598b8"/>
        <function-ref name="isInput" scoped="" ref="0x110959a40"/>
        <function-ref name="setResistor" scoped="" ref="0x110959bc8"/>
        <function-ref name="toggle" scoped="" ref="0x110959d50"/>
        <function-ref name="isOutput" scoped="" ref="0x110958020"/>
        <function-ref name="getResistor" scoped="" ref="0x1109581a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110958330"/>
        <function-ref name="get" scoped="" ref="0x1109584b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110958640"/>
        <function-ref name="getRaw" scoped="" ref="0x1109587c8"/>
        <function-ref name="set" scoped="" ref="0x110958950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110958ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110958c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110957020"/>
        <function-ref name="clr" scoped="" ref="0x1109571a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x110945560" loc="149:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x110945560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1109458b0"/>
        <function-ref name="isInput" scoped="" ref="0x110945a38"/>
        <function-ref name="setResistor" scoped="" ref="0x110945bc0"/>
        <function-ref name="toggle" scoped="" ref="0x110945d48"/>
        <function-ref name="isOutput" scoped="" ref="0x110944020"/>
        <function-ref name="getResistor" scoped="" ref="0x1109441a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110944330"/>
        <function-ref name="get" scoped="" ref="0x1109444b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110944640"/>
        <function-ref name="getRaw" scoped="" ref="0x1109447c8"/>
        <function-ref name="set" scoped="" ref="0x110944950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110944ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110944c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110943020"/>
        <function-ref name="clr" scoped="" ref="0x1109431a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x11096b558" loc="159:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x11096b558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11096b8a8"/>
        <function-ref name="isInput" scoped="" ref="0x11096ba30"/>
        <function-ref name="setResistor" scoped="" ref="0x11096bbb8"/>
        <function-ref name="toggle" scoped="" ref="0x11096bd40"/>
        <function-ref name="isOutput" scoped="" ref="0x11096a020"/>
        <function-ref name="getResistor" scoped="" ref="0x11096a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x11096a330"/>
        <function-ref name="get" scoped="" ref="0x11096a4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11096a640"/>
        <function-ref name="getRaw" scoped="" ref="0x11096a7c8"/>
        <function-ref name="set" scoped="" ref="0x11096a950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11096aad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11096ac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110969020"/>
        <function-ref name="clr" scoped="" ref="0x1109691a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x11098c560" loc="171:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x11098c560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11098c8b0"/>
        <function-ref name="isInput" scoped="" ref="0x11098ca38"/>
        <function-ref name="setResistor" scoped="" ref="0x11098cbc0"/>
        <function-ref name="toggle" scoped="" ref="0x11098cd48"/>
        <function-ref name="isOutput" scoped="" ref="0x11098b020"/>
        <function-ref name="getResistor" scoped="" ref="0x11098b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x11098b330"/>
        <function-ref name="get" scoped="" ref="0x11098b4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11098b640"/>
        <function-ref name="getRaw" scoped="" ref="0x11098b7c8"/>
        <function-ref name="set" scoped="" ref="0x11098b950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11098bad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11098bc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11098a020"/>
        <function-ref name="clr" scoped="" ref="0x11098a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x110906568" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x110906568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1109068b8"/>
        <function-ref name="isInput" scoped="" ref="0x110906a40"/>
        <function-ref name="setResistor" scoped="" ref="0x110906bc8"/>
        <function-ref name="toggle" scoped="" ref="0x110906d50"/>
        <function-ref name="isOutput" scoped="" ref="0x110905020"/>
        <function-ref name="getResistor" scoped="" ref="0x1109051a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110905330"/>
        <function-ref name="get" scoped="" ref="0x1109054b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110905640"/>
        <function-ref name="getRaw" scoped="" ref="0x1109057c8"/>
        <function-ref name="set" scoped="" ref="0x110905950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110905ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110905c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110904020"/>
        <function-ref name="clr" scoped="" ref="0x1109041a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x110943560" loc="150:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x110943560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1109438b0"/>
        <function-ref name="isInput" scoped="" ref="0x110943a38"/>
        <function-ref name="setResistor" scoped="" ref="0x110943bc0"/>
        <function-ref name="toggle" scoped="" ref="0x110943d48"/>
        <function-ref name="isOutput" scoped="" ref="0x110942020"/>
        <function-ref name="getResistor" scoped="" ref="0x1109421a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110942330"/>
        <function-ref name="get" scoped="" ref="0x1109424b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110942640"/>
        <function-ref name="getRaw" scoped="" ref="0x1109427c8"/>
        <function-ref name="set" scoped="" ref="0x110942950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110942ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110942c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110977020"/>
        <function-ref name="clr" scoped="" ref="0x1109771a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x110902568" loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x110902568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1109028b8"/>
        <function-ref name="isInput" scoped="" ref="0x110902a40"/>
        <function-ref name="setResistor" scoped="" ref="0x110902bc8"/>
        <function-ref name="toggle" scoped="" ref="0x110902d50"/>
        <function-ref name="isOutput" scoped="" ref="0x110901020"/>
        <function-ref name="getResistor" scoped="" ref="0x1109011a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110901330"/>
        <function-ref name="get" scoped="" ref="0x1109014b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110901640"/>
        <function-ref name="getRaw" scoped="" ref="0x1109017c8"/>
        <function-ref name="set" scoped="" ref="0x110901950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110901ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110901c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110900020"/>
        <function-ref name="clr" scoped="" ref="0x1109001a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x110921568" loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x110921568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1109218b8"/>
        <function-ref name="isInput" scoped="" ref="0x110921a40"/>
        <function-ref name="setResistor" scoped="" ref="0x110921bc8"/>
        <function-ref name="toggle" scoped="" ref="0x110921d50"/>
        <function-ref name="isOutput" scoped="" ref="0x110920020"/>
        <function-ref name="getResistor" scoped="" ref="0x1109201a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110920330"/>
        <function-ref name="get" scoped="" ref="0x1109204b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110920640"/>
        <function-ref name="getRaw" scoped="" ref="0x1109207c8"/>
        <function-ref name="set" scoped="" ref="0x110920950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110920ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110920c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11091f020"/>
        <function-ref name="clr" scoped="" ref="0x11091f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x11090d568" loc="87:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x11090d568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11090d8b8"/>
        <function-ref name="isInput" scoped="" ref="0x11090da40"/>
        <function-ref name="setResistor" scoped="" ref="0x11090dbc8"/>
        <function-ref name="toggle" scoped="" ref="0x11090dd50"/>
        <function-ref name="isOutput" scoped="" ref="0x110941020"/>
        <function-ref name="getResistor" scoped="" ref="0x1109411a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110941330"/>
        <function-ref name="get" scoped="" ref="0x1109414b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110941640"/>
        <function-ref name="getRaw" scoped="" ref="0x1109417c8"/>
        <function-ref name="set" scoped="" ref="0x110941950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110941ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110941c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110940020"/>
        <function-ref name="clr" scoped="" ref="0x1109401a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x11092e568" loc="100:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x11092e568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11092e8b8"/>
        <function-ref name="isInput" scoped="" ref="0x11092ea40"/>
        <function-ref name="setResistor" scoped="" ref="0x11092ebc8"/>
        <function-ref name="toggle" scoped="" ref="0x11092ed50"/>
        <function-ref name="isOutput" scoped="" ref="0x11092d020"/>
        <function-ref name="getResistor" scoped="" ref="0x11092d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x11092d330"/>
        <function-ref name="get" scoped="" ref="0x11092d4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11092d640"/>
        <function-ref name="getRaw" scoped="" ref="0x11092d7c8"/>
        <function-ref name="set" scoped="" ref="0x11092d950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11092dad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11092dc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11092c020"/>
        <function-ref name="clr" scoped="" ref="0x11092c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x110953568" loc="111:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x110953568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1109538b8"/>
        <function-ref name="isInput" scoped="" ref="0x110953a40"/>
        <function-ref name="setResistor" scoped="" ref="0x110953bc8"/>
        <function-ref name="toggle" scoped="" ref="0x110953d50"/>
        <function-ref name="isOutput" scoped="" ref="0x110952020"/>
        <function-ref name="getResistor" scoped="" ref="0x1109521a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110952330"/>
        <function-ref name="get" scoped="" ref="0x1109524b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110952640"/>
        <function-ref name="getRaw" scoped="" ref="0x1109527c8"/>
        <function-ref name="set" scoped="" ref="0x110952950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110952ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110952c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110951020"/>
        <function-ref name="clr" scoped="" ref="0x1109511a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x1108dcb00" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x1108dcb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1108dce50"/>
        <function-ref name="isInput" scoped="" ref="0x1108db020"/>
        <function-ref name="setResistor" scoped="" ref="0x1108db1a8"/>
        <function-ref name="toggle" scoped="" ref="0x1108db330"/>
        <function-ref name="isOutput" scoped="" ref="0x1108db4b8"/>
        <function-ref name="getResistor" scoped="" ref="0x1108db640"/>
        <function-ref name="makeOutput" scoped="" ref="0x1108db7c8"/>
        <function-ref name="get" scoped="" ref="0x1108db950"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1108dbad8"/>
        <function-ref name="getRaw" scoped="" ref="0x1108dbc60"/>
        <function-ref name="set" scoped="" ref="0x1108dbde8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1108da020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1108da1a8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1108da430"/>
        <function-ref name="clr" scoped="" ref="0x1108da5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x1108fc568" loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x1108fc568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1108fc9b8"/>
        <function-ref name="isInput" scoped="" ref="0x1108fcb40"/>
        <function-ref name="setResistor" scoped="" ref="0x1108fccc8"/>
        <function-ref name="toggle" scoped="" ref="0x1108fce50"/>
        <function-ref name="isOutput" scoped="" ref="0x1108fb020"/>
        <function-ref name="getResistor" scoped="" ref="0x1108fb1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1108fb330"/>
        <function-ref name="get" scoped="" ref="0x1108fb4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1108fb640"/>
        <function-ref name="getRaw" scoped="" ref="0x1108fb7c8"/>
        <function-ref name="set" scoped="" ref="0x1108fb950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1108fbad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1108fbc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1108fa020"/>
        <function-ref name="clr" scoped="" ref="0x1108fa1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x11091b568" loc="77:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x11091b568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11091b8b8"/>
        <function-ref name="isInput" scoped="" ref="0x11091ba40"/>
        <function-ref name="setResistor" scoped="" ref="0x11091bbc8"/>
        <function-ref name="toggle" scoped="" ref="0x11091bd50"/>
        <function-ref name="isOutput" scoped="" ref="0x11091a020"/>
        <function-ref name="getResistor" scoped="" ref="0x11091a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x11091a330"/>
        <function-ref name="get" scoped="" ref="0x11091a4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11091a640"/>
        <function-ref name="getRaw" scoped="" ref="0x11091a7c8"/>
        <function-ref name="set" scoped="" ref="0x11091a950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11091aad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11091ac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110919020"/>
        <function-ref name="clr" scoped="" ref="0x1109191a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x11094f970" loc="144:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x11094f970"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11094fcc0"/>
        <function-ref name="isInput" scoped="" ref="0x11094fe48"/>
        <function-ref name="setResistor" scoped="" ref="0x11094e020"/>
        <function-ref name="toggle" scoped="" ref="0x11094e1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x11094e330"/>
        <function-ref name="getResistor" scoped="" ref="0x11094e4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x11094e640"/>
        <function-ref name="get" scoped="" ref="0x11094e7c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11094e950"/>
        <function-ref name="getRaw" scoped="" ref="0x11094ead8"/>
        <function-ref name="set" scoped="" ref="0x11094ec60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11094ede8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11094d020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11094d2a8"/>
        <function-ref name="clr" scoped="" ref="0x11094d430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x110964558" loc="162:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x110964558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1109648a8"/>
        <function-ref name="isInput" scoped="" ref="0x110964a30"/>
        <function-ref name="setResistor" scoped="" ref="0x110964bb8"/>
        <function-ref name="toggle" scoped="" ref="0x110964d40"/>
        <function-ref name="isOutput" scoped="" ref="0x110963020"/>
        <function-ref name="getResistor" scoped="" ref="0x1109631a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110963330"/>
        <function-ref name="get" scoped="" ref="0x1109634b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110963640"/>
        <function-ref name="getRaw" scoped="" ref="0x1109637c8"/>
        <function-ref name="set" scoped="" ref="0x110963950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110963ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110963c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110962020"/>
        <function-ref name="clr" scoped="" ref="0x1109621a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x11098e558" loc="169:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x11098e558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11098e8a8"/>
        <function-ref name="isInput" scoped="" ref="0x11098ea30"/>
        <function-ref name="setResistor" scoped="" ref="0x11098ebb8"/>
        <function-ref name="toggle" scoped="" ref="0x11098ed40"/>
        <function-ref name="isOutput" scoped="" ref="0x11098d020"/>
        <function-ref name="getResistor" scoped="" ref="0x11098d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x11098d330"/>
        <function-ref name="get" scoped="" ref="0x11098d4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11098d640"/>
        <function-ref name="getRaw" scoped="" ref="0x11098d7c8"/>
        <function-ref name="set" scoped="" ref="0x11098d950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11098dad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11098dc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11098c020"/>
        <function-ref name="clr" scoped="" ref="0x11098c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x110971560" loc="155:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x110971560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1109718b0"/>
        <function-ref name="isInput" scoped="" ref="0x110971a38"/>
        <function-ref name="setResistor" scoped="" ref="0x110971bc0"/>
        <function-ref name="toggle" scoped="" ref="0x110971d48"/>
        <function-ref name="isOutput" scoped="" ref="0x110970020"/>
        <function-ref name="getResistor" scoped="" ref="0x1109701a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110970330"/>
        <function-ref name="get" scoped="" ref="0x1109704b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110970640"/>
        <function-ref name="getRaw" scoped="" ref="0x1109707c8"/>
        <function-ref name="set" scoped="" ref="0x110970950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110970ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110970c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11096f020"/>
        <function-ref name="clr" scoped="" ref="0x11096f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x110917568" loc="82:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x110917568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110917ab8"/>
        <function-ref name="isInput" scoped="" ref="0x110917c40"/>
        <function-ref name="setResistor" scoped="" ref="0x110917dc8"/>
        <function-ref name="toggle" scoped="" ref="0x110916020"/>
        <function-ref name="isOutput" scoped="" ref="0x1109161a8"/>
        <function-ref name="getResistor" scoped="" ref="0x110916330"/>
        <function-ref name="makeOutput" scoped="" ref="0x1109164b8"/>
        <function-ref name="get" scoped="" ref="0x110916640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1109167c8"/>
        <function-ref name="getRaw" scoped="" ref="0x110916950"/>
        <function-ref name="set" scoped="" ref="0x110916ad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110916c60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110916de8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110915120"/>
        <function-ref name="clr" scoped="" ref="0x1109152a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x110938568" loc="95:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x110938568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1109388b8"/>
        <function-ref name="isInput" scoped="" ref="0x110938a40"/>
        <function-ref name="setResistor" scoped="" ref="0x110938bc8"/>
        <function-ref name="toggle" scoped="" ref="0x110938d50"/>
        <function-ref name="isOutput" scoped="" ref="0x110937020"/>
        <function-ref name="getResistor" scoped="" ref="0x1109371a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110937330"/>
        <function-ref name="get" scoped="" ref="0x1109374b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110937640"/>
        <function-ref name="getRaw" scoped="" ref="0x1109377c8"/>
        <function-ref name="set" scoped="" ref="0x110937950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110937ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110937c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110936020"/>
        <function-ref name="clr" scoped="" ref="0x1109361a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x110927568" loc="106:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x110927568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1109278b8"/>
        <function-ref name="isInput" scoped="" ref="0x110927a40"/>
        <function-ref name="setResistor" scoped="" ref="0x110927bc8"/>
        <function-ref name="toggle" scoped="" ref="0x110927d50"/>
        <function-ref name="isOutput" scoped="" ref="0x11095c020"/>
        <function-ref name="getResistor" scoped="" ref="0x11095c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x11095c330"/>
        <function-ref name="get" scoped="" ref="0x11095c4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11095c640"/>
        <function-ref name="getRaw" scoped="" ref="0x11095c7c8"/>
        <function-ref name="set" scoped="" ref="0x11095c950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11095cad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11095cc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11095b020"/>
        <function-ref name="clr" scoped="" ref="0x11095b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x110962558" loc="163:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x110962558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1109628a8"/>
        <function-ref name="isInput" scoped="" ref="0x110962a30"/>
        <function-ref name="setResistor" scoped="" ref="0x110962bb8"/>
        <function-ref name="toggle" scoped="" ref="0x110962d40"/>
        <function-ref name="isOutput" scoped="" ref="0x110961020"/>
        <function-ref name="getResistor" scoped="" ref="0x1109611a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110961330"/>
        <function-ref name="get" scoped="" ref="0x1109614b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110961640"/>
        <function-ref name="getRaw" scoped="" ref="0x1109617c8"/>
        <function-ref name="set" scoped="" ref="0x110961950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110961ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110961c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110960020"/>
        <function-ref name="clr" scoped="" ref="0x1109601a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x110977558" loc="152:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x110977558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1109778a8"/>
        <function-ref name="isInput" scoped="" ref="0x110977a30"/>
        <function-ref name="setResistor" scoped="" ref="0x110977bb8"/>
        <function-ref name="toggle" scoped="" ref="0x110977d40"/>
        <function-ref name="isOutput" scoped="" ref="0x110976020"/>
        <function-ref name="getResistor" scoped="" ref="0x1109761a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110976330"/>
        <function-ref name="get" scoped="" ref="0x1109764b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110976640"/>
        <function-ref name="getRaw" scoped="" ref="0x1109767c8"/>
        <function-ref name="set" scoped="" ref="0x110976950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110976ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110976c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110975020"/>
        <function-ref name="clr" scoped="" ref="0x1109751a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x11090a668" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x11090a668"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11090a9b8"/>
        <function-ref name="isInput" scoped="" ref="0x11090ab40"/>
        <function-ref name="setResistor" scoped="" ref="0x11090acc8"/>
        <function-ref name="toggle" scoped="" ref="0x11090ae50"/>
        <function-ref name="isOutput" scoped="" ref="0x110909020"/>
        <function-ref name="getResistor" scoped="" ref="0x1109091a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110909330"/>
        <function-ref name="get" scoped="" ref="0x1109094b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110909640"/>
        <function-ref name="getRaw" scoped="" ref="0x1109097c8"/>
        <function-ref name="set" scoped="" ref="0x110909950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110909ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110909c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110908020"/>
        <function-ref name="clr" scoped="" ref="0x1109081a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x1108f6568" loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x1108f6568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1108f68b8"/>
        <function-ref name="isInput" scoped="" ref="0x1108f6a40"/>
        <function-ref name="setResistor" scoped="" ref="0x1108f6bc8"/>
        <function-ref name="toggle" scoped="" ref="0x1108f6d50"/>
        <function-ref name="isOutput" scoped="" ref="0x1108f5020"/>
        <function-ref name="getResistor" scoped="" ref="0x1108f51a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1108f5330"/>
        <function-ref name="get" scoped="" ref="0x1108f54b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1108f5640"/>
        <function-ref name="getRaw" scoped="" ref="0x1108f57c8"/>
        <function-ref name="set" scoped="" ref="0x1108f5950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1108f5ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1108f5c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1108f4020"/>
        <function-ref name="clr" scoped="" ref="0x1108f41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x11092c568" loc="104:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x11092c568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11092c8b8"/>
        <function-ref name="isInput" scoped="" ref="0x11092ca40"/>
        <function-ref name="setResistor" scoped="" ref="0x11092cbc8"/>
        <function-ref name="toggle" scoped="" ref="0x11092cd50"/>
        <function-ref name="isOutput" scoped="" ref="0x11092b020"/>
        <function-ref name="getResistor" scoped="" ref="0x11092b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x11092b330"/>
        <function-ref name="get" scoped="" ref="0x11092b4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11092b640"/>
        <function-ref name="getRaw" scoped="" ref="0x11092b7c8"/>
        <function-ref name="set" scoped="" ref="0x11092b950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11092bad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11092bc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11092a020"/>
        <function-ref name="clr" scoped="" ref="0x11092a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x110926568" loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x110926568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1109268b8"/>
        <function-ref name="isInput" scoped="" ref="0x110926a40"/>
        <function-ref name="setResistor" scoped="" ref="0x110926bc8"/>
        <function-ref name="toggle" scoped="" ref="0x110926d50"/>
        <function-ref name="isOutput" scoped="" ref="0x110925020"/>
        <function-ref name="getResistor" scoped="" ref="0x1109251a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110925330"/>
        <function-ref name="get" scoped="" ref="0x1109254b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110925640"/>
        <function-ref name="getRaw" scoped="" ref="0x1109257c8"/>
        <function-ref name="set" scoped="" ref="0x110925950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110925ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110925c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110924020"/>
        <function-ref name="clr" scoped="" ref="0x1109241a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x110911568" loc="85:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x110911568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1109118b8"/>
        <function-ref name="isInput" scoped="" ref="0x110911a40"/>
        <function-ref name="setResistor" scoped="" ref="0x110911bc8"/>
        <function-ref name="toggle" scoped="" ref="0x110911d50"/>
        <function-ref name="isOutput" scoped="" ref="0x110910020"/>
        <function-ref name="getResistor" scoped="" ref="0x1109101a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110910330"/>
        <function-ref name="get" scoped="" ref="0x1109104b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110910640"/>
        <function-ref name="getRaw" scoped="" ref="0x1109107c8"/>
        <function-ref name="set" scoped="" ref="0x110910950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110910ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110910c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11090f020"/>
        <function-ref name="clr" scoped="" ref="0x11090f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x110932568" loc="98:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x110932568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1109328b8"/>
        <function-ref name="isInput" scoped="" ref="0x110932a40"/>
        <function-ref name="setResistor" scoped="" ref="0x110932bc8"/>
        <function-ref name="toggle" scoped="" ref="0x110932d50"/>
        <function-ref name="isOutput" scoped="" ref="0x110931020"/>
        <function-ref name="getResistor" scoped="" ref="0x1109311a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110931330"/>
        <function-ref name="get" scoped="" ref="0x1109314b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110931640"/>
        <function-ref name="getRaw" scoped="" ref="0x1109317c8"/>
        <function-ref name="set" scoped="" ref="0x110931950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110931ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110931c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110930020"/>
        <function-ref name="clr" scoped="" ref="0x1109301a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x110957568" loc="109:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x110957568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1109578b8"/>
        <function-ref name="isInput" scoped="" ref="0x110957a40"/>
        <function-ref name="setResistor" scoped="" ref="0x110957bc8"/>
        <function-ref name="toggle" scoped="" ref="0x110957d50"/>
        <function-ref name="isOutput" scoped="" ref="0x110956020"/>
        <function-ref name="getResistor" scoped="" ref="0x1109561a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110956330"/>
        <function-ref name="get" scoped="" ref="0x1109564b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110956640"/>
        <function-ref name="getRaw" scoped="" ref="0x1109567c8"/>
        <function-ref name="set" scoped="" ref="0x110956950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110956ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110956c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110955020"/>
        <function-ref name="clr" scoped="" ref="0x1109551a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x110973560" loc="154:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x110973560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1109738b0"/>
        <function-ref name="isInput" scoped="" ref="0x110973a38"/>
        <function-ref name="setResistor" scoped="" ref="0x110973bc0"/>
        <function-ref name="toggle" scoped="" ref="0x110973d48"/>
        <function-ref name="isOutput" scoped="" ref="0x110972020"/>
        <function-ref name="getResistor" scoped="" ref="0x1109721a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110972330"/>
        <function-ref name="get" scoped="" ref="0x1109724b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110972640"/>
        <function-ref name="getRaw" scoped="" ref="0x1109727c8"/>
        <function-ref name="set" scoped="" ref="0x110972950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110972ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110972c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110971020"/>
        <function-ref name="clr" scoped="" ref="0x1109711a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x1108e2d48" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x1108e2d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1108df0d8"/>
        <function-ref name="isInput" scoped="" ref="0x1108df260"/>
        <function-ref name="setResistor" scoped="" ref="0x1108df3e8"/>
        <function-ref name="toggle" scoped="" ref="0x1108df570"/>
        <function-ref name="isOutput" scoped="" ref="0x1108df6f8"/>
        <function-ref name="getResistor" scoped="" ref="0x1108df880"/>
        <function-ref name="makeOutput" scoped="" ref="0x1108dfa08"/>
        <function-ref name="get" scoped="" ref="0x1108dfb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1108dfd18"/>
        <function-ref name="getRaw" scoped="" ref="0x1108de020"/>
        <function-ref name="set" scoped="" ref="0x1108de1a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1108de330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1108de4b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1108de740"/>
        <function-ref name="clr" scoped="" ref="0x1108de8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x110900568" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x110900568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1109008b8"/>
        <function-ref name="isInput" scoped="" ref="0x110900a40"/>
        <function-ref name="setResistor" scoped="" ref="0x110900bc8"/>
        <function-ref name="toggle" scoped="" ref="0x110900d50"/>
        <function-ref name="isOutput" scoped="" ref="0x1108ff020"/>
        <function-ref name="getResistor" scoped="" ref="0x1108ff1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1108ff330"/>
        <function-ref name="get" scoped="" ref="0x1108ff4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1108ff640"/>
        <function-ref name="getRaw" scoped="" ref="0x1108ff7c8"/>
        <function-ref name="set" scoped="" ref="0x1108ff950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1108ffad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1108ffc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1108fe020"/>
        <function-ref name="clr" scoped="" ref="0x1108fe1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x11091f568" loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x11091f568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11091f8b8"/>
        <function-ref name="isInput" scoped="" ref="0x11091fa40"/>
        <function-ref name="setResistor" scoped="" ref="0x11091fbc8"/>
        <function-ref name="toggle" scoped="" ref="0x11091fd50"/>
        <function-ref name="isOutput" scoped="" ref="0x11091e020"/>
        <function-ref name="getResistor" scoped="" ref="0x11091e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x11091e330"/>
        <function-ref name="get" scoped="" ref="0x11091e4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11091e640"/>
        <function-ref name="getRaw" scoped="" ref="0x11091e7c8"/>
        <function-ref name="set" scoped="" ref="0x11091e950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11091ead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11091ec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11091d020"/>
        <function-ref name="clr" scoped="" ref="0x11091d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x110940568" loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x110940568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1109408b8"/>
        <function-ref name="isInput" scoped="" ref="0x110940a40"/>
        <function-ref name="setResistor" scoped="" ref="0x110940bc8"/>
        <function-ref name="toggle" scoped="" ref="0x110940d50"/>
        <function-ref name="isOutput" scoped="" ref="0x11093f020"/>
        <function-ref name="getResistor" scoped="" ref="0x11093f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x11093f330"/>
        <function-ref name="get" scoped="" ref="0x11093f4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11093f640"/>
        <function-ref name="getRaw" scoped="" ref="0x11093f7c8"/>
        <function-ref name="set" scoped="" ref="0x11093f950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11093fad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11093fc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11093e020"/>
        <function-ref name="clr" scoped="" ref="0x11093e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x11096f560" loc="156:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x11096f560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11096f8b0"/>
        <function-ref name="isInput" scoped="" ref="0x11096fa38"/>
        <function-ref name="setResistor" scoped="" ref="0x11096fbc0"/>
        <function-ref name="toggle" scoped="" ref="0x11096fd48"/>
        <function-ref name="isOutput" scoped="" ref="0x11096e020"/>
        <function-ref name="getResistor" scoped="" ref="0x11096e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x11096e330"/>
        <function-ref name="get" scoped="" ref="0x11096e4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11096e640"/>
        <function-ref name="getRaw" scoped="" ref="0x11096e7c8"/>
        <function-ref name="set" scoped="" ref="0x11096e950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11096ead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11096ec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11096d020"/>
        <function-ref name="clr" scoped="" ref="0x11096d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x110969558" loc="160:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x110969558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1109698a8"/>
        <function-ref name="isInput" scoped="" ref="0x110969a30"/>
        <function-ref name="setResistor" scoped="" ref="0x110969bb8"/>
        <function-ref name="toggle" scoped="" ref="0x110969d40"/>
        <function-ref name="isOutput" scoped="" ref="0x110968020"/>
        <function-ref name="getResistor" scoped="" ref="0x1109681a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110968330"/>
        <function-ref name="get" scoped="" ref="0x1109684b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110968640"/>
        <function-ref name="getRaw" scoped="" ref="0x1109687c8"/>
        <function-ref name="set" scoped="" ref="0x110968950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110968ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110968c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110967020"/>
        <function-ref name="clr" scoped="" ref="0x1109671a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x110992558" loc="166:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x110992558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1109928a8"/>
        <function-ref name="isInput" scoped="" ref="0x110992a30"/>
        <function-ref name="setResistor" scoped="" ref="0x110992bb8"/>
        <function-ref name="toggle" scoped="" ref="0x110992d40"/>
        <function-ref name="isOutput" scoped="" ref="0x110991020"/>
        <function-ref name="getResistor" scoped="" ref="0x1109911a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110991330"/>
        <function-ref name="get" scoped="" ref="0x1109914b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110991640"/>
        <function-ref name="getRaw" scoped="" ref="0x1109917c8"/>
        <function-ref name="set" scoped="" ref="0x110991950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110991ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110991c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110990020"/>
        <function-ref name="clr" scoped="" ref="0x1109901a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x11093c568" loc="93:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x11093c568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11093c8b8"/>
        <function-ref name="isInput" scoped="" ref="0x11093ca40"/>
        <function-ref name="setResistor" scoped="" ref="0x11093cbc8"/>
        <function-ref name="toggle" scoped="" ref="0x11093cd50"/>
        <function-ref name="isOutput" scoped="" ref="0x11093b020"/>
        <function-ref name="getResistor" scoped="" ref="0x11093b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x11093b330"/>
        <function-ref name="get" scoped="" ref="0x11093b4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11093b640"/>
        <function-ref name="getRaw" scoped="" ref="0x11093b7c8"/>
        <function-ref name="set" scoped="" ref="0x11093b950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11093bad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11093bc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11093a020"/>
        <function-ref name="clr" scoped="" ref="0x11093a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x11096d560" loc="157:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x11096d560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11096d8b0"/>
        <function-ref name="isInput" scoped="" ref="0x11096da38"/>
        <function-ref name="setResistor" scoped="" ref="0x11096dbc0"/>
        <function-ref name="toggle" scoped="" ref="0x11096dd48"/>
        <function-ref name="isOutput" scoped="" ref="0x11096c020"/>
        <function-ref name="getResistor" scoped="" ref="0x11096c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x11096c330"/>
        <function-ref name="get" scoped="" ref="0x11096c4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11096c640"/>
        <function-ref name="getRaw" scoped="" ref="0x11096c7c8"/>
        <function-ref name="set" scoped="" ref="0x11096c950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11096cad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11096cc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11096b020"/>
        <function-ref name="clr" scoped="" ref="0x11096b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x1108da978" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x1108da978"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1108dacc8"/>
        <function-ref name="isInput" scoped="" ref="0x1108dae50"/>
        <function-ref name="setResistor" scoped="" ref="0x1108d9020"/>
        <function-ref name="toggle" scoped="" ref="0x1108d91a8"/>
        <function-ref name="isOutput" scoped="" ref="0x1108d9330"/>
        <function-ref name="getResistor" scoped="" ref="0x1108d94b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1108d9640"/>
        <function-ref name="get" scoped="" ref="0x1108d97c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1108d9950"/>
        <function-ref name="getRaw" scoped="" ref="0x1108d9ad8"/>
        <function-ref name="set" scoped="" ref="0x1108d9c60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1108d9de8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11090c020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11090c2a8"/>
        <function-ref name="clr" scoped="" ref="0x11090c430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x1108fa568" loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x1108fa568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1108fa8b8"/>
        <function-ref name="isInput" scoped="" ref="0x1108faa40"/>
        <function-ref name="setResistor" scoped="" ref="0x1108fabc8"/>
        <function-ref name="toggle" scoped="" ref="0x1108fad50"/>
        <function-ref name="isOutput" scoped="" ref="0x1108f9020"/>
        <function-ref name="getResistor" scoped="" ref="0x1108f91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1108f9330"/>
        <function-ref name="get" scoped="" ref="0x1108f94b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1108f9640"/>
        <function-ref name="getRaw" scoped="" ref="0x1108f97c8"/>
        <function-ref name="set" scoped="" ref="0x1108f9950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1108f9ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1108f9c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1108f8020"/>
        <function-ref name="clr" scoped="" ref="0x1108f81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x110919568" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x110919568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1109198b8"/>
        <function-ref name="isInput" scoped="" ref="0x110919a40"/>
        <function-ref name="setResistor" scoped="" ref="0x110919bc8"/>
        <function-ref name="toggle" scoped="" ref="0x110919d50"/>
        <function-ref name="isOutput" scoped="" ref="0x110918020"/>
        <function-ref name="getResistor" scoped="" ref="0x1109181a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110918330"/>
        <function-ref name="get" scoped="" ref="0x1109184b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110918640"/>
        <function-ref name="getRaw" scoped="" ref="0x1109187c8"/>
        <function-ref name="set" scoped="" ref="0x110918950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110918ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110918c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110917020"/>
        <function-ref name="clr" scoped="" ref="0x1109171a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x110975560" loc="153:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x110975560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1109758b0"/>
        <function-ref name="isInput" scoped="" ref="0x110975a38"/>
        <function-ref name="setResistor" scoped="" ref="0x110975bc0"/>
        <function-ref name="toggle" scoped="" ref="0x110975d48"/>
        <function-ref name="isOutput" scoped="" ref="0x110974020"/>
        <function-ref name="getResistor" scoped="" ref="0x1109741a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110974330"/>
        <function-ref name="get" scoped="" ref="0x1109744b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110974640"/>
        <function-ref name="getRaw" scoped="" ref="0x1109747c8"/>
        <function-ref name="set" scoped="" ref="0x110974950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110974ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110974c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110973020"/>
        <function-ref name="clr" scoped="" ref="0x1109731a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x110960558" loc="164:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x110960558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1109608a8"/>
        <function-ref name="isInput" scoped="" ref="0x110960a30"/>
        <function-ref name="setResistor" scoped="" ref="0x110960bb8"/>
        <function-ref name="toggle" scoped="" ref="0x110960d40"/>
        <function-ref name="isOutput" scoped="" ref="0x11095f020"/>
        <function-ref name="getResistor" scoped="" ref="0x11095f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x11095f330"/>
        <function-ref name="get" scoped="" ref="0x11095f4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11095f640"/>
        <function-ref name="getRaw" scoped="" ref="0x11095f7c8"/>
        <function-ref name="set" scoped="" ref="0x11095f950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11095fad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11095fc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11095e020"/>
        <function-ref name="clr" scoped="" ref="0x11095e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x110915668" loc="83:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x110915668"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1109159b8"/>
        <function-ref name="isInput" scoped="" ref="0x110915b40"/>
        <function-ref name="setResistor" scoped="" ref="0x110915cc8"/>
        <function-ref name="toggle" scoped="" ref="0x110915e50"/>
        <function-ref name="isOutput" scoped="" ref="0x110914020"/>
        <function-ref name="getResistor" scoped="" ref="0x1109141a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110914330"/>
        <function-ref name="get" scoped="" ref="0x1109144b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110914640"/>
        <function-ref name="getRaw" scoped="" ref="0x1109147c8"/>
        <function-ref name="set" scoped="" ref="0x110914950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110914ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110914c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110913020"/>
        <function-ref name="clr" scoped="" ref="0x1109131a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x110936568" loc="96:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x110936568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1109368b8"/>
        <function-ref name="isInput" scoped="" ref="0x110936a40"/>
        <function-ref name="setResistor" scoped="" ref="0x110936bc8"/>
        <function-ref name="toggle" scoped="" ref="0x110936d50"/>
        <function-ref name="isOutput" scoped="" ref="0x110935020"/>
        <function-ref name="getResistor" scoped="" ref="0x1109351a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110935330"/>
        <function-ref name="get" scoped="" ref="0x1109354b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110935640"/>
        <function-ref name="getRaw" scoped="" ref="0x1109357c8"/>
        <function-ref name="set" scoped="" ref="0x110935950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110935ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110935c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110934020"/>
        <function-ref name="clr" scoped="" ref="0x1109341a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x11095b568" loc="107:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x11095b568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11095b8b8"/>
        <function-ref name="isInput" scoped="" ref="0x11095ba40"/>
        <function-ref name="setResistor" scoped="" ref="0x11095bbc8"/>
        <function-ref name="toggle" scoped="" ref="0x11095bd50"/>
        <function-ref name="isOutput" scoped="" ref="0x11095a020"/>
        <function-ref name="getResistor" scoped="" ref="0x11095a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x11095a330"/>
        <function-ref name="get" scoped="" ref="0x11095a4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11095a640"/>
        <function-ref name="getRaw" scoped="" ref="0x11095a7c8"/>
        <function-ref name="set" scoped="" ref="0x11095a950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11095aad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11095ac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110959020"/>
        <function-ref name="clr" scoped="" ref="0x1109591a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x110908568" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x110908568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1109088b8"/>
        <function-ref name="isInput" scoped="" ref="0x110908a40"/>
        <function-ref name="setResistor" scoped="" ref="0x110908bc8"/>
        <function-ref name="toggle" scoped="" ref="0x110908d50"/>
        <function-ref name="isOutput" scoped="" ref="0x110907020"/>
        <function-ref name="getResistor" scoped="" ref="0x1109071a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110907330"/>
        <function-ref name="get" scoped="" ref="0x1109074b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110907640"/>
        <function-ref name="getRaw" scoped="" ref="0x1109077c8"/>
        <function-ref name="set" scoped="" ref="0x110907950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110907ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110907c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110906020"/>
        <function-ref name="clr" scoped="" ref="0x1109061a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x11092a568" loc="105:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x11092a568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11092a8b8"/>
        <function-ref name="isInput" scoped="" ref="0x11092aa40"/>
        <function-ref name="setResistor" scoped="" ref="0x11092abc8"/>
        <function-ref name="toggle" scoped="" ref="0x11092ad50"/>
        <function-ref name="isOutput" scoped="" ref="0x110928020"/>
        <function-ref name="getResistor" scoped="" ref="0x1109281a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110928330"/>
        <function-ref name="get" scoped="" ref="0x1109284b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110928640"/>
        <function-ref name="getRaw" scoped="" ref="0x1109287c8"/>
        <function-ref name="set" scoped="" ref="0x110928950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110928ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110928c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110927020"/>
        <function-ref name="clr" scoped="" ref="0x1109271a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x110904568" loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x110904568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1109048b8"/>
        <function-ref name="isInput" scoped="" ref="0x110904a40"/>
        <function-ref name="setResistor" scoped="" ref="0x110904bc8"/>
        <function-ref name="toggle" scoped="" ref="0x110904d50"/>
        <function-ref name="isOutput" scoped="" ref="0x110903020"/>
        <function-ref name="getResistor" scoped="" ref="0x1109031a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110903330"/>
        <function-ref name="get" scoped="" ref="0x1109034b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110903640"/>
        <function-ref name="getRaw" scoped="" ref="0x1109037c8"/>
        <function-ref name="set" scoped="" ref="0x110903950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110903ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110903c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110902020"/>
        <function-ref name="clr" scoped="" ref="0x1109021a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x110924568" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x110924568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1109248b8"/>
        <function-ref name="isInput" scoped="" ref="0x110924a40"/>
        <function-ref name="setResistor" scoped="" ref="0x110924bc8"/>
        <function-ref name="toggle" scoped="" ref="0x110924d50"/>
        <function-ref name="isOutput" scoped="" ref="0x110922020"/>
        <function-ref name="getResistor" scoped="" ref="0x1109221a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110922330"/>
        <function-ref name="get" scoped="" ref="0x1109224b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110922640"/>
        <function-ref name="getRaw" scoped="" ref="0x1109227c8"/>
        <function-ref name="set" scoped="" ref="0x110922950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110922ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110922c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110921020"/>
        <function-ref name="clr" scoped="" ref="0x1109211a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x11090f568" loc="86:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x11090f568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11090f8b8"/>
        <function-ref name="isInput" scoped="" ref="0x11090fa40"/>
        <function-ref name="setResistor" scoped="" ref="0x11090fbc8"/>
        <function-ref name="toggle" scoped="" ref="0x11090fd50"/>
        <function-ref name="isOutput" scoped="" ref="0x11090e020"/>
        <function-ref name="getResistor" scoped="" ref="0x11090e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x11090e330"/>
        <function-ref name="get" scoped="" ref="0x11090e4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11090e640"/>
        <function-ref name="getRaw" scoped="" ref="0x11090e7c8"/>
        <function-ref name="set" scoped="" ref="0x11090e950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11090ead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11090ec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11090d020"/>
        <function-ref name="clr" scoped="" ref="0x11090d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x110930568" loc="99:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x110930568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1109308b8"/>
        <function-ref name="isInput" scoped="" ref="0x110930a40"/>
        <function-ref name="setResistor" scoped="" ref="0x110930bc8"/>
        <function-ref name="toggle" scoped="" ref="0x110930d50"/>
        <function-ref name="isOutput" scoped="" ref="0x11092f020"/>
        <function-ref name="getResistor" scoped="" ref="0x11092f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x11092f330"/>
        <function-ref name="get" scoped="" ref="0x11092f4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11092f640"/>
        <function-ref name="getRaw" scoped="" ref="0x11092f7c8"/>
        <function-ref name="set" scoped="" ref="0x11092f950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11092fad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11092fc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11092e020"/>
        <function-ref name="clr" scoped="" ref="0x11092e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x110955568" loc="110:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x110955568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1109558b8"/>
        <function-ref name="isInput" scoped="" ref="0x110955a40"/>
        <function-ref name="setResistor" scoped="" ref="0x110955bc8"/>
        <function-ref name="toggle" scoped="" ref="0x110955d50"/>
        <function-ref name="isOutput" scoped="" ref="0x110954020"/>
        <function-ref name="getResistor" scoped="" ref="0x1109541a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110954330"/>
        <function-ref name="get" scoped="" ref="0x1109544b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110954640"/>
        <function-ref name="getRaw" scoped="" ref="0x1109547c8"/>
        <function-ref name="set" scoped="" ref="0x110954950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110954ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110954c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110953020"/>
        <function-ref name="clr" scoped="" ref="0x1109531a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x1108dec88" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x1108dec88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1108dd020"/>
        <function-ref name="isInput" scoped="" ref="0x1108dd1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x1108dd330"/>
        <function-ref name="toggle" scoped="" ref="0x1108dd4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x1108dd640"/>
        <function-ref name="getResistor" scoped="" ref="0x1108dd7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1108dd950"/>
        <function-ref name="get" scoped="" ref="0x1108ddad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1108ddc60"/>
        <function-ref name="getRaw" scoped="" ref="0x1108ddde8"/>
        <function-ref name="set" scoped="" ref="0x1108dc020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1108dc1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1108dc330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1108dc5b8"/>
        <function-ref name="clr" scoped="" ref="0x1108dc740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x1108fe568" loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x1108fe568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1108fe8b8"/>
        <function-ref name="isInput" scoped="" ref="0x1108fea40"/>
        <function-ref name="setResistor" scoped="" ref="0x1108febc8"/>
        <function-ref name="toggle" scoped="" ref="0x1108fed50"/>
        <function-ref name="isOutput" scoped="" ref="0x1108fd020"/>
        <function-ref name="getResistor" scoped="" ref="0x1108fd1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1108fd330"/>
        <function-ref name="get" scoped="" ref="0x1108fd4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1108fd640"/>
        <function-ref name="getRaw" scoped="" ref="0x1108fd7c8"/>
        <function-ref name="set" scoped="" ref="0x1108fd950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1108fdad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1108fdc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1108fc020"/>
        <function-ref name="clr" scoped="" ref="0x1108fc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x11091d568" loc="76:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x11091d568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11091d8b8"/>
        <function-ref name="isInput" scoped="" ref="0x11091da40"/>
        <function-ref name="setResistor" scoped="" ref="0x11091dbc8"/>
        <function-ref name="toggle" scoped="" ref="0x11091dd50"/>
        <function-ref name="isOutput" scoped="" ref="0x11091c020"/>
        <function-ref name="getResistor" scoped="" ref="0x11091c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x11091c330"/>
        <function-ref name="get" scoped="" ref="0x11091c4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11091c640"/>
        <function-ref name="getRaw" scoped="" ref="0x11091c7c8"/>
        <function-ref name="set" scoped="" ref="0x11091c950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11091cad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11091cc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11091b020"/>
        <function-ref name="clr" scoped="" ref="0x11091b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x11093e568" loc="89:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x11093e568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11093e8b8"/>
        <function-ref name="isInput" scoped="" ref="0x11093ea40"/>
        <function-ref name="setResistor" scoped="" ref="0x11093ebc8"/>
        <function-ref name="toggle" scoped="" ref="0x11093ed50"/>
        <function-ref name="isOutput" scoped="" ref="0x11093d020"/>
        <function-ref name="getResistor" scoped="" ref="0x11093d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x11093d330"/>
        <function-ref name="get" scoped="" ref="0x11093d4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11093d640"/>
        <function-ref name="getRaw" scoped="" ref="0x11093d7c8"/>
        <function-ref name="set" scoped="" ref="0x11093d950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11093dad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11093dc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11093c020"/>
        <function-ref name="clr" scoped="" ref="0x11093c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x110947548" loc="148:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x110947548"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110947898"/>
        <function-ref name="isInput" scoped="" ref="0x110947a20"/>
        <function-ref name="setResistor" scoped="" ref="0x110947ba8"/>
        <function-ref name="toggle" scoped="" ref="0x110947d30"/>
        <function-ref name="isOutput" scoped="" ref="0x110946020"/>
        <function-ref name="getResistor" scoped="" ref="0x1109461a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110946330"/>
        <function-ref name="get" scoped="" ref="0x1109464b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110946640"/>
        <function-ref name="getRaw" scoped="" ref="0x1109467c8"/>
        <function-ref name="set" scoped="" ref="0x110946950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110946ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110946c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110945020"/>
        <function-ref name="clr" scoped="" ref="0x1109451a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x110967558" loc="161:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x110967558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1109678a8"/>
        <function-ref name="isInput" scoped="" ref="0x110967a30"/>
        <function-ref name="setResistor" scoped="" ref="0x110967bb8"/>
        <function-ref name="toggle" scoped="" ref="0x110967d40"/>
        <function-ref name="isOutput" scoped="" ref="0x110965020"/>
        <function-ref name="getResistor" scoped="" ref="0x1109651a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110965330"/>
        <function-ref name="get" scoped="" ref="0x1109654b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110965640"/>
        <function-ref name="getRaw" scoped="" ref="0x1109657c8"/>
        <function-ref name="set" scoped="" ref="0x110965950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110965ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110965c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110964020"/>
        <function-ref name="clr" scoped="" ref="0x1109641a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x110949560" loc="147:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x110949560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1109498b0"/>
        <function-ref name="isInput" scoped="" ref="0x110949a38"/>
        <function-ref name="setResistor" scoped="" ref="0x110949bc0"/>
        <function-ref name="toggle" scoped="" ref="0x110949d48"/>
        <function-ref name="isOutput" scoped="" ref="0x110948020"/>
        <function-ref name="getResistor" scoped="" ref="0x1109481a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110948330"/>
        <function-ref name="get" scoped="" ref="0x1109484b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110948640"/>
        <function-ref name="getRaw" scoped="" ref="0x1109487c8"/>
        <function-ref name="set" scoped="" ref="0x110948950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110948ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110948c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110947020"/>
        <function-ref name="clr" scoped="" ref="0x1109471a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x11093a568" loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x11093a568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11093a8b8"/>
        <function-ref name="isInput" scoped="" ref="0x11093aa40"/>
        <function-ref name="setResistor" scoped="" ref="0x11093abc8"/>
        <function-ref name="toggle" scoped="" ref="0x11093ad50"/>
        <function-ref name="isOutput" scoped="" ref="0x110939020"/>
        <function-ref name="getResistor" scoped="" ref="0x1109391a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110939330"/>
        <function-ref name="get" scoped="" ref="0x1109394b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110939640"/>
        <function-ref name="getRaw" scoped="" ref="0x1109397c8"/>
        <function-ref name="set" scoped="" ref="0x110939950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110939ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110939c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110938020"/>
        <function-ref name="clr" scoped="" ref="0x1109381a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x110990558" loc="168:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x110990558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1109908a8"/>
        <function-ref name="isInput" scoped="" ref="0x110990a30"/>
        <function-ref name="setResistor" scoped="" ref="0x110990bb8"/>
        <function-ref name="toggle" scoped="" ref="0x110990d40"/>
        <function-ref name="isOutput" scoped="" ref="0x11098f020"/>
        <function-ref name="getResistor" scoped="" ref="0x11098f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x11098f330"/>
        <function-ref name="get" scoped="" ref="0x11098f4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11098f640"/>
        <function-ref name="getRaw" scoped="" ref="0x11098f7c8"/>
        <function-ref name="set" scoped="" ref="0x11098f950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11098fad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11098fc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11098e020"/>
        <function-ref name="clr" scoped="" ref="0x11098e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x11098a568" loc="172:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x11098a568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11098a8b8"/>
        <function-ref name="isInput" scoped="" ref="0x11098aa40"/>
        <function-ref name="setResistor" scoped="" ref="0x11098abc8"/>
        <function-ref name="toggle" scoped="" ref="0x11098ad50"/>
        <function-ref name="isOutput" scoped="" ref="0x110989020"/>
        <function-ref name="getResistor" scoped="" ref="0x1109891a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110989330"/>
        <function-ref name="get" scoped="" ref="0x1109894b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110989640"/>
        <function-ref name="getRaw" scoped="" ref="0x1109897c8"/>
        <function-ref name="set" scoped="" ref="0x110989950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110989ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110989c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110988020"/>
        <function-ref name="clr" scoped="" ref="0x1109881a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x1109515b8" loc="143:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x1109515b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110951d08"/>
        <function-ref name="isInput" scoped="" ref="0x110950020"/>
        <function-ref name="setResistor" scoped="" ref="0x1109501a8"/>
        <function-ref name="toggle" scoped="" ref="0x110950330"/>
        <function-ref name="isOutput" scoped="" ref="0x1109504b8"/>
        <function-ref name="getResistor" scoped="" ref="0x110950640"/>
        <function-ref name="makeOutput" scoped="" ref="0x1109507c8"/>
        <function-ref name="get" scoped="" ref="0x110950950"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110950ad8"/>
        <function-ref name="getRaw" scoped="" ref="0x110950c60"/>
        <function-ref name="set" scoped="" ref="0x110950de8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11094f020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11094f1a8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11094f430"/>
        <function-ref name="clr" scoped="" ref="0x11094f5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x110986e18" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x110986e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1109961a8"/>
        <function-ref name="isInput" scoped="" ref="0x110996330"/>
        <function-ref name="setResistor" scoped="" ref="0x1109964b8"/>
        <function-ref name="toggle" scoped="" ref="0x110996640"/>
        <function-ref name="isOutput" scoped="" ref="0x1109967c8"/>
        <function-ref name="getResistor" scoped="" ref="0x110996950"/>
        <function-ref name="makeOutput" scoped="" ref="0x110996ad8"/>
        <function-ref name="get" scoped="" ref="0x110996c60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110996de8"/>
        <function-ref name="getRaw" scoped="" ref="0x110995020"/>
        <function-ref name="set" scoped="" ref="0x1109951a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110995330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1109954b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110995740"/>
        <function-ref name="clr" scoped="" ref="0x1109958c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1109c9478" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1109c9478"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1109c97c8"/>
        <function-ref name="isInput" scoped="" ref="0x1109c9950"/>
        <function-ref name="setResistor" scoped="" ref="0x1109c9ad8"/>
        <function-ref name="toggle" scoped="" ref="0x1109c9c60"/>
        <function-ref name="isOutput" scoped="" ref="0x1109c9de8"/>
        <function-ref name="getResistor" scoped="" ref="0x1109c8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1109c81a8"/>
        <function-ref name="get" scoped="" ref="0x1109c8330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1109c84b8"/>
        <function-ref name="getRaw" scoped="" ref="0x1109c8640"/>
        <function-ref name="set" scoped="" ref="0x1109c87c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1109c8950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1109c8ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1109c8d60"/>
        <function-ref name="clr" scoped="" ref="0x1109c7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1109c5ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1109c5ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1109c4020"/>
        <function-ref name="isInput" scoped="" ref="0x1109c41a8"/>
        <function-ref name="setResistor" scoped="" ref="0x1109c4330"/>
        <function-ref name="toggle" scoped="" ref="0x1109c44b8"/>
        <function-ref name="isOutput" scoped="" ref="0x1109c4640"/>
        <function-ref name="getResistor" scoped="" ref="0x1109c47c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1109c4950"/>
        <function-ref name="get" scoped="" ref="0x1109c4ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1109c4c60"/>
        <function-ref name="getRaw" scoped="" ref="0x1109c4de8"/>
        <function-ref name="set" scoped="" ref="0x1109c3020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1109c31a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1109c3330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1109c35b8"/>
        <function-ref name="clr" scoped="" ref="0x1109c3740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1109c03d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1109c03d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1109c0728"/>
        <function-ref name="isInput" scoped="" ref="0x1109c08b0"/>
        <function-ref name="setResistor" scoped="" ref="0x1109c0a38"/>
        <function-ref name="toggle" scoped="" ref="0x1109c0bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x1109c0d48"/>
        <function-ref name="getResistor" scoped="" ref="0x1109be020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1109be1a8"/>
        <function-ref name="get" scoped="" ref="0x1109be330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1109be4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x1109be640"/>
        <function-ref name="set" scoped="" ref="0x1109be7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1109be950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1109bead8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1109bed60"/>
        <function-ref name="clr" scoped="" ref="0x1109bd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1109bbca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1109bbca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1109ba020"/>
        <function-ref name="isInput" scoped="" ref="0x1109ba1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x1109ba330"/>
        <function-ref name="toggle" scoped="" ref="0x1109ba4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x1109ba640"/>
        <function-ref name="getResistor" scoped="" ref="0x1109ba7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1109ba950"/>
        <function-ref name="get" scoped="" ref="0x1109baad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1109bac60"/>
        <function-ref name="getRaw" scoped="" ref="0x1109bade8"/>
        <function-ref name="set" scoped="" ref="0x1109b9020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1109b91a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1109b9330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1109b95b8"/>
        <function-ref name="clr" scoped="" ref="0x1109b9740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1109b63d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1109b63d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1109b6728"/>
        <function-ref name="isInput" scoped="" ref="0x1109b68b0"/>
        <function-ref name="setResistor" scoped="" ref="0x1109b6a38"/>
        <function-ref name="toggle" scoped="" ref="0x1109b6bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x1109b6d48"/>
        <function-ref name="getResistor" scoped="" ref="0x1109b5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1109b51a8"/>
        <function-ref name="get" scoped="" ref="0x1109b5330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1109b54b8"/>
        <function-ref name="getRaw" scoped="" ref="0x1109b5640"/>
        <function-ref name="set" scoped="" ref="0x1109b57c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1109b5950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1109b5ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1109b5d60"/>
        <function-ref name="clr" scoped="" ref="0x1109b4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1109b2ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1109b2ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1109b1020"/>
        <function-ref name="isInput" scoped="" ref="0x1109b11a8"/>
        <function-ref name="setResistor" scoped="" ref="0x1109b1330"/>
        <function-ref name="toggle" scoped="" ref="0x1109b14b8"/>
        <function-ref name="isOutput" scoped="" ref="0x1109b1640"/>
        <function-ref name="getResistor" scoped="" ref="0x1109b17c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1109b1950"/>
        <function-ref name="get" scoped="" ref="0x1109b1ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1109b1c60"/>
        <function-ref name="getRaw" scoped="" ref="0x1109b1de8"/>
        <function-ref name="set" scoped="" ref="0x1109b0020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1109b01a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1109b0330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1109b05b8"/>
        <function-ref name="clr" scoped="" ref="0x1109b0740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1109e53d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1109e53d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1109e5728"/>
        <function-ref name="isInput" scoped="" ref="0x1109e58b0"/>
        <function-ref name="setResistor" scoped="" ref="0x1109e5a38"/>
        <function-ref name="toggle" scoped="" ref="0x1109e5bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x1109e5d48"/>
        <function-ref name="getResistor" scoped="" ref="0x1109e4020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1109e41a8"/>
        <function-ref name="get" scoped="" ref="0x1109e4330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1109e44b8"/>
        <function-ref name="getRaw" scoped="" ref="0x1109e4640"/>
        <function-ref name="set" scoped="" ref="0x1109e47c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1109e4950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1109e4ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1109e4d60"/>
        <function-ref name="clr" scoped="" ref="0x1109e3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1109e1ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1109e1ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1109e0020"/>
        <function-ref name="isInput" scoped="" ref="0x1109e01a8"/>
        <function-ref name="setResistor" scoped="" ref="0x1109e0330"/>
        <function-ref name="toggle" scoped="" ref="0x1109e04b8"/>
        <function-ref name="isOutput" scoped="" ref="0x1109e0640"/>
        <function-ref name="getResistor" scoped="" ref="0x1109e07c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1109e0950"/>
        <function-ref name="get" scoped="" ref="0x1109e0ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1109e0c60"/>
        <function-ref name="getRaw" scoped="" ref="0x1109e0de8"/>
        <function-ref name="set" scoped="" ref="0x1109df020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1109df1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1109df330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1109df5b8"/>
        <function-ref name="clr" scoped="" ref="0x1109df740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1109dc3d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1109dc3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1109dc728"/>
        <function-ref name="isInput" scoped="" ref="0x1109dc8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x1109dca38"/>
        <function-ref name="toggle" scoped="" ref="0x1109dcbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x1109dcd48"/>
        <function-ref name="getResistor" scoped="" ref="0x1109db020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1109db1a8"/>
        <function-ref name="get" scoped="" ref="0x1109db330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1109db4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x1109db640"/>
        <function-ref name="set" scoped="" ref="0x1109db7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1109db950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1109dbad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1109dbd60"/>
        <function-ref name="clr" scoped="" ref="0x1109da020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1109d8ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1109d8ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1109d7020"/>
        <function-ref name="isInput" scoped="" ref="0x1109d71a8"/>
        <function-ref name="setResistor" scoped="" ref="0x1109d7330"/>
        <function-ref name="toggle" scoped="" ref="0x1109d74b8"/>
        <function-ref name="isOutput" scoped="" ref="0x1109d7640"/>
        <function-ref name="getResistor" scoped="" ref="0x1109d77c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1109d7950"/>
        <function-ref name="get" scoped="" ref="0x1109d7ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1109d7c60"/>
        <function-ref name="getRaw" scoped="" ref="0x1109d7de8"/>
        <function-ref name="set" scoped="" ref="0x1109d6020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1109d61a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1109d6330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1109d65b8"/>
        <function-ref name="clr" scoped="" ref="0x1109d6740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1109d33d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1109d33d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1109d3728"/>
        <function-ref name="isInput" scoped="" ref="0x1109d38b0"/>
        <function-ref name="setResistor" scoped="" ref="0x1109d3a38"/>
        <function-ref name="toggle" scoped="" ref="0x1109d3bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x1109d3d48"/>
        <function-ref name="getResistor" scoped="" ref="0x1109d1020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1109d11a8"/>
        <function-ref name="get" scoped="" ref="0x1109d1330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1109d14b8"/>
        <function-ref name="getRaw" scoped="" ref="0x1109d1640"/>
        <function-ref name="set" scoped="" ref="0x1109d17c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1109d1950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1109d1ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1109d1d60"/>
        <function-ref name="clr" scoped="" ref="0x1109d0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1109ced08" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1109ced08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1109cd0a0"/>
        <function-ref name="isInput" scoped="" ref="0x1109cd228"/>
        <function-ref name="setResistor" scoped="" ref="0x1109cd3b0"/>
        <function-ref name="toggle" scoped="" ref="0x1109cd538"/>
        <function-ref name="isOutput" scoped="" ref="0x1109cd6c0"/>
        <function-ref name="getResistor" scoped="" ref="0x1109cd848"/>
        <function-ref name="makeOutput" scoped="" ref="0x1109cd9d0"/>
        <function-ref name="get" scoped="" ref="0x1109cdb58"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1109cdce0"/>
        <function-ref name="getRaw" scoped="" ref="0x1109cde68"/>
        <function-ref name="set" scoped="" ref="0x1109cc020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1109cc1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1109cc330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1109cc5b8"/>
        <function-ref name="clr" scoped="" ref="0x1109cc740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x110a013d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x110a013d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110a01728"/>
        <function-ref name="isInput" scoped="" ref="0x110a018b0"/>
        <function-ref name="setResistor" scoped="" ref="0x110a01a38"/>
        <function-ref name="toggle" scoped="" ref="0x110a01bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x110a01d48"/>
        <function-ref name="getResistor" scoped="" ref="0x110a00020"/>
        <function-ref name="makeOutput" scoped="" ref="0x110a001a8"/>
        <function-ref name="get" scoped="" ref="0x110a00330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110a004b8"/>
        <function-ref name="getRaw" scoped="" ref="0x110a00640"/>
        <function-ref name="set" scoped="" ref="0x110a007c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110a00950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110a00ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110a00d60"/>
        <function-ref name="clr" scoped="" ref="0x1109ff020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1109fdca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1109fdca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1109fc020"/>
        <function-ref name="isInput" scoped="" ref="0x1109fc1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x1109fc330"/>
        <function-ref name="toggle" scoped="" ref="0x1109fc4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x1109fc640"/>
        <function-ref name="getResistor" scoped="" ref="0x1109fc7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1109fc950"/>
        <function-ref name="get" scoped="" ref="0x1109fcad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1109fcc60"/>
        <function-ref name="getRaw" scoped="" ref="0x1109fcde8"/>
        <function-ref name="set" scoped="" ref="0x1109fb020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1109fb1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1109fb330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1109fb5b8"/>
        <function-ref name="clr" scoped="" ref="0x1109fb740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1109f83d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1109f83d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1109f8728"/>
        <function-ref name="isInput" scoped="" ref="0x1109f88b0"/>
        <function-ref name="setResistor" scoped="" ref="0x1109f8a38"/>
        <function-ref name="toggle" scoped="" ref="0x1109f8bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x1109f8d48"/>
        <function-ref name="getResistor" scoped="" ref="0x1109f7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1109f71a8"/>
        <function-ref name="get" scoped="" ref="0x1109f7330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1109f74b8"/>
        <function-ref name="getRaw" scoped="" ref="0x1109f7640"/>
        <function-ref name="set" scoped="" ref="0x1109f77c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1109f7950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1109f7ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1109f7d60"/>
        <function-ref name="clr" scoped="" ref="0x1109f6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1109f4ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1109f4ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1109f3020"/>
        <function-ref name="isInput" scoped="" ref="0x1109f31a8"/>
        <function-ref name="setResistor" scoped="" ref="0x1109f3330"/>
        <function-ref name="toggle" scoped="" ref="0x1109f34b8"/>
        <function-ref name="isOutput" scoped="" ref="0x1109f3640"/>
        <function-ref name="getResistor" scoped="" ref="0x1109f37c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1109f3950"/>
        <function-ref name="get" scoped="" ref="0x1109f3ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1109f3c60"/>
        <function-ref name="getRaw" scoped="" ref="0x1109f3de8"/>
        <function-ref name="set" scoped="" ref="0x1109f2020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1109f21a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1109f2330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1109f25b8"/>
        <function-ref name="clr" scoped="" ref="0x1109f2740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1109ef3d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1109ef3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1109ef728"/>
        <function-ref name="isInput" scoped="" ref="0x1109ef8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x1109efa38"/>
        <function-ref name="toggle" scoped="" ref="0x1109efbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x1109efd48"/>
        <function-ref name="getResistor" scoped="" ref="0x1109ee020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1109ee1a8"/>
        <function-ref name="get" scoped="" ref="0x1109ee330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1109ee4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x1109ee640"/>
        <function-ref name="set" scoped="" ref="0x1109ee7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1109ee950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1109eead8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1109eed60"/>
        <function-ref name="clr" scoped="" ref="0x1109ed020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1109ebca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1109ebca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1109ea020"/>
        <function-ref name="isInput" scoped="" ref="0x1109ea1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x1109ea330"/>
        <function-ref name="toggle" scoped="" ref="0x1109ea4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x1109ea640"/>
        <function-ref name="getResistor" scoped="" ref="0x1109ea7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1109ea950"/>
        <function-ref name="get" scoped="" ref="0x1109eaad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1109eac60"/>
        <function-ref name="getRaw" scoped="" ref="0x1109eade8"/>
        <function-ref name="set" scoped="" ref="0x1109e9020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1109e91a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1109e9330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1109e95b8"/>
        <function-ref name="clr" scoped="" ref="0x1109e9740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x110a1d3d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x110a1d3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110a1d728"/>
        <function-ref name="isInput" scoped="" ref="0x110a1d8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x110a1da38"/>
        <function-ref name="toggle" scoped="" ref="0x110a1dbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x110a1dd48"/>
        <function-ref name="getResistor" scoped="" ref="0x110a1c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x110a1c1a8"/>
        <function-ref name="get" scoped="" ref="0x110a1c330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110a1c4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x110a1c640"/>
        <function-ref name="set" scoped="" ref="0x110a1c7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110a1c950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110a1cad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110a1cd60"/>
        <function-ref name="clr" scoped="" ref="0x110a1b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x110a19ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x110a19ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110a18020"/>
        <function-ref name="isInput" scoped="" ref="0x110a181a8"/>
        <function-ref name="setResistor" scoped="" ref="0x110a18330"/>
        <function-ref name="toggle" scoped="" ref="0x110a184b8"/>
        <function-ref name="isOutput" scoped="" ref="0x110a18640"/>
        <function-ref name="getResistor" scoped="" ref="0x110a187c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110a18950"/>
        <function-ref name="get" scoped="" ref="0x110a18ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110a18c60"/>
        <function-ref name="getRaw" scoped="" ref="0x110a18de8"/>
        <function-ref name="set" scoped="" ref="0x110a17020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110a171a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110a17330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110a175b8"/>
        <function-ref name="clr" scoped="" ref="0x110a17740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x110a143d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x110a143d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110a14728"/>
        <function-ref name="isInput" scoped="" ref="0x110a148b0"/>
        <function-ref name="setResistor" scoped="" ref="0x110a14a38"/>
        <function-ref name="toggle" scoped="" ref="0x110a14bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x110a14d48"/>
        <function-ref name="getResistor" scoped="" ref="0x110a13020"/>
        <function-ref name="makeOutput" scoped="" ref="0x110a131a8"/>
        <function-ref name="get" scoped="" ref="0x110a13330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110a134b8"/>
        <function-ref name="getRaw" scoped="" ref="0x110a13640"/>
        <function-ref name="set" scoped="" ref="0x110a137c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110a13950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110a13ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110a13d60"/>
        <function-ref name="clr" scoped="" ref="0x110a12020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x110a10ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x110a10ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110a0f020"/>
        <function-ref name="isInput" scoped="" ref="0x110a0f1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x110a0f330"/>
        <function-ref name="toggle" scoped="" ref="0x110a0f4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x110a0f640"/>
        <function-ref name="getResistor" scoped="" ref="0x110a0f7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110a0f950"/>
        <function-ref name="get" scoped="" ref="0x110a0fad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110a0fc60"/>
        <function-ref name="getRaw" scoped="" ref="0x110a0fde8"/>
        <function-ref name="set" scoped="" ref="0x110a0e020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110a0e1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110a0e330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110a0e5b8"/>
        <function-ref name="clr" scoped="" ref="0x110a0e740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x110a0b3d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x110a0b3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110a0b728"/>
        <function-ref name="isInput" scoped="" ref="0x110a0b8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x110a0ba38"/>
        <function-ref name="toggle" scoped="" ref="0x110a0bbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x110a0bd48"/>
        <function-ref name="getResistor" scoped="" ref="0x110a0a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x110a0a1a8"/>
        <function-ref name="get" scoped="" ref="0x110a0a330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110a0a4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x110a0a640"/>
        <function-ref name="set" scoped="" ref="0x110a0a7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110a0a950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110a0aad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110a0ad60"/>
        <function-ref name="clr" scoped="" ref="0x110a09020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x110a07dd8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x110a07dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110a06170"/>
        <function-ref name="isInput" scoped="" ref="0x110a062f8"/>
        <function-ref name="setResistor" scoped="" ref="0x110a06480"/>
        <function-ref name="toggle" scoped="" ref="0x110a06608"/>
        <function-ref name="isOutput" scoped="" ref="0x110a06790"/>
        <function-ref name="getResistor" scoped="" ref="0x110a06918"/>
        <function-ref name="makeOutput" scoped="" ref="0x110a06aa0"/>
        <function-ref name="get" scoped="" ref="0x110a06c28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110a06db0"/>
        <function-ref name="getRaw" scoped="" ref="0x110a05020"/>
        <function-ref name="set" scoped="" ref="0x110a051a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110a05330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110a054b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110a05740"/>
        <function-ref name="clr" scoped="" ref="0x110a058c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x110a02478" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x110a02478"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110a027c8"/>
        <function-ref name="isInput" scoped="" ref="0x110a02950"/>
        <function-ref name="setResistor" scoped="" ref="0x110a02ad8"/>
        <function-ref name="toggle" scoped="" ref="0x110a02c60"/>
        <function-ref name="isOutput" scoped="" ref="0x110a02de8"/>
        <function-ref name="getResistor" scoped="" ref="0x110a39020"/>
        <function-ref name="makeOutput" scoped="" ref="0x110a391a8"/>
        <function-ref name="get" scoped="" ref="0x110a39330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110a394b8"/>
        <function-ref name="getRaw" scoped="" ref="0x110a39640"/>
        <function-ref name="set" scoped="" ref="0x110a397c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110a39950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110a39ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110a39d60"/>
        <function-ref name="clr" scoped="" ref="0x110a38020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x110a36ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x110a36ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110a34020"/>
        <function-ref name="isInput" scoped="" ref="0x110a341a8"/>
        <function-ref name="setResistor" scoped="" ref="0x110a34330"/>
        <function-ref name="toggle" scoped="" ref="0x110a344b8"/>
        <function-ref name="isOutput" scoped="" ref="0x110a34640"/>
        <function-ref name="getResistor" scoped="" ref="0x110a347c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110a34950"/>
        <function-ref name="get" scoped="" ref="0x110a34ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110a34c60"/>
        <function-ref name="getRaw" scoped="" ref="0x110a34de8"/>
        <function-ref name="set" scoped="" ref="0x110a33020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110a331a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110a33330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110a335b8"/>
        <function-ref name="clr" scoped="" ref="0x110a33740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x110a303d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x110a303d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110a30728"/>
        <function-ref name="isInput" scoped="" ref="0x110a308b0"/>
        <function-ref name="setResistor" scoped="" ref="0x110a30a38"/>
        <function-ref name="toggle" scoped="" ref="0x110a30bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x110a30d48"/>
        <function-ref name="getResistor" scoped="" ref="0x110a2f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x110a2f1a8"/>
        <function-ref name="get" scoped="" ref="0x110a2f330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110a2f4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x110a2f640"/>
        <function-ref name="set" scoped="" ref="0x110a2f7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110a2f950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110a2fad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110a2fd60"/>
        <function-ref name="clr" scoped="" ref="0x110a2e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x110a2cca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x110a2cca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110a2b020"/>
        <function-ref name="isInput" scoped="" ref="0x110a2b1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x110a2b330"/>
        <function-ref name="toggle" scoped="" ref="0x110a2b4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x110a2b640"/>
        <function-ref name="getResistor" scoped="" ref="0x110a2b7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110a2b950"/>
        <function-ref name="get" scoped="" ref="0x110a2bad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110a2bc60"/>
        <function-ref name="getRaw" scoped="" ref="0x110a2bde8"/>
        <function-ref name="set" scoped="" ref="0x110a2a020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110a2a1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110a2a330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110a2a5b8"/>
        <function-ref name="clr" scoped="" ref="0x110a2a740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x110a273d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x110a273d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110a27728"/>
        <function-ref name="isInput" scoped="" ref="0x110a278b0"/>
        <function-ref name="setResistor" scoped="" ref="0x110a27a38"/>
        <function-ref name="toggle" scoped="" ref="0x110a27bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x110a27d48"/>
        <function-ref name="getResistor" scoped="" ref="0x110a26020"/>
        <function-ref name="makeOutput" scoped="" ref="0x110a261a8"/>
        <function-ref name="get" scoped="" ref="0x110a26330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110a264b8"/>
        <function-ref name="getRaw" scoped="" ref="0x110a26640"/>
        <function-ref name="set" scoped="" ref="0x110a267c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110a26950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110a26ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110a26d60"/>
        <function-ref name="clr" scoped="" ref="0x110a25020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x110a23ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x110a23ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110a22020"/>
        <function-ref name="isInput" scoped="" ref="0x110a221a8"/>
        <function-ref name="setResistor" scoped="" ref="0x110a22330"/>
        <function-ref name="toggle" scoped="" ref="0x110a224b8"/>
        <function-ref name="isOutput" scoped="" ref="0x110a22640"/>
        <function-ref name="getResistor" scoped="" ref="0x110a227c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110a22950"/>
        <function-ref name="get" scoped="" ref="0x110a22ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110a22c60"/>
        <function-ref name="getRaw" scoped="" ref="0x110a22de8"/>
        <function-ref name="set" scoped="" ref="0x110a21020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110a211a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110a21330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110a215b8"/>
        <function-ref name="clr" scoped="" ref="0x110a21740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x110a1e3d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x110a1e3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110a1e728"/>
        <function-ref name="isInput" scoped="" ref="0x110a1e8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x110a1ea38"/>
        <function-ref name="toggle" scoped="" ref="0x110a1ebc0"/>
        <function-ref name="isOutput" scoped="" ref="0x110a1ed48"/>
        <function-ref name="getResistor" scoped="" ref="0x110a56020"/>
        <function-ref name="makeOutput" scoped="" ref="0x110a561a8"/>
        <function-ref name="get" scoped="" ref="0x110a56330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110a564b8"/>
        <function-ref name="getRaw" scoped="" ref="0x110a56640"/>
        <function-ref name="set" scoped="" ref="0x110a567c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110a56950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110a56ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110a56d60"/>
        <function-ref name="clr" scoped="" ref="0x110a55020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x110a53ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x110a53ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110a52020"/>
        <function-ref name="isInput" scoped="" ref="0x110a521a8"/>
        <function-ref name="setResistor" scoped="" ref="0x110a52330"/>
        <function-ref name="toggle" scoped="" ref="0x110a524b8"/>
        <function-ref name="isOutput" scoped="" ref="0x110a52640"/>
        <function-ref name="getResistor" scoped="" ref="0x110a527c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110a52950"/>
        <function-ref name="get" scoped="" ref="0x110a52ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110a52c60"/>
        <function-ref name="getRaw" scoped="" ref="0x110a52de8"/>
        <function-ref name="set" scoped="" ref="0x110a51020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110a511a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110a51330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110a515b8"/>
        <function-ref name="clr" scoped="" ref="0x110a51740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x110a4e3d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x110a4e3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110a4e728"/>
        <function-ref name="isInput" scoped="" ref="0x110a4e8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x110a4ea38"/>
        <function-ref name="toggle" scoped="" ref="0x110a4ebc0"/>
        <function-ref name="isOutput" scoped="" ref="0x110a4ed48"/>
        <function-ref name="getResistor" scoped="" ref="0x110a4d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x110a4d1a8"/>
        <function-ref name="get" scoped="" ref="0x110a4d330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110a4d4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x110a4d640"/>
        <function-ref name="set" scoped="" ref="0x110a4d7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110a4d950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110a4dad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110a4dd60"/>
        <function-ref name="clr" scoped="" ref="0x110a4c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x110a4aca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x110a4aca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110a48020"/>
        <function-ref name="isInput" scoped="" ref="0x110a481a8"/>
        <function-ref name="setResistor" scoped="" ref="0x110a48330"/>
        <function-ref name="toggle" scoped="" ref="0x110a484b8"/>
        <function-ref name="isOutput" scoped="" ref="0x110a48640"/>
        <function-ref name="getResistor" scoped="" ref="0x110a487c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110a48950"/>
        <function-ref name="get" scoped="" ref="0x110a48ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110a48c60"/>
        <function-ref name="getRaw" scoped="" ref="0x110a48de8"/>
        <function-ref name="set" scoped="" ref="0x110a47020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110a471a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110a47330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110a475b8"/>
        <function-ref name="clr" scoped="" ref="0x110a47740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x110a443d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x110a443d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110a44728"/>
        <function-ref name="isInput" scoped="" ref="0x110a448b0"/>
        <function-ref name="setResistor" scoped="" ref="0x110a44a38"/>
        <function-ref name="toggle" scoped="" ref="0x110a44bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x110a44d48"/>
        <function-ref name="getResistor" scoped="" ref="0x110a43020"/>
        <function-ref name="makeOutput" scoped="" ref="0x110a431a8"/>
        <function-ref name="get" scoped="" ref="0x110a43330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110a434b8"/>
        <function-ref name="getRaw" scoped="" ref="0x110a43640"/>
        <function-ref name="set" scoped="" ref="0x110a437c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110a43950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110a43ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110a43d60"/>
        <function-ref name="clr" scoped="" ref="0x110a42020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x110a40ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x110a40ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110a3f020"/>
        <function-ref name="isInput" scoped="" ref="0x110a3f1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x110a3f330"/>
        <function-ref name="toggle" scoped="" ref="0x110a3f4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x110a3f640"/>
        <function-ref name="getResistor" scoped="" ref="0x110a3f7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110a3f950"/>
        <function-ref name="get" scoped="" ref="0x110a3fad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110a3fc60"/>
        <function-ref name="getRaw" scoped="" ref="0x110a3fde8"/>
        <function-ref name="set" scoped="" ref="0x110a3e020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110a3e1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110a3e330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110a3e5b8"/>
        <function-ref name="clr" scoped="" ref="0x110a3e740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x110a3b3d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x110a3b3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110a3b728"/>
        <function-ref name="isInput" scoped="" ref="0x110a3b8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x110a3ba38"/>
        <function-ref name="toggle" scoped="" ref="0x110a3bbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x110a3bd48"/>
        <function-ref name="getResistor" scoped="" ref="0x110a3a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x110a3a1a8"/>
        <function-ref name="get" scoped="" ref="0x110a3a330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110a3a4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x110a3a640"/>
        <function-ref name="set" scoped="" ref="0x110a3a7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110a3a950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110a3aad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110a3ad60"/>
        <function-ref name="clr" scoped="" ref="0x110a73020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x110a71ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x110a71ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110a70020"/>
        <function-ref name="isInput" scoped="" ref="0x110a701a8"/>
        <function-ref name="setResistor" scoped="" ref="0x110a70330"/>
        <function-ref name="toggle" scoped="" ref="0x110a704b8"/>
        <function-ref name="isOutput" scoped="" ref="0x110a70640"/>
        <function-ref name="getResistor" scoped="" ref="0x110a707c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110a70950"/>
        <function-ref name="get" scoped="" ref="0x110a70ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110a70c60"/>
        <function-ref name="getRaw" scoped="" ref="0x110a70de8"/>
        <function-ref name="set" scoped="" ref="0x110a6f020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110a6f1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110a6f330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110a6f5b8"/>
        <function-ref name="clr" scoped="" ref="0x110a6f740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x110a6c3d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x110a6c3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110a6c728"/>
        <function-ref name="isInput" scoped="" ref="0x110a6c8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x110a6ca38"/>
        <function-ref name="toggle" scoped="" ref="0x110a6cbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x110a6cd48"/>
        <function-ref name="getResistor" scoped="" ref="0x110a6b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x110a6b1a8"/>
        <function-ref name="get" scoped="" ref="0x110a6b330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110a6b4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x110a6b640"/>
        <function-ref name="set" scoped="" ref="0x110a6b7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110a6b950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110a6bad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110a6bd60"/>
        <function-ref name="clr" scoped="" ref="0x110a6a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x110a68ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x110a68ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110a67020"/>
        <function-ref name="isInput" scoped="" ref="0x110a671a8"/>
        <function-ref name="setResistor" scoped="" ref="0x110a67330"/>
        <function-ref name="toggle" scoped="" ref="0x110a674b8"/>
        <function-ref name="isOutput" scoped="" ref="0x110a67640"/>
        <function-ref name="getResistor" scoped="" ref="0x110a677c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110a67950"/>
        <function-ref name="get" scoped="" ref="0x110a67ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110a67c60"/>
        <function-ref name="getRaw" scoped="" ref="0x110a67de8"/>
        <function-ref name="set" scoped="" ref="0x110a66020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110a661a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110a66330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110a665b8"/>
        <function-ref name="clr" scoped="" ref="0x110a66740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x110a633d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x110a633d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110a63728"/>
        <function-ref name="isInput" scoped="" ref="0x110a638b0"/>
        <function-ref name="setResistor" scoped="" ref="0x110a63a38"/>
        <function-ref name="toggle" scoped="" ref="0x110a63bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x110a63d48"/>
        <function-ref name="getResistor" scoped="" ref="0x110a62020"/>
        <function-ref name="makeOutput" scoped="" ref="0x110a621a8"/>
        <function-ref name="get" scoped="" ref="0x110a62330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110a624b8"/>
        <function-ref name="getRaw" scoped="" ref="0x110a62640"/>
        <function-ref name="set" scoped="" ref="0x110a627c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110a62950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110a62ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110a62d60"/>
        <function-ref name="clr" scoped="" ref="0x110a61020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x110a5eca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x110a5eca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110a5d020"/>
        <function-ref name="isInput" scoped="" ref="0x110a5d1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x110a5d330"/>
        <function-ref name="toggle" scoped="" ref="0x110a5d4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x110a5d640"/>
        <function-ref name="getResistor" scoped="" ref="0x110a5d7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110a5d950"/>
        <function-ref name="get" scoped="" ref="0x110a5dad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110a5dc60"/>
        <function-ref name="getRaw" scoped="" ref="0x110a5dde8"/>
        <function-ref name="set" scoped="" ref="0x110a5c020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110a5c1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110a5c330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110a5c5b8"/>
        <function-ref name="clr" scoped="" ref="0x110a5c740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x110a593d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x110a593d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110a59728"/>
        <function-ref name="isInput" scoped="" ref="0x110a598b0"/>
        <function-ref name="setResistor" scoped="" ref="0x110a59a38"/>
        <function-ref name="toggle" scoped="" ref="0x110a59bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x110a59d48"/>
        <function-ref name="getResistor" scoped="" ref="0x110a58020"/>
        <function-ref name="makeOutput" scoped="" ref="0x110a581a8"/>
        <function-ref name="get" scoped="" ref="0x110a58330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110a584b8"/>
        <function-ref name="getRaw" scoped="" ref="0x110a58640"/>
        <function-ref name="set" scoped="" ref="0x110a587c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110a58950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110a58ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110a58d60"/>
        <function-ref name="clr" scoped="" ref="0x110a57020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x110a8fca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x110a8fca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110a8e020"/>
        <function-ref name="isInput" scoped="" ref="0x110a8e1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x110a8e330"/>
        <function-ref name="toggle" scoped="" ref="0x110a8e4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x110a8e640"/>
        <function-ref name="getResistor" scoped="" ref="0x110a8e7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110a8e950"/>
        <function-ref name="get" scoped="" ref="0x110a8ead8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110a8ec60"/>
        <function-ref name="getRaw" scoped="" ref="0x110a8ede8"/>
        <function-ref name="set" scoped="" ref="0x110a8d020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110a8d1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110a8d330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110a8d5b8"/>
        <function-ref name="clr" scoped="" ref="0x110a8d740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x110a8a3d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x110a8a3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110a8a728"/>
        <function-ref name="isInput" scoped="" ref="0x110a8a8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x110a8aa38"/>
        <function-ref name="toggle" scoped="" ref="0x110a8abc0"/>
        <function-ref name="isOutput" scoped="" ref="0x110a8ad48"/>
        <function-ref name="getResistor" scoped="" ref="0x110a89020"/>
        <function-ref name="makeOutput" scoped="" ref="0x110a891a8"/>
        <function-ref name="get" scoped="" ref="0x110a89330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110a894b8"/>
        <function-ref name="getRaw" scoped="" ref="0x110a89640"/>
        <function-ref name="set" scoped="" ref="0x110a897c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110a89950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110a89ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110a89d60"/>
        <function-ref name="clr" scoped="" ref="0x110a88020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x110a86ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x110a86ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110a85020"/>
        <function-ref name="isInput" scoped="" ref="0x110a851a8"/>
        <function-ref name="setResistor" scoped="" ref="0x110a85330"/>
        <function-ref name="toggle" scoped="" ref="0x110a854b8"/>
        <function-ref name="isOutput" scoped="" ref="0x110a85640"/>
        <function-ref name="getResistor" scoped="" ref="0x110a857c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110a85950"/>
        <function-ref name="get" scoped="" ref="0x110a85ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110a85c60"/>
        <function-ref name="getRaw" scoped="" ref="0x110a85de8"/>
        <function-ref name="set" scoped="" ref="0x110a84020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110a841a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110a84330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110a845b8"/>
        <function-ref name="clr" scoped="" ref="0x110a84740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x110a813d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x110a813d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110a81728"/>
        <function-ref name="isInput" scoped="" ref="0x110a818b0"/>
        <function-ref name="setResistor" scoped="" ref="0x110a81a38"/>
        <function-ref name="toggle" scoped="" ref="0x110a81bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x110a81d48"/>
        <function-ref name="getResistor" scoped="" ref="0x110a80020"/>
        <function-ref name="makeOutput" scoped="" ref="0x110a801a8"/>
        <function-ref name="get" scoped="" ref="0x110a80330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110a804b8"/>
        <function-ref name="getRaw" scoped="" ref="0x110a80640"/>
        <function-ref name="set" scoped="" ref="0x110a807c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110a80950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110a80ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110a80d60"/>
        <function-ref name="clr" scoped="" ref="0x110a7f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x110aee020" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x110aee020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b0150"/>
            <typename><typedef-ref name="T32khz" ref="0x1107b04a8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x110aeed70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110aed6b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110aed230"/>
        <function-ref name="overflow" scoped="" ref="0x110aedb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x110aece00" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x110aece00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b0150"/>
            <typename><typedef-ref name="T32khz" ref="0x1107b04a8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x110ae9be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110ae8548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110ae80c0"/>
        <function-ref name="overflow" scoped="" ref="0x110ae89d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x110b142a0" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x110b142a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x110b145f0"/>
        <function-ref name="setClockSource" scoped="" ref="0x110b14778"/>
        <function-ref name="enableEvents" scoped="" ref="0x110b14900"/>
        <function-ref name="get" scoped="" ref="0x110b14a88"/>
        <function-ref name="disableEvents" scoped="" ref="0x110b14c10"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110b14d98"/>
        <function-ref name="getMode" scoped="" ref="0x110b13020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110b131a8"/>
        <function-ref name="overflow" scoped="" ref="0x110b13330"/>
        <function-ref name="setMode" scoped="" ref="0x110b134b8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x110b13640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x110ae4330" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x110ae4330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b0150"/>
            <typename><typedef-ref name="T32khz" ref="0x1107b04a8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x110b160c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110b169d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110b16548"/>
        <function-ref name="overflow" scoped="" ref="0x110b16e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x110af1ba8" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x110af1ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x110b10020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x110b101a8"/>
        <function-ref name="led1On" scoped="" ref="0x110b10330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x110b104b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x110b10640"/>
        <function-ref name="get" scoped="" ref="0x110b107c8"/>
        <function-ref name="led1Off" scoped="" ref="0x110b10950"/>
        <function-ref name="led2Off" scoped="" ref="0x110b0f020"/>
        <function-ref name="set" scoped="" ref="0x110b10ad8"/>
        <function-ref name="led0On" scoped="" ref="0x110b10c60"/>
        <function-ref name="led2On" scoped="" ref="0x110b10de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x110b047c8" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x110b047c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110b04b18"/>
        <function-ref name="isInput" scoped="" ref="0x110b04ca0"/>
        <function-ref name="toggle" scoped="" ref="0x110b04e28"/>
        <function-ref name="isOutput" scoped="" ref="0x110b0a020"/>
        <function-ref name="get" scoped="" ref="0x110b0a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110b0a330"/>
        <function-ref name="set" scoped="" ref="0x110b0a4b8"/>
        <function-ref name="clr" scoped="" ref="0x110b0a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x110b0c020" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x110b0c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x110b0c370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x110b0a958" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x110b0a958"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110b0aca8"/>
        <function-ref name="isInput" scoped="" ref="0x110b0ae30"/>
        <function-ref name="toggle" scoped="" ref="0x110b09020"/>
        <function-ref name="isOutput" scoped="" ref="0x110b091a8"/>
        <function-ref name="get" scoped="" ref="0x110b09330"/>
        <function-ref name="makeOutput" scoped="" ref="0x110b094b8"/>
        <function-ref name="set" scoped="" ref="0x110b09640"/>
        <function-ref name="clr" scoped="" ref="0x110b097c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x110b0c5e8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x110b0c5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x110b0c938"/>
        <function-ref name="led0Toggle" scoped="" ref="0x110b0cac0"/>
        <function-ref name="led1On" scoped="" ref="0x110b0cc48"/>
        <function-ref name="led1Toggle" scoped="" ref="0x110b0cdd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x110b0b020"/>
        <function-ref name="get" scoped="" ref="0x110b0b1a8"/>
        <function-ref name="led1Off" scoped="" ref="0x110b0b330"/>
        <function-ref name="led2Off" scoped="" ref="0x110b0b950"/>
        <function-ref name="set" scoped="" ref="0x110b0b4b8"/>
        <function-ref name="led0On" scoped="" ref="0x110b0b640"/>
        <function-ref name="led2On" scoped="" ref="0x110b0b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x110b09ae0" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x110b09ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110b09e30"/>
        <function-ref name="isInput" scoped="" ref="0x110b03020"/>
        <function-ref name="toggle" scoped="" ref="0x110b031a8"/>
        <function-ref name="isOutput" scoped="" ref="0x110b03330"/>
        <function-ref name="get" scoped="" ref="0x110b034b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110b03640"/>
        <function-ref name="set" scoped="" ref="0x110b037c8"/>
        <function-ref name="clr" scoped="" ref="0x110b03950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x110b24020" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x110b24020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110b24370"/>
        <function-ref name="isInput" scoped="" ref="0x110b244f8"/>
        <function-ref name="toggle" scoped="" ref="0x110b24680"/>
        <function-ref name="isOutput" scoped="" ref="0x110b24808"/>
        <function-ref name="get" scoped="" ref="0x110b24990"/>
        <function-ref name="makeOutput" scoped="" ref="0x110b24b18"/>
        <function-ref name="set" scoped="" ref="0x110b24ca0"/>
        <function-ref name="clr" scoped="" ref="0x110b24e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x110b231b0" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x110b231b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110b23500"/>
        <function-ref name="isInput" scoped="" ref="0x110b23688"/>
        <function-ref name="toggle" scoped="" ref="0x110b23810"/>
        <function-ref name="isOutput" scoped="" ref="0x110b23998"/>
        <function-ref name="get" scoped="" ref="0x110b23b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x110b23ca8"/>
        <function-ref name="set" scoped="" ref="0x110b23e30"/>
        <function-ref name="clr" scoped="" ref="0x110b22020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x110b21460" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x110b21460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x110b217b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x110b22378" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x110b22378"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110b226c8"/>
        <function-ref name="isInput" scoped="" ref="0x110b22850"/>
        <function-ref name="toggle" scoped="" ref="0x110b229d8"/>
        <function-ref name="isOutput" scoped="" ref="0x110b22b60"/>
        <function-ref name="get" scoped="" ref="0x110b22ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110b22e70"/>
        <function-ref name="set" scoped="" ref="0x110b21020"/>
        <function-ref name="clr" scoped="" ref="0x110b211a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x110b4b5f8" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x110b4b5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110b4b948"/>
        <function-ref name="isInput" scoped="" ref="0x110b4bad0"/>
        <function-ref name="setResistor" scoped="" ref="0x110b4bc58"/>
        <function-ref name="toggle" scoped="" ref="0x110b4bde0"/>
        <function-ref name="isOutput" scoped="" ref="0x110b4a020"/>
        <function-ref name="getResistor" scoped="" ref="0x110b4a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110b4a330"/>
        <function-ref name="get" scoped="" ref="0x110b4a4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110b4a640"/>
        <function-ref name="getRaw" scoped="" ref="0x110b4a7c8"/>
        <function-ref name="set" scoped="" ref="0x110b4a950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110b4aad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110b4ac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110b49020"/>
        <function-ref name="clr" scoped="" ref="0x110b491a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x110b1e4e0" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x110b1e4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110b1e830"/>
        <function-ref name="isInput" scoped="" ref="0x110b1e9b8"/>
        <function-ref name="toggle" scoped="" ref="0x110b1eb40"/>
        <function-ref name="isOutput" scoped="" ref="0x110b1ecc8"/>
        <function-ref name="get" scoped="" ref="0x110b1ee50"/>
        <function-ref name="makeOutput" scoped="" ref="0x110b4b020"/>
        <function-ref name="set" scoped="" ref="0x110b4b1a8"/>
        <function-ref name="clr" scoped="" ref="0x110b4b330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x110b47e20" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x110b47e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110b461a8"/>
        <function-ref name="isInput" scoped="" ref="0x110b46330"/>
        <function-ref name="setResistor" scoped="" ref="0x110b464b8"/>
        <function-ref name="toggle" scoped="" ref="0x110b46640"/>
        <function-ref name="isOutput" scoped="" ref="0x110b467c8"/>
        <function-ref name="getResistor" scoped="" ref="0x110b46950"/>
        <function-ref name="makeOutput" scoped="" ref="0x110b46ad8"/>
        <function-ref name="get" scoped="" ref="0x110b46c60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110b46de8"/>
        <function-ref name="getRaw" scoped="" ref="0x110b45020"/>
        <function-ref name="set" scoped="" ref="0x110b451a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110b45330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110b454b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110b45740"/>
        <function-ref name="clr" scoped="" ref="0x110b458c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x110b48cd0" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x110b48cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110b470a0"/>
        <function-ref name="isInput" scoped="" ref="0x110b47228"/>
        <function-ref name="toggle" scoped="" ref="0x110b473b0"/>
        <function-ref name="isOutput" scoped="" ref="0x110b47538"/>
        <function-ref name="get" scoped="" ref="0x110b476c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x110b47848"/>
        <function-ref name="set" scoped="" ref="0x110b479d0"/>
        <function-ref name="clr" scoped="" ref="0x110b47b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x110b425f8" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x110b425f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110b42948"/>
        <function-ref name="isInput" scoped="" ref="0x110b42ad0"/>
        <function-ref name="setResistor" scoped="" ref="0x110b42c58"/>
        <function-ref name="toggle" scoped="" ref="0x110b42de0"/>
        <function-ref name="isOutput" scoped="" ref="0x110b41020"/>
        <function-ref name="getResistor" scoped="" ref="0x110b411a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110b41330"/>
        <function-ref name="get" scoped="" ref="0x110b414b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110b41640"/>
        <function-ref name="getRaw" scoped="" ref="0x110b417c8"/>
        <function-ref name="set" scoped="" ref="0x110b41950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110b41ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110b41c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110b40020"/>
        <function-ref name="clr" scoped="" ref="0x110b401a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x110b43448" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x110b43448"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110b43798"/>
        <function-ref name="isInput" scoped="" ref="0x110b43920"/>
        <function-ref name="toggle" scoped="" ref="0x110b43aa8"/>
        <function-ref name="isOutput" scoped="" ref="0x110b43c30"/>
        <function-ref name="get" scoped="" ref="0x110b43db8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110b42020"/>
        <function-ref name="set" scoped="" ref="0x110b421a8"/>
        <function-ref name="clr" scoped="" ref="0x110b42330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x111c4bdc8" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x111c4bdc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x111c4a170"/>
        <function-ref name="immediateRequested" scoped="" ref="0x111c4a2f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x111c45b90" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x111c45b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x111c43020"/>
        <function-ref name="configure" scoped="" ref="0x111c431a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x111c45430" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x111c45430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x111c45780"/>
        <function-ref name="txDone" scoped="" ref="0x111c45908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x111c4b1d0" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x111c4b1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x111c4b520"/>
        <function-ref name="immediateRequest" scoped="" ref="0x111c4b6a8"/>
        <function-ref name="request" scoped="" ref="0x111c4b830"/>
        <function-ref name="granted" scoped="" ref="0x111c4b9b8"/>
        <function-ref name="isOwner" scoped="" ref="0x111c4bb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x111c4ace0" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x111c4ace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x111c490a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x111c49228"/>
        <function-ref name="setUctl" scoped="" ref="0x111c493b0"/>
        <function-ref name="enableUart" scoped="" ref="0x111c49538"/>
        <function-ref name="setUrctl" scoped="" ref="0x111c496c0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x111c49848"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x111c499d0"/>
        <function-ref name="getUtctl" scoped="" ref="0x111c49b58"/>
        <function-ref name="getUrctl" scoped="" ref="0x111c49ce0"/>
        <function-ref name="resetUsart" scoped="" ref="0x111c49e68"/>
        <function-ref name="getUmctl" scoped="" ref="0x111c48020"/>
        <function-ref name="disableIntr" scoped="" ref="0x111c481a8"/>
        <function-ref name="setUtctl" scoped="" ref="0x111c48330"/>
        <function-ref name="getUbr" scoped="" ref="0x111c485b8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x111c48740"/>
        <function-ref name="setUmctl" scoped="" ref="0x111c488c8"/>
        <function-ref name="isUartRx" scoped="" ref="0x111c48a50"/>
        <function-ref name="isUart" scoped="" ref="0x111c48bd8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x111c48d60"/>
        <function-ref name="isSpi" scoped="" ref="0x111c47020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x111c471a8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x111c47330"/>
        <function-ref name="disableUartRx" scoped="" ref="0x111c474b8"/>
        <function-ref name="enableIntr" scoped="" ref="0x111c47640"/>
        <function-ref name="getMode" scoped="" ref="0x111c477c8"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x111c47b50"/>
        <function-ref name="clrIntr" scoped="" ref="0x111c47cd8"/>
        <function-ref name="setUbr" scoped="" ref="0x111c47e60"/>
        <function-ref name="tx" scoped="" ref="0x111c46020"/>
        <function-ref name="getUctl" scoped="" ref="0x111c461a8"/>
        <function-ref name="disableUart" scoped="" ref="0x111c46330"/>
        <function-ref name="enableSpi" scoped="" ref="0x111c464b8"/>
        <function-ref name="setModeUart" scoped="" ref="0x111c46640"/>
        <function-ref name="setModeSpi" scoped="" ref="0x111c467c8"/>
        <function-ref name="rx" scoped="" ref="0x111c46950"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x111c46ad8"/>
        <function-ref name="isUartTx" scoped="" ref="0x111c46c60"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x111c46de8"/>
        <function-ref name="disableSpi" scoped="" ref="0x111c45020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x111c451a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x111c4a580" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x111c4a580"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x111c4a8d0"/>
        <function-ref name="userId" scoped="" ref="0x111c4aa58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x110b5b1c8" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x110b5b1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x110b5b518"/>
        <function-ref name="immediateRequested" scoped="" ref="0x110b5b6a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x110b976c0" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x110b976c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x110b97a10"/>
        <function-ref name="configure" scoped="" ref="0x110b97b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x110b5d1c8" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x110b5d1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x110b5d518"/>
        <function-ref name="txDone" scoped="" ref="0x110b5d6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x110b5de70" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x110b5de70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x110b5c1e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x110b5c370"/>
        <function-ref name="request" scoped="" ref="0x110b5c4f8"/>
        <function-ref name="granted" scoped="" ref="0x110b5c680"/>
        <function-ref name="isOwner" scoped="" ref="0x110b5c808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x110b5b998" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x110b5b998"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x110b5bce8"/>
        <function-ref name="userId" scoped="" ref="0x110b5be70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x110b82a48" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x110b82a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x110b82d98"/>
        <function-ref name="userId" scoped="" ref="0x110b81020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x110b95b20" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x110b95b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x110b94020"/>
        <function-ref name="txDone" scoped="" ref="0x110b941a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x110b82470" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x110b82470"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x110b827c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x110b94590" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x110b94590"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x110b94900"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x110b94bc8" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x110b94bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x110b82020"/>
        <function-ref name="txDone" scoped="" ref="0x110b821a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x110c0ad18" loc="92:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x110c0ad18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x110c090d8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x110c09260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x110c08960" loc="96:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x110c08960"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x110c08cd0"/>
        <function-ref name="configure" scoped="" ref="0x110c08e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x110c094a8" loc="93:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x110c094a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x110c097f8"/>
        <function-ref name="requested" scoped="" ref="0x110c09980"/>
        <function-ref name="granted" scoped="" ref="0x110c09b08"/>
        <function-ref name="isOwner" scoped="" ref="0x110c09c90"/>
        <function-ref name="immediateRequested" scoped="" ref="0x110c09e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x110c0a020" loc="91:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x110c0a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x110c0a390"/>
        <function-ref name="immediateRequest" scoped="" ref="0x110c0a518"/>
        <function-ref name="request" scoped="" ref="0x110c0a6a0"/>
        <function-ref name="granted" scoped="" ref="0x110c0a828"/>
        <function-ref name="isOwner" scoped="" ref="0x110c0a9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x110c080e0" loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x110c080e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x110c08430"/>
        <function-ref name="userId" scoped="" ref="0x110c085b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x111fd7080" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x111fd7080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x111fd73d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x111fd7658" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x111fd7658"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x111fd79a8"/>
        <function-ref name="isEmpty" scoped="" ref="0x111fd7b30"/>
        <function-ref name="isEnqueued" scoped="" ref="0x111fd7cb8"/>
        <function-ref name="dequeue" scoped="" ref="0x111fd7e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x111fd3388" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x111fd3388"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x111fd36f8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x111fd3880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x111fd1020" loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x111fd1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x111fd1390"/>
        <function-ref name="configure" scoped="" ref="0x111fd1518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x111fd17a0" loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x111fd17a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x111fd1af0"/>
        <function-ref name="isEmpty" scoped="" ref="0x111fd1c78"/>
        <function-ref name="isEnqueued" scoped="" ref="0x111fd1e00"/>
        <function-ref name="dequeue" scoped="" ref="0x111fd0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x111fd3ac8" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x111fd3ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x111fd3e18"/>
        <function-ref name="requested" scoped="" ref="0x111fd2020"/>
        <function-ref name="granted" scoped="" ref="0x111fd21a8"/>
        <function-ref name="isOwner" scoped="" ref="0x111fd2330"/>
        <function-ref name="immediateRequested" scoped="" ref="0x111fd24b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x111fd0268" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x111fd0268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x111fd05b8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x111fd0740"/>
        <function-ref name="led1On" scoped="" ref="0x111fd08c8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x111fd0a50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x111fd0bd8"/>
        <function-ref name="get" scoped="" ref="0x111fd0d60"/>
        <function-ref name="led1Off" scoped="" ref="0x111fcf020"/>
        <function-ref name="led0On" scoped="" ref="0x111fcf640"/>
        <function-ref name="set" scoped="" ref="0x111fcf330"/>
        <function-ref name="led2On" scoped="" ref="0x111fcf1a8"/>
        <function-ref name="led2Off" scoped="" ref="0x111fcf4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x111fd4668" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x111fd4668"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x111fd49d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x111fd4b60"/>
        <function-ref name="request" scoped="" ref="0x111fd4ce8"/>
        <function-ref name="granted" scoped="" ref="0x111fd4e70"/>
        <function-ref name="isOwner" scoped="" ref="0x111fd3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x111fd2700" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x111fd2700"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x111fd2a50"/>
        <function-ref name="userId" scoped="" ref="0x111fd2bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x111fcf908" loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x111fcf908"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x111fcfc58"/>
        <function-ref name="runTask" scoped="" ref="0x111fcfde0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x110c03b98" loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x110c03b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x110c2e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x110c2e268" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x110c2e268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x110c2e5b8"/>
        <function-ref name="requested" scoped="" ref="0x110c2e740"/>
        <function-ref name="granted" scoped="" ref="0x110c2e8c8"/>
        <function-ref name="isOwner" scoped="" ref="0x110c2ea50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x110c2ebd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x110c03478" loc="70:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x110c03478"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x110c037c8"/>
        <function-ref name="stop" scoped="" ref="0x110c03950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x110c2ee20" loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x110c2ee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x110c2d1a8"/>
        <function-ref name="userId" scoped="" ref="0x110c2d330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x112030d20" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x112030d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x11202f0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x11202f2e8" loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x11202f2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x11202f638"/>
        <function-ref name="requested" scoped="" ref="0x11202f7c0"/>
        <function-ref name="granted" scoped="" ref="0x11202f948"/>
        <function-ref name="isOwner" scoped="" ref="0x11202fad0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x11202fc58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x112030600" loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x112030600"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x112030950"/>
        <function-ref name="stop" scoped="" ref="0x112030ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x11202e020" loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x11202e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x11202e370"/>
        <function-ref name="userId" scoped="" ref="0x11202e4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x110c52640" loc="3:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x110c52640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x110c52990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x110c52c70" loc="4:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x110c52c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x110c51020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x110c511a8"/>
        <function-ref name="request" scoped="" ref="0x110c51330"/>
        <function-ref name="granted" scoped="" ref="0x110c514b8"/>
        <function-ref name="isOwner" scoped="" ref="0x110c51640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x110c55da8" loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x110c55da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x110c52170"/>
        <function-ref name="stop" scoped="" ref="0x110c522f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x110c3e060" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x110c3e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x110c3e3b0"/>
        <function-ref name="offset" scoped="" ref="0x110c3e538"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x110c3e6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x110c72a60" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="ChaseTestAppC.floodTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x110c72a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b1990"/>
            <typename><typedef-ref name="TMilli" ref="0x1107b1ce8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x110ddfd60"/>
        <function-ref name="fired" scoped="" ref="0x110de0470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x110ddf1c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x110de0d10"/>
        <function-ref name="getdt" scoped="" ref="0x110ddd648"/>
        <function-ref name="gett0" scoped="" ref="0x110ddd1f8"/>
        <function-ref name="isRunning" scoped="" ref="0x110de08c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x110de1620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x110ddf790"/>
        <function-ref name="startOneShot" scoped="" ref="0x110de1ac0"/>
        <function-ref name="stop" scoped="" ref="0x110de0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x110c5f7d8" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x110c5f7d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b1990"/>
            <typename><typedef-ref name="TMilli" ref="0x1107b1ce8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x110c5ca18"/>
        <function-ref name="fired" scoped="" ref="0x110c5d158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x110c5de48"/>
        <function-ref name="isOneShot" scoped="" ref="0x110c5d9f8"/>
        <function-ref name="getdt" scoped="" ref="0x110c5a2e8"/>
        <function-ref name="gett0" scoped="" ref="0x110c5ce68"/>
        <function-ref name="isRunning" scoped="" ref="0x110c5d5a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x110c5e370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x110c5c448"/>
        <function-ref name="startOneShot" scoped="" ref="0x110c5e810"/>
        <function-ref name="stop" scoped="" ref="0x110c5ecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x110c99de8" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x110c99de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b1990"/>
            <typename><typedef-ref name="TMilli" ref="0x1107b1ce8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x110c940c0"/>
        <function-ref name="fired" scoped="" ref="0x110c96798"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x110c954d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x110c95088"/>
        <function-ref name="getdt" scoped="" ref="0x110c94960"/>
        <function-ref name="gett0" scoped="" ref="0x110c94510"/>
        <function-ref name="isRunning" scoped="" ref="0x110c96be8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x110c989e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x110c95aa8"/>
        <function-ref name="startOneShot" scoped="" ref="0x110c98e80"/>
        <function-ref name="stop" scoped="" ref="0x110c96348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x110c8fae8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x110c8fae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b1990"/>
            <typename><typedef-ref name="TMilli" ref="0x1107b1ce8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x110c91690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x110c990f0" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x110c990f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x110c99440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x110d5dc00" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x110d5dc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b1990"/>
            <typename><typedef-ref name="TMilli" ref="0x1107b1ce8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fbc6020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x110d5a410"/>
        <function-ref name="fired" scoped="" ref="0x110d5b4a8"/>
        <function-ref name="startAt" scoped="" ref="0x110d5bdb8"/>
        <function-ref name="isRunning" scoped="" ref="0x110d5b930"/>
        <function-ref name="getAlarm" scoped="" ref="0x110d5a898"/>
        <function-ref name="start" scoped="" ref="0x110d5c9f0"/>
        <function-ref name="stop" scoped="" ref="0x110d5b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x110d5d418" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x110d5d418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x110d5d768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x11201f020" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x11201f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b0150"/>
            <typename><typedef-ref name="T32khz" ref="0x1107b04a8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x11201d690"/>
        <function-ref name="fired" scoped="" ref="0x11201e6f8"/>
        <function-ref name="startAt" scoped="" ref="0x11201d088"/>
        <function-ref name="isRunning" scoped="" ref="0x11201eb80"/>
        <function-ref name="getAlarm" scoped="" ref="0x11201db18"/>
        <function-ref name="start" scoped="" ref="0x11201fd70"/>
        <function-ref name="stop" scoped="" ref="0x11201e270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1120207d8" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1120207d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x112020b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x1120995b8" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x1120995b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x112099908"/>
        <function-ref name="setEvent" scoped="" ref="0x112099a90"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x112099c18"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x112099da0"/>
        <function-ref name="fired" scoped="" ref="0x112098020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x11209db88" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x11209db88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x11209b020"/>
        <function-ref name="setClockSource" scoped="" ref="0x11209b1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x11209b330"/>
        <function-ref name="get" scoped="" ref="0x11209b4b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x11209b640"/>
        <function-ref name="clearOverflow" scoped="" ref="0x11209b7c8"/>
        <function-ref name="getMode" scoped="" ref="0x11209b950"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x11209bad8"/>
        <function-ref name="overflow" scoped="" ref="0x11209bc60"/>
        <function-ref name="setMode" scoped="" ref="0x11209bde8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x11209a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x11209a2a8" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x11209a2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x11209a5f8"/>
        <function-ref name="getControl" scoped="" ref="0x11209a780"/>
        <function-ref name="enableEvents" scoped="" ref="0x11209a908"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x11209aa90"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x11209ac18"/>
        <function-ref name="disableEvents" scoped="" ref="0x11209ada0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x112099020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1120991a8"/>
        <function-ref name="setControl" scoped="" ref="0x112099330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x110cb0cb8" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x110cb0cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x110cae0a0"/>
        <function-ref name="setEvent" scoped="" ref="0x110cae228"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x110cae3b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x110cae538"/>
        <function-ref name="fired" scoped="" ref="0x110cae6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x110cb3858" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x110cb3858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x110cb3ba8"/>
        <function-ref name="setClockSource" scoped="" ref="0x110cb3d30"/>
        <function-ref name="enableEvents" scoped="" ref="0x110cb2020"/>
        <function-ref name="get" scoped="" ref="0x110cb21a8"/>
        <function-ref name="disableEvents" scoped="" ref="0x110cb2330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110cb24b8"/>
        <function-ref name="getMode" scoped="" ref="0x110cb2640"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110cb27c8"/>
        <function-ref name="overflow" scoped="" ref="0x110cb2950"/>
        <function-ref name="setMode" scoped="" ref="0x110cb2ad8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x110cb2c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x110cb14d0" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x110cb14d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x110cb1820"/>
        <function-ref name="getControl" scoped="" ref="0x110cb19a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x110cb1b30"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x110cb1cb8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x110cb1e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x110cb0020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x110cb01a8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x110cb0330"/>
        <function-ref name="setControl" scoped="" ref="0x110cb04b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x11208f020" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x11208f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x11208f370"/>
        <function-ref name="setEvent" scoped="" ref="0x11208f4f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x11208f680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x11208f808"/>
        <function-ref name="fired" scoped="" ref="0x11208f990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x112092568" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x112092568"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1120928b8"/>
        <function-ref name="setClockSource" scoped="" ref="0x112092a40"/>
        <function-ref name="enableEvents" scoped="" ref="0x112092bc8"/>
        <function-ref name="get" scoped="" ref="0x112092d50"/>
        <function-ref name="disableEvents" scoped="" ref="0x112091020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1120911a8"/>
        <function-ref name="getMode" scoped="" ref="0x112091330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1120914b8"/>
        <function-ref name="overflow" scoped="" ref="0x112091640"/>
        <function-ref name="setMode" scoped="" ref="0x1120917c8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x112091950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x1120964f8" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x1120964f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b0150"/>
            <typename><typedef-ref name="T32khz" ref="0x1107b04a8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x112093c88"/>
        <function-ref name="fired" scoped="" ref="0x112094d08"/>
        <function-ref name="startAt" scoped="" ref="0x112093680"/>
        <function-ref name="isRunning" scoped="" ref="0x1120931f8"/>
        <function-ref name="getAlarm" scoped="" ref="0x112092150"/>
        <function-ref name="start" scoped="" ref="0x1120943a8"/>
        <function-ref name="stop" scoped="" ref="0x112094880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x112097bd8" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x112097bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x112096020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x112091bd8" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x112091bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x112090020"/>
        <function-ref name="getControl" scoped="" ref="0x1120901a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x112090330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1120904b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x112090640"/>
        <function-ref name="disableEvents" scoped="" ref="0x1120907c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x112090950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x112090ad8"/>
        <function-ref name="setControl" scoped="" ref="0x112090c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x110cf0be0" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x110cf0be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b1990"/>
            <typename><typedef-ref name="TMilli" ref="0x1107b1ce8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fbc6020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x110ced970"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110cec2b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110ceddf8"/>
        <function-ref name="overflow" scoped="" ref="0x110cec738"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x110d11e20" loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x110d11e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b0150"/>
            <typename><typedef-ref name="T32khz" ref="0x1107b04a8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x110d0fbe8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110d0e548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110d0e0c0"/>
        <function-ref name="overflow" scoped="" ref="0x110d0e9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x110d13c50" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x110d13c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b1990"/>
            <typename><typedef-ref name="TMilli" ref="0x1107b1ce8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fbc6020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x110d129f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110d11330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110d12e78"/>
        <function-ref name="overflow" scoped="" ref="0x110d117b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x112019020" loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x112019020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b1990"/>
            <typename><typedef-ref name="TMilli" ref="0x1107b1ce8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fbc6020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x112017690"/>
        <function-ref name="fired" scoped="" ref="0x1120186f8"/>
        <function-ref name="startAt" scoped="" ref="0x112017088"/>
        <function-ref name="isRunning" scoped="" ref="0x112018b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x112017b18"/>
        <function-ref name="start" scoped="" ref="0x112019d70"/>
        <function-ref name="stop" scoped="" ref="0x112018270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x112013450" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x112013450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b0150"/>
            <typename><typedef-ref name="T32khz" ref="0x1107b04a8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x112011ab0"/>
        <function-ref name="fired" scoped="" ref="0x112012b30"/>
        <function-ref name="startAt" scoped="" ref="0x1120114a8"/>
        <function-ref name="isRunning" scoped="" ref="0x112011020"/>
        <function-ref name="getAlarm" scoped="" ref="0x112010020"/>
        <function-ref name="start" scoped="" ref="0x1120121d0"/>
        <function-ref name="stop" scoped="" ref="0x1120126a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x1120161a8" loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x1120161a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b1990"/>
            <typename><typedef-ref name="TMilli" ref="0x1107b1ce8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fbc6020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x112015020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x112015930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1120154a8"/>
        <function-ref name="overflow" scoped="" ref="0x112015db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x110d6f020" loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x110d6f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x110d6f370"/>
        <function-ref name="runTask" scoped="" ref="0x110d6f4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x110d73020" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x110d73020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b1990"/>
            <typename><typedef-ref name="TMilli" ref="0x1107b1ce8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fbc6020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x110d70690"/>
        <function-ref name="fired" scoped="" ref="0x110d716f8"/>
        <function-ref name="startAt" scoped="" ref="0x110d70088"/>
        <function-ref name="isRunning" scoped="" ref="0x110d71b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x110d70b18"/>
        <function-ref name="start" scoped="" ref="0x110d73d70"/>
        <function-ref name="stop" scoped="" ref="0x110d71270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x110d56d88" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x110d56d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b1990"/>
            <typename><typedef-ref name="TMilli" ref="0x1107b1ce8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x110d74088"/>
        <function-ref name="fired" scoped="" ref="0x110d776c8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x110d75470"/>
        <function-ref name="isOneShot" scoped="" ref="0x110d75020"/>
        <function-ref name="getdt" scoped="" ref="0x110d74928"/>
        <function-ref name="gett0" scoped="" ref="0x110d744d8"/>
        <function-ref name="isRunning" scoped="" ref="0x110d77b18"/>
        <function-ref name="startPeriodic" scoped="" ref="0x110d78908"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x110d75a40"/>
        <function-ref name="startOneShot" scoped="" ref="0x110d78da8"/>
        <function-ref name="stop" scoped="" ref="0x110d77278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x110dae478" loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x110dae478"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x110dae7c8"/>
        <function-ref name="runTask" scoped="" ref="0x110dae950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x110db3208" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x110db3208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b1990"/>
            <typename><typedef-ref name="TMilli" ref="0x1107b1ce8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x110daf5f0"/>
        <function-ref name="fired" scoped="" ref="0x110db1b28"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x110db08c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x110db0470"/>
        <function-ref name="getdt" scoped="" ref="0x110dae020"/>
        <function-ref name="gett0" scoped="" ref="0x110dafa40"/>
        <function-ref name="isRunning" scoped="" ref="0x110db0020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x110db3d50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x110daf020"/>
        <function-ref name="startOneShot" scoped="" ref="0x110db1238"/>
        <function-ref name="stop" scoped="" ref="0x110db16d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x110db9020" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x110db9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b1990"/>
            <typename><typedef-ref name="TMilli" ref="0x1107b1ce8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x110db4358"/>
        <function-ref name="fired" scoped="" ref="0x110db79b8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x110db6748"/>
        <function-ref name="isOneShot" scoped="" ref="0x110db62d8"/>
        <function-ref name="getdt" scoped="" ref="0x110db4c38"/>
        <function-ref name="gett0" scoped="" ref="0x110db47c8"/>
        <function-ref name="isRunning" scoped="" ref="0x110db7e28"/>
        <function-ref name="startPeriodic" scoped="" ref="0x110db9b88"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x110db6d38"/>
        <function-ref name="startOneShot" scoped="" ref="0x110db7088"/>
        <function-ref name="stop" scoped="" ref="0x110db7548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x110df3c38" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x110df3c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b1990"/>
            <typename><typedef-ref name="TMilli" ref="0x1107b1ce8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x110df2820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x110df2e48" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x110df2e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b1990"/>
            <typename><typedef-ref name="TMilli" ref="0x1107b1ce8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fbc6020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x110de8be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110de7548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110de70c0"/>
        <function-ref name="overflow" scoped="" ref="0x110de79d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x110ddb020" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="ChaseTestAppC.dcTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x110ddb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b1990"/>
            <typename><typedef-ref name="TMilli" ref="0x1107b1ce8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x110dd72b8"/>
        <function-ref name="fired" scoped="" ref="0x110dda978"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x110dd96c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x110dd9278"/>
        <function-ref name="getdt" scoped="" ref="0x110dd7b58"/>
        <function-ref name="gett0" scoped="" ref="0x110dd7708"/>
        <function-ref name="isRunning" scoped="" ref="0x110ddadc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x110ddbb68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x110dd9c98"/>
        <function-ref name="startOneShot" scoped="" ref="0x110dda088"/>
        <function-ref name="stop" scoped="" ref="0x110dda528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x110e14350" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x110e14350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x110e146a0"/>
        <function-ref name="rand32" scoped="" ref="0x110e14828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x110e18d00" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x110e18d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x110dd28b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x110dd3020" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x110dd3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x110dd3370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x110e11160" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x110e11160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x110e114b0"/>
        <function-ref name="rand32" scoped="" ref="0x110e11638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x110e12118" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x110e12118"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x110e12c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x110e17840" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x110e17840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x110e17b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChaseEnergy" ref="0x110e36830" loc="13:../../net/ChaseC.nc">
      <component-ref qname="ChaseC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChaseEnergy" scoped="" ref="0x110e36830"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChaseEnergy"/>
      </instance>
      <interface-functions>
        <function-ref name="getRadioOnTime" scoped="" ref="0x110e36b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChasePacket" ref="0x110e3ab10" loc="11:../../net/ChaseC.nc">
      <component-ref qname="ChaseC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChasePacket" scoped="" ref="0x110e3ab10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChasePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x110e3ae60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChaseControl" ref="0x110e3b2b8" loc="10:../../net/ChaseC.nc">
      <component-ref qname="ChaseC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChaseControl" scoped="" ref="0x110e3b2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChaseControl"/>
      </instance>
      <interface-functions>
        <function-ref name="dc_started" scoped="" ref="0x110e3b608"/>
        <function-ref name="dc_start" scoped="" ref="0x110e3b790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChaseListen" ref="0x110df65c0" loc="9:../../net/ChaseC.nc">
      <component-ref qname="ChaseC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChaseListen" scoped="" ref="0x110df65c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChaseListen"/>
      </instance>
      <interface-functions>
        <function-ref name="reboot_rec" scoped="" ref="0x110df6910"/>
        <function-ref name="begin_rec" scoped="" ref="0x110df6a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChaseDelay" ref="0x110e38568" loc="12:../../net/ChaseC.nc">
      <component-ref qname="ChaseC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChaseDelay" scoped="" ref="0x110e38568"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChaseDelay"/>
      </instance>
      <interface-functions>
        <function-ref name="getTime" scoped="" ref="0x110e388b8"/>
        <function-ref name="getDelay" scoped="" ref="0x110e38a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChaseFlood" ref="0x110df8c40" loc="8:../../net/ChaseC.nc">
      <component-ref qname="ChaseC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChaseFlood" scoped="" ref="0x110df8c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChaseFlood"/>
      </instance>
      <interface-functions>
        <function-ref name="init_flood" scoped="" ref="0x110dfc020"/>
        <function-ref name="pkt_reced" scoped="" ref="0x110dfc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x110e2bcf0" loc="44:../../chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x110e2bcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x110e2a0a0"/>
        <function-ref name="stopDone" scoped="" ref="0x110e2a228"/>
        <function-ref name="start" scoped="" ref="0x110e2a3b0"/>
        <function-ref name="stop" scoped="" ref="0x110e2a538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x110e21d88" loc="47:../../chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x110e21d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x110e28170"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x110e282f8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x110e28480"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x110e28608"/>
        <function-ref name="setCca" scoped="" ref="0x110e28790"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x110e28918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x110e2a7f0" loc="45:../../chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x110e2a7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x110e2ab40"/>
        <function-ref name="getPayload" scoped="" ref="0x110e2acc8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x110e2ae50"/>
        <function-ref name="cancel" scoped="" ref="0x110e29020"/>
        <function-ref name="sendDone" scoped="" ref="0x110e291a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x110e29478" loc="46:../../chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x110e29478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x110e297c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x110e27860" loc="39:../../chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x110e27860"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x110e27bb0"/>
        <function-ref name="stopDone" scoped="" ref="0x110e27d38"/>
        <function-ref name="start" scoped="" ref="0x110e1e020"/>
        <function-ref name="stop" scoped="" ref="0x110e1e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x110e1c140" loc="41:../../chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x110e1c140"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x110e1c490"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x110e1c618"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x110e1c7a0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x110e1c928"/>
        <function-ref name="setCca" scoped="" ref="0x110e1cab0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x110e1cc38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x110e62aa8" loc="47:../../chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x110e62aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x110e62df8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x110e5b020"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x110e5b1a8"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x110e5b330"/>
        <function-ref name="setCca" scoped="" ref="0x110e5b4b8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x110e5b640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x110e4a888" loc="50:../../chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x110e4a888"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x110e4abd8"/>
        <function-ref name="setNetwork" scoped="" ref="0x110e4ad60"/>
        <function-ref name="getRssi" scoped="" ref="0x110e52020"/>
        <function-ref name="getNetwork" scoped="" ref="0x110e521a8"/>
        <function-ref name="getPower" scoped="" ref="0x110e52330"/>
        <function-ref name="getLqi" scoped="" ref="0x110e524b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x110e55d48" loc="46:../../chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x110e55d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x110e620d8"/>
        <function-ref name="cancel" scoped="" ref="0x110e62260"/>
        <function-ref name="modify" scoped="" ref="0x110e623e8"/>
        <function-ref name="sendDone" scoped="" ref="0x110e62570"/>
        <function-ref name="resend" scoped="" ref="0x110e626f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x110e1e460" loc="40:../../chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x110e1e460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x110e1e7b0"/>
        <function-ref name="getPayload" scoped="" ref="0x110e1e938"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x110e1eac0"/>
        <function-ref name="cancel" scoped="" ref="0x110e1ec48"/>
        <function-ref name="sendDone" scoped="" ref="0x110e1edd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x110e5b908" loc="48:../../chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x110e5b908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x110e5bc58"/>
        <function-ref name="rand32" scoped="" ref="0x110e5bde0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x110e1a540" loc="45:../../chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x110e1a540"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x110e1a890"/>
        <function-ref name="stop" scoped="" ref="0x110e1aa18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x110e45b68" loc="51:../../chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x110e45b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x110e51020"/>
        <function-ref name="getHeader" scoped="" ref="0x110e511a8"/>
        <function-ref name="getMetadata" scoped="" ref="0x110e51330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x110e5c320" loc="44:../../chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x110e5c320"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x110e5c670"/>
        <function-ref name="rfOff" scoped="" ref="0x110e5c7f8"/>
        <function-ref name="rxOn" scoped="" ref="0x110e5c980"/>
        <function-ref name="startVReg" scoped="" ref="0x110e5cb08"/>
        <function-ref name="stopVReg" scoped="" ref="0x110e5cc90"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x110e5ce18"/>
        <function-ref name="stopOscillator" scoped="" ref="0x110e1a020"/>
        <function-ref name="startVRegDone" scoped="" ref="0x110e1a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x110e540c0" loc="49:../../chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x110e540c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x110e54410"/>
        <function-ref name="led0Toggle" scoped="" ref="0x110e54598"/>
        <function-ref name="led1On" scoped="" ref="0x110e54720"/>
        <function-ref name="led1Toggle" scoped="" ref="0x110e548a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x110e54a30"/>
        <function-ref name="get" scoped="" ref="0x110e54bb8"/>
        <function-ref name="led1Off" scoped="" ref="0x110e54d40"/>
        <function-ref name="led2Off" scoped="" ref="0x110e534b8"/>
        <function-ref name="set" scoped="" ref="0x110e53020"/>
        <function-ref name="led0On" scoped="" ref="0x110e531a8"/>
        <function-ref name="led2On" scoped="" ref="0x110e53330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x110e1b020" loc="43:../../chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x110e1b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x110e1b370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x110e1b4f8"/>
        <function-ref name="request" scoped="" ref="0x110e1b680"/>
        <function-ref name="granted" scoped="" ref="0x110e1b808"/>
        <function-ref name="isOwner" scoped="" ref="0x110e1b990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x110e49110" loc="52:../../chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x110e49110"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x110e49560"/>
        <function-ref name="toIdle" scoped="" ref="0x110e496e8"/>
        <function-ref name="isState" scoped="" ref="0x110e49870"/>
        <function-ref name="isIdle" scoped="" ref="0x110e499f8"/>
        <function-ref name="requestState" scoped="" ref="0x110e49b80"/>
        <function-ref name="forceState" scoped="" ref="0x110e49d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x110e85800" loc="76:../../chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x110e85800"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x110e85b50"/>
        <function-ref name="runTask" scoped="" ref="0x110e85cd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x110e879a8" loc="75:../../chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x110e879a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x110e87cf8"/>
        <function-ref name="runTask" scoped="" ref="0x110e87e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x110e3eab8" loc="74:../../chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x110e3eab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x110e3ee08"/>
        <function-ref name="runTask" scoped="" ref="0x110e87020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x110ec3af8" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x110ec3af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x110ec3e48"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x110ecf020"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x110ecf1a8"/>
        <function-ref name="syncDone" scoped="" ref="0x110ecf330"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x110ecf4b8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x110ecf640"/>
        <function-ref name="setChannel" scoped="" ref="0x110ecf7c8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x110ecf950"/>
        <function-ref name="setPanAddr" scoped="" ref="0x110ecfad8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x110ecfc60"/>
        <function-ref name="getExtAddr" scoped="" ref="0x110ecfde8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x110ece020"/>
        <function-ref name="sync" scoped="" ref="0x110ece1a8"/>
        <function-ref name="getChannel" scoped="" ref="0x110ece430"/>
        <function-ref name="getPanAddr" scoped="" ref="0x110ece5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x110ebed28" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x110ebed28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110ec18b8"/>
        <function-ref name="readDone" scoped="" ref="0x110ec1d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x110ece8b0" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x110ece8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x110ecec00"/>
        <function-ref name="rfOff" scoped="" ref="0x110eced88"/>
        <function-ref name="rxOn" scoped="" ref="0x110ec2020"/>
        <function-ref name="startVReg" scoped="" ref="0x110ec21a8"/>
        <function-ref name="stopVReg" scoped="" ref="0x110ec2330"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x110ec24b8"/>
        <function-ref name="stopOscillator" scoped="" ref="0x110ec2640"/>
        <function-ref name="startVRegDone" scoped="" ref="0x110ec27c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x110e89e18" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x110e89e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x110ed01a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x110ed0330"/>
        <function-ref name="request" scoped="" ref="0x110ed04b8"/>
        <function-ref name="granted" scoped="" ref="0x110ed0640"/>
        <function-ref name="isOwner" scoped="" ref="0x110ed07c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x110eb94b0" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x110eb94b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x110eb9800"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x110eb9988"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x110eb9b10"/>
        <function-ref name="syncDone" scoped="" ref="0x110eb9c98"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x110eb9e20"/>
        <function-ref name="setShortAddr" scoped="" ref="0x110eb8020"/>
        <function-ref name="setChannel" scoped="" ref="0x110eb81a8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x110eb8330"/>
        <function-ref name="setPanAddr" scoped="" ref="0x110eb84b8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x110eb8640"/>
        <function-ref name="getExtAddr" scoped="" ref="0x110eb87c8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x110eb8950"/>
        <function-ref name="sync" scoped="" ref="0x110eb8ad8"/>
        <function-ref name="getChannel" scoped="" ref="0x110eb8d60"/>
        <function-ref name="getPanAddr" scoped="" ref="0x110eb7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x110ee5dd0" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x110ee5dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110ee4170"/>
        <function-ref name="write" scoped="" ref="0x110ee42f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x110eb1998" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x110eb1998"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x110eb1ce8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x110eb3370" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x110eb3370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b0150"/>
            <typename><typedef-ref name="T32khz" ref="0x1107b04a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fbc6020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x110eb0ab0"/>
        <function-ref name="fired" scoped="" ref="0x110eb2a58"/>
        <function-ref name="startAt" scoped="" ref="0x110eb04a8"/>
        <function-ref name="isRunning" scoped="" ref="0x110eb0020"/>
        <function-ref name="getAlarm" scoped="" ref="0x110eae020"/>
        <function-ref name="start" scoped="" ref="0x110eb20f8"/>
        <function-ref name="stop" scoped="" ref="0x110eb25d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x110eedc40" loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x110eedc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110ee5020"/>
        <function-ref name="write" scoped="" ref="0x110ee51a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x110ead688" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x110ead688"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110ead9d8"/>
        <function-ref name="isInput" scoped="" ref="0x110eadb60"/>
        <function-ref name="toggle" scoped="" ref="0x110eadce8"/>
        <function-ref name="isOutput" scoped="" ref="0x110eade70"/>
        <function-ref name="get" scoped="" ref="0x110ef8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x110ef81a8"/>
        <function-ref name="set" scoped="" ref="0x110ef8330"/>
        <function-ref name="clr" scoped="" ref="0x110ef84b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x110eb6658" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x110eb6658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110eb51e8"/>
        <function-ref name="readDone" scoped="" ref="0x110eb5638"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x110ed3720" loc="126:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x110ed3720"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x110ed3a70"/>
        <function-ref name="runTask" scoped="" ref="0x110ed3bf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x110ee4680" loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x110ee4680"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110ee49d0"/>
        <function-ref name="write" scoped="" ref="0x110ee4b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x110ee3020" loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x110ee3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110ee3370"/>
        <function-ref name="write" scoped="" ref="0x110ee34f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x110ee6a40" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x110ee6a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110ee6d90"/>
        <function-ref name="write" scoped="" ref="0x110eed020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x110eee338" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x110eee338"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x110eee688"/>
        <function-ref name="changed" scoped="" ref="0x110eee810"/>
        <function-ref name="amGroup" scoped="" ref="0x110eee998"/>
        <function-ref name="setAddress" scoped="" ref="0x110eeeb20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x110eae4f8" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x110eae4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110eae848"/>
        <function-ref name="isInput" scoped="" ref="0x110eae9d0"/>
        <function-ref name="toggle" scoped="" ref="0x110eaeb58"/>
        <function-ref name="isOutput" scoped="" ref="0x110eaece0"/>
        <function-ref name="get" scoped="" ref="0x110eaee68"/>
        <function-ref name="makeOutput" scoped="" ref="0x110ead020"/>
        <function-ref name="set" scoped="" ref="0x110ead1a8"/>
        <function-ref name="clr" scoped="" ref="0x110ead330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x110ee2560" loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x110ee2560"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x110ee2ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x110ef8810" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x110ef8810"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110ef8b60"/>
        <function-ref name="isInput" scoped="" ref="0x110ef8ce8"/>
        <function-ref name="toggle" scoped="" ref="0x110ef8e70"/>
        <function-ref name="isOutput" scoped="" ref="0x110ef7020"/>
        <function-ref name="get" scoped="" ref="0x110ef71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110ef7330"/>
        <function-ref name="set" scoped="" ref="0x110ef74b8"/>
        <function-ref name="clr" scoped="" ref="0x110ef7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x110eba080" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x110eba080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x110eba3d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x110ee5558" loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x110ee5558"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110ee58a8"/>
        <function-ref name="write" scoped="" ref="0x110ee5a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x110ee2e40" loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x110ee2e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x110ee11c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x110ee1550" loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x110ee1550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x110ee18a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x110ee1a28"/>
        <function-ref name="request" scoped="" ref="0x110ee1bb0"/>
        <function-ref name="granted" scoped="" ref="0x110ee1d38"/>
        <function-ref name="isOwner" scoped="" ref="0x110edf020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x110ede140" loc="76:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x110ede140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x110ede490"/>
        <function-ref name="immediateRequest" scoped="" ref="0x110ede618"/>
        <function-ref name="request" scoped="" ref="0x110ede7a0"/>
        <function-ref name="granted" scoped="" ref="0x110ede928"/>
        <function-ref name="isOwner" scoped="" ref="0x110edeab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x110eb7318" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x110eb7318"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x110eb7668"/>
        <function-ref name="rfOff" scoped="" ref="0x110eb77f0"/>
        <function-ref name="rxOn" scoped="" ref="0x110eb7978"/>
        <function-ref name="startVReg" scoped="" ref="0x110eb7b00"/>
        <function-ref name="stopVReg" scoped="" ref="0x110eb7c88"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x110eb7e10"/>
        <function-ref name="stopOscillator" scoped="" ref="0x110eb6020"/>
        <function-ref name="startVRegDone" scoped="" ref="0x110eb61a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x110eed3b8" loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x110eed3b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110eed708"/>
        <function-ref name="write" scoped="" ref="0x110eed890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x110ee61d0" loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x110ee61d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110ee6520"/>
        <function-ref name="write" scoped="" ref="0x110ee66a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x110ee0768" loc="69:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x110ee0768"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x110ee0ab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x110eded68" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x110eded68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x110edd0f0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x110edd278"/>
        <function-ref name="led1On" scoped="" ref="0x110edd400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x110edd588"/>
        <function-ref name="led2Toggle" scoped="" ref="0x110edd710"/>
        <function-ref name="get" scoped="" ref="0x110edd898"/>
        <function-ref name="led1Off" scoped="" ref="0x110edda20"/>
        <function-ref name="led2Off" scoped="" ref="0x110edc1a8"/>
        <function-ref name="set" scoped="" ref="0x110eddba8"/>
        <function-ref name="led0On" scoped="" ref="0x110eddd30"/>
        <function-ref name="led2On" scoped="" ref="0x110edc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x110ed58d8" loc="125:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x110ed58d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x110ed5c28"/>
        <function-ref name="runTask" scoped="" ref="0x110ed5db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x110eba6b0" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x110eba6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x110ebaa00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x110ebab88"/>
        <function-ref name="request" scoped="" ref="0x110ebad10"/>
        <function-ref name="granted" scoped="" ref="0x110eb9020"/>
        <function-ref name="isOwner" scoped="" ref="0x110eb91a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x110ee9c18" loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x110ee9c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110ef2020"/>
        <function-ref name="write" scoped="" ref="0x110ef21a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x110ee92e0" loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x110ee92e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110ee9730"/>
        <function-ref name="write" scoped="" ref="0x110ee98b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x110ef3e80" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x110ef3e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x110ef61f8"/>
        <function-ref name="disable" scoped="" ref="0x110ef6380"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x110ef6508"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x110ef6690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x110edf3c0" loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x110edf3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x110edf710"/>
        <function-ref name="immediateRequest" scoped="" ref="0x110edf898"/>
        <function-ref name="request" scoped="" ref="0x110edfa20"/>
        <function-ref name="granted" scoped="" ref="0x110edfba8"/>
        <function-ref name="isOwner" scoped="" ref="0x110edfd30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x110ee0e40" loc="70:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x110ee0e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x110ee21c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x110f478e8" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x110f478e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x110f47c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x110f912a0" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x110f912a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b0150"/>
            <typename><typedef-ref name="T32khz" ref="0x1107b04a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fbc6020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x110f8f918"/>
        <function-ref name="fired" scoped="" ref="0x110f90980"/>
        <function-ref name="startAt" scoped="" ref="0x110f8f310"/>
        <function-ref name="isRunning" scoped="" ref="0x110f90e08"/>
        <function-ref name="getAlarm" scoped="" ref="0x110f8fda0"/>
        <function-ref name="start" scoped="" ref="0x110f90020"/>
        <function-ref name="stop" scoped="" ref="0x110f904f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x110f8cb78" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x110f8cb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x110fa3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x110fa34f8" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x110fa34f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b0150"/>
            <typename><typedef-ref name="T32khz" ref="0x1107b04a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fbc6020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x110fa1c88"/>
        <function-ref name="fired" scoped="" ref="0x110fa2d08"/>
        <function-ref name="startAt" scoped="" ref="0x110fa1680"/>
        <function-ref name="isRunning" scoped="" ref="0x110fa11f8"/>
        <function-ref name="getAlarm" scoped="" ref="0x110fa0150"/>
        <function-ref name="start" scoped="" ref="0x110fa23a8"/>
        <function-ref name="stop" scoped="" ref="0x110fa2880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x11212bd20" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x11212bd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b0150"/>
            <typename><typedef-ref name="T32khz" ref="0x1107b04a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fbc6020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x112127410"/>
        <function-ref name="fired" scoped="" ref="0x1121284a8"/>
        <function-ref name="startAt" scoped="" ref="0x112128db8"/>
        <function-ref name="isRunning" scoped="" ref="0x112128930"/>
        <function-ref name="getAlarm" scoped="" ref="0x112127898"/>
        <function-ref name="start" scoped="" ref="0x112129ac0"/>
        <function-ref name="stop" scoped="" ref="0x112128020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x11212b538" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x11212b538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x11212b888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x1121238a8" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x1121238a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b0150"/>
            <typename><typedef-ref name="T32khz" ref="0x1107b04a8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x11211f020"/>
        <function-ref name="fired" scoped="" ref="0x112121020"/>
        <function-ref name="startAt" scoped="" ref="0x112121930"/>
        <function-ref name="isRunning" scoped="" ref="0x1121214a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x11211f4a8"/>
        <function-ref name="start" scoped="" ref="0x112122660"/>
        <function-ref name="stop" scoped="" ref="0x112122b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1121230c0" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1121230c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x112123410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x11210b020" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x11210b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x11210b370"/>
        <function-ref name="setEvent" scoped="" ref="0x11210b4f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x11210b680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x11210b808"/>
        <function-ref name="fired" scoped="" ref="0x11210b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x11210e7d8" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x11210e7d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x11210eb28"/>
        <function-ref name="setClockSource" scoped="" ref="0x11210ecb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x11210ee38"/>
        <function-ref name="get" scoped="" ref="0x11210d020"/>
        <function-ref name="disableEvents" scoped="" ref="0x11210d1a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x11210d330"/>
        <function-ref name="getMode" scoped="" ref="0x11210d4b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x11210d640"/>
        <function-ref name="overflow" scoped="" ref="0x11210d7c8"/>
        <function-ref name="setMode" scoped="" ref="0x11210d950"/>
        <function-ref name="setInputDivider" scoped="" ref="0x11210dad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x11210dd60" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x11210dd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x11210c0d8"/>
        <function-ref name="getControl" scoped="" ref="0x11210c260"/>
        <function-ref name="enableEvents" scoped="" ref="0x11210c3e8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x11210c570"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x11210c6f8"/>
        <function-ref name="disableEvents" scoped="" ref="0x11210c880"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x11210ca08"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x11210cb90"/>
        <function-ref name="setControl" scoped="" ref="0x11210cd18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x1121028c8" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x1121028c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x112102c18"/>
        <function-ref name="setEvent" scoped="" ref="0x112102da0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x112100020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1121001a8"/>
        <function-ref name="fired" scoped="" ref="0x112100330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x112104020" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x112104020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x112104370"/>
        <function-ref name="setClockSource" scoped="" ref="0x1121044f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x112104680"/>
        <function-ref name="get" scoped="" ref="0x112104808"/>
        <function-ref name="disableEvents" scoped="" ref="0x112104990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x112104b18"/>
        <function-ref name="getMode" scoped="" ref="0x112104ca0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x112104e28"/>
        <function-ref name="overflow" scoped="" ref="0x112103020"/>
        <function-ref name="setMode" scoped="" ref="0x1121031a8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x112103330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x112107020" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x112107020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b0150"/>
            <typename><typedef-ref name="T32khz" ref="0x1107b04a8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x112105690"/>
        <function-ref name="fired" scoped="" ref="0x1121066f8"/>
        <function-ref name="startAt" scoped="" ref="0x112105088"/>
        <function-ref name="isRunning" scoped="" ref="0x112106b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x112105b18"/>
        <function-ref name="start" scoped="" ref="0x112107d70"/>
        <function-ref name="stop" scoped="" ref="0x112106270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1121087a8" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1121087a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x112108af8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x1121035b8" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x1121035b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x112103908"/>
        <function-ref name="getControl" scoped="" ref="0x112103a90"/>
        <function-ref name="enableEvents" scoped="" ref="0x112103c18"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x112103da0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x112102020"/>
        <function-ref name="disableEvents" scoped="" ref="0x1121021a8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x112102330"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1121024b8"/>
        <function-ref name="setControl" scoped="" ref="0x112102640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x110f75520" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x110f75520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b0150"/>
            <typename><typedef-ref name="T32khz" ref="0x1107b04a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fbc6020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x110f743a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110f74cb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110f74830"/>
        <function-ref name="overflow" scoped="" ref="0x110f73190"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x110f6c060" loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x110f6c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b0150"/>
            <typename><typedef-ref name="T32khz" ref="0x1107b04a8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x110f6cdb0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110fb96f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110fb9270"/>
        <function-ref name="overflow" scoped="" ref="0x110fb9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x110f71e40" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x110f71e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b0150"/>
            <typename><typedef-ref name="T32khz" ref="0x1107b04a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fbc6020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x110f6fbe8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110f6e548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110f6e0c0"/>
        <function-ref name="overflow" scoped="" ref="0x110f6e9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x11211d830" loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x11211d830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b0150"/>
            <typename><typedef-ref name="T32khz" ref="0x1107b04a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fbc6020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x11211a020"/>
        <function-ref name="fired" scoped="" ref="0x11211b020"/>
        <function-ref name="startAt" scoped="" ref="0x11211b930"/>
        <function-ref name="isRunning" scoped="" ref="0x11211b4a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x11211a4a8"/>
        <function-ref name="start" scoped="" ref="0x11211c5e0"/>
        <function-ref name="stop" scoped="" ref="0x11211cab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x112117ce8" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x112117ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b0150"/>
            <typename><typedef-ref name="T32khz" ref="0x1107b04a8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x112114410"/>
        <function-ref name="fired" scoped="" ref="0x1121154a8"/>
        <function-ref name="startAt" scoped="" ref="0x112115db8"/>
        <function-ref name="isRunning" scoped="" ref="0x112115930"/>
        <function-ref name="getAlarm" scoped="" ref="0x112114898"/>
        <function-ref name="start" scoped="" ref="0x112116ac0"/>
        <function-ref name="stop" scoped="" ref="0x112115020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x11211aad0" loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x11211aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b0150"/>
            <typename><typedef-ref name="T32khz" ref="0x1107b04a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fbc6020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x112118860"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1121171f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x112118ce8"/>
        <function-ref name="overflow" scoped="" ref="0x112117680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x110f9b378" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x110f9b378"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110f9b6c8"/>
        <function-ref name="isInput" scoped="" ref="0x110f9b850"/>
        <function-ref name="toggle" scoped="" ref="0x110f9b9d8"/>
        <function-ref name="isOutput" scoped="" ref="0x110f9bb60"/>
        <function-ref name="get" scoped="" ref="0x110f9bce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110f9be70"/>
        <function-ref name="set" scoped="" ref="0x110f9a020"/>
        <function-ref name="clr" scoped="" ref="0x110f9a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x110f9a508" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x110f9a508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110f9a858"/>
        <function-ref name="isInput" scoped="" ref="0x110f9a9e0"/>
        <function-ref name="toggle" scoped="" ref="0x110f9ab68"/>
        <function-ref name="isOutput" scoped="" ref="0x110f9acf0"/>
        <function-ref name="get" scoped="" ref="0x110f9ae78"/>
        <function-ref name="makeOutput" scoped="" ref="0x110f99030"/>
        <function-ref name="set" scoped="" ref="0x110f991b8"/>
        <function-ref name="clr" scoped="" ref="0x110f99340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x110f99698" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x110f99698"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110f999e8"/>
        <function-ref name="isInput" scoped="" ref="0x110f99b70"/>
        <function-ref name="toggle" scoped="" ref="0x110f99cf8"/>
        <function-ref name="isOutput" scoped="" ref="0x110f99e80"/>
        <function-ref name="get" scoped="" ref="0x110f97030"/>
        <function-ref name="makeOutput" scoped="" ref="0x110f971b8"/>
        <function-ref name="set" scoped="" ref="0x110f97340"/>
        <function-ref name="clr" scoped="" ref="0x110f974c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x110f9c1a0" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x110f9c1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110f9c4f0"/>
        <function-ref name="isInput" scoped="" ref="0x110f9c678"/>
        <function-ref name="toggle" scoped="" ref="0x110f9c800"/>
        <function-ref name="isOutput" scoped="" ref="0x110f9c988"/>
        <function-ref name="get" scoped="" ref="0x110f9cb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x110f9cc98"/>
        <function-ref name="set" scoped="" ref="0x110f9ce20"/>
        <function-ref name="clr" scoped="" ref="0x110f9b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x110f96998" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x110f96998"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110f96ce8"/>
        <function-ref name="isInput" scoped="" ref="0x110f96e70"/>
        <function-ref name="toggle" scoped="" ref="0x110f95020"/>
        <function-ref name="isOutput" scoped="" ref="0x110f951a8"/>
        <function-ref name="get" scoped="" ref="0x110f95330"/>
        <function-ref name="makeOutput" scoped="" ref="0x110f954b8"/>
        <function-ref name="set" scoped="" ref="0x110f95640"/>
        <function-ref name="clr" scoped="" ref="0x110f957c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x110f9d020" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x110f9d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110f9d370"/>
        <function-ref name="isInput" scoped="" ref="0x110f9d4f8"/>
        <function-ref name="toggle" scoped="" ref="0x110f9d680"/>
        <function-ref name="isOutput" scoped="" ref="0x110f9d808"/>
        <function-ref name="get" scoped="" ref="0x110f9d990"/>
        <function-ref name="makeOutput" scoped="" ref="0x110f9db18"/>
        <function-ref name="set" scoped="" ref="0x110f9dca0"/>
        <function-ref name="clr" scoped="" ref="0x110f9de28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x110f97810" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x110f97810"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110f97b60"/>
        <function-ref name="isInput" scoped="" ref="0x110f97ce8"/>
        <function-ref name="toggle" scoped="" ref="0x110f97e70"/>
        <function-ref name="isOutput" scoped="" ref="0x110f96020"/>
        <function-ref name="get" scoped="" ref="0x110f961a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110f96330"/>
        <function-ref name="set" scoped="" ref="0x110f964b8"/>
        <function-ref name="clr" scoped="" ref="0x110f96640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x110f93c18" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x110f93c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110fe1020"/>
        <function-ref name="isInput" scoped="" ref="0x110fe11a8"/>
        <function-ref name="setResistor" scoped="" ref="0x110fe1330"/>
        <function-ref name="toggle" scoped="" ref="0x110fe14b8"/>
        <function-ref name="isOutput" scoped="" ref="0x110fe1640"/>
        <function-ref name="getResistor" scoped="" ref="0x110fe17c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110fe1950"/>
        <function-ref name="get" scoped="" ref="0x110fe1ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110fe1c60"/>
        <function-ref name="getRaw" scoped="" ref="0x110fe1de8"/>
        <function-ref name="set" scoped="" ref="0x110fe0020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110fe01a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110fe0330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110fe05b8"/>
        <function-ref name="clr" scoped="" ref="0x110fe0740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x110f94ad0" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x110f94ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110f94e20"/>
        <function-ref name="isInput" scoped="" ref="0x110f93020"/>
        <function-ref name="toggle" scoped="" ref="0x110f931a8"/>
        <function-ref name="isOutput" scoped="" ref="0x110f93330"/>
        <function-ref name="get" scoped="" ref="0x110f934b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110f93640"/>
        <function-ref name="set" scoped="" ref="0x110f937c8"/>
        <function-ref name="clr" scoped="" ref="0x110f93950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x110fdd470" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x110fdd470"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110fdd7c0"/>
        <function-ref name="isInput" scoped="" ref="0x110fdd948"/>
        <function-ref name="setResistor" scoped="" ref="0x110fddad0"/>
        <function-ref name="toggle" scoped="" ref="0x110fddc58"/>
        <function-ref name="isOutput" scoped="" ref="0x110fddde0"/>
        <function-ref name="getResistor" scoped="" ref="0x110fdc020"/>
        <function-ref name="makeOutput" scoped="" ref="0x110fdc1a8"/>
        <function-ref name="get" scoped="" ref="0x110fdc330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110fdc4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x110fdc640"/>
        <function-ref name="set" scoped="" ref="0x110fdc7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110fdc950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110fdcad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110fdcd60"/>
        <function-ref name="clr" scoped="" ref="0x110fdb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x110fde280" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x110fde280"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110fde5d0"/>
        <function-ref name="isInput" scoped="" ref="0x110fde758"/>
        <function-ref name="toggle" scoped="" ref="0x110fde8e0"/>
        <function-ref name="isOutput" scoped="" ref="0x110fdea68"/>
        <function-ref name="get" scoped="" ref="0x110fdebf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x110fded78"/>
        <function-ref name="set" scoped="" ref="0x110fdd020"/>
        <function-ref name="clr" scoped="" ref="0x110fdd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x110fd9c18" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x110fd9c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110fd8020"/>
        <function-ref name="isInput" scoped="" ref="0x110fd81a8"/>
        <function-ref name="setResistor" scoped="" ref="0x110fd8330"/>
        <function-ref name="toggle" scoped="" ref="0x110fd84b8"/>
        <function-ref name="isOutput" scoped="" ref="0x110fd8640"/>
        <function-ref name="getResistor" scoped="" ref="0x110fd87c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110fd8950"/>
        <function-ref name="get" scoped="" ref="0x110fd8ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110fd8c60"/>
        <function-ref name="getRaw" scoped="" ref="0x110fd8de8"/>
        <function-ref name="set" scoped="" ref="0x110fd7020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110fd71a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110fd7330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110fd75b8"/>
        <function-ref name="clr" scoped="" ref="0x110fd7740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x110fdab18" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x110fdab18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110fdae68"/>
        <function-ref name="isInput" scoped="" ref="0x110fd9020"/>
        <function-ref name="toggle" scoped="" ref="0x110fd91a8"/>
        <function-ref name="isOutput" scoped="" ref="0x110fd9330"/>
        <function-ref name="get" scoped="" ref="0x110fd94b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110fd9640"/>
        <function-ref name="set" scoped="" ref="0x110fd97c8"/>
        <function-ref name="clr" scoped="" ref="0x110fd9950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x110fd4470" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x110fd4470"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110fd47c0"/>
        <function-ref name="isInput" scoped="" ref="0x110fd4948"/>
        <function-ref name="setResistor" scoped="" ref="0x110fd4ad0"/>
        <function-ref name="toggle" scoped="" ref="0x110fd4c58"/>
        <function-ref name="isOutput" scoped="" ref="0x110fd4de0"/>
        <function-ref name="getResistor" scoped="" ref="0x110fd2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x110fd21a8"/>
        <function-ref name="get" scoped="" ref="0x110fd2330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110fd24b8"/>
        <function-ref name="getRaw" scoped="" ref="0x110fd2640"/>
        <function-ref name="set" scoped="" ref="0x110fd27c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110fd2950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110fd2ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110fd2d60"/>
        <function-ref name="clr" scoped="" ref="0x110fd1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x110fd5280" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x110fd5280"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110fd55d0"/>
        <function-ref name="isInput" scoped="" ref="0x110fd5758"/>
        <function-ref name="toggle" scoped="" ref="0x110fd58e0"/>
        <function-ref name="isOutput" scoped="" ref="0x110fd5a68"/>
        <function-ref name="get" scoped="" ref="0x110fd5bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x110fd5d78"/>
        <function-ref name="set" scoped="" ref="0x110fd4020"/>
        <function-ref name="clr" scoped="" ref="0x110fd41a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x110fcfc18" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x110fcfc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110fce020"/>
        <function-ref name="isInput" scoped="" ref="0x110fce1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x110fce330"/>
        <function-ref name="toggle" scoped="" ref="0x110fce4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x110fce640"/>
        <function-ref name="getResistor" scoped="" ref="0x110fce7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110fce950"/>
        <function-ref name="get" scoped="" ref="0x110fcead8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110fcec60"/>
        <function-ref name="getRaw" scoped="" ref="0x110fcede8"/>
        <function-ref name="set" scoped="" ref="0x110fcd020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110fcd1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110fcd330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110fcd5b8"/>
        <function-ref name="clr" scoped="" ref="0x110fcd740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x110fd0b18" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x110fd0b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110fd0e68"/>
        <function-ref name="isInput" scoped="" ref="0x110fcf020"/>
        <function-ref name="toggle" scoped="" ref="0x110fcf1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x110fcf330"/>
        <function-ref name="get" scoped="" ref="0x110fcf4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110fcf640"/>
        <function-ref name="set" scoped="" ref="0x110fcf7c8"/>
        <function-ref name="clr" scoped="" ref="0x110fcf950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x110fca470" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x110fca470"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110fca7c0"/>
        <function-ref name="isInput" scoped="" ref="0x110fca948"/>
        <function-ref name="setResistor" scoped="" ref="0x110fcaad0"/>
        <function-ref name="toggle" scoped="" ref="0x110fcac58"/>
        <function-ref name="isOutput" scoped="" ref="0x110fcade0"/>
        <function-ref name="getResistor" scoped="" ref="0x110fc9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x110fc91a8"/>
        <function-ref name="get" scoped="" ref="0x110fc9330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110fc94b8"/>
        <function-ref name="getRaw" scoped="" ref="0x110fc9640"/>
        <function-ref name="set" scoped="" ref="0x110fc97c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110fc9950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110fc9ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110fc9d60"/>
        <function-ref name="clr" scoped="" ref="0x110fc8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x110fcb280" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x110fcb280"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110fcb5d0"/>
        <function-ref name="isInput" scoped="" ref="0x110fcb758"/>
        <function-ref name="toggle" scoped="" ref="0x110fcb8e0"/>
        <function-ref name="isOutput" scoped="" ref="0x110fcba68"/>
        <function-ref name="get" scoped="" ref="0x110fcbbf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x110fcbd78"/>
        <function-ref name="set" scoped="" ref="0x110fca020"/>
        <function-ref name="clr" scoped="" ref="0x110fca1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x110fc6c18" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x110fc6c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110fc5020"/>
        <function-ref name="isInput" scoped="" ref="0x110fc51a8"/>
        <function-ref name="setResistor" scoped="" ref="0x110fc5330"/>
        <function-ref name="toggle" scoped="" ref="0x110fc54b8"/>
        <function-ref name="isOutput" scoped="" ref="0x110fc5640"/>
        <function-ref name="getResistor" scoped="" ref="0x110fc57c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110fc5950"/>
        <function-ref name="get" scoped="" ref="0x110fc5ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110fc5c60"/>
        <function-ref name="getRaw" scoped="" ref="0x110fc5de8"/>
        <function-ref name="set" scoped="" ref="0x110fc4020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110fc41a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110fc4330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110fc45b8"/>
        <function-ref name="clr" scoped="" ref="0x110fc4740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x110fc7b18" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x110fc7b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110fc7e68"/>
        <function-ref name="isInput" scoped="" ref="0x110fc6020"/>
        <function-ref name="toggle" scoped="" ref="0x110fc61a8"/>
        <function-ref name="isOutput" scoped="" ref="0x110fc6330"/>
        <function-ref name="get" scoped="" ref="0x110fc64b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x110fc6640"/>
        <function-ref name="set" scoped="" ref="0x110fc67c8"/>
        <function-ref name="clr" scoped="" ref="0x110fc6950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x111000518" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x111000518"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x111000868"/>
        <function-ref name="disable" scoped="" ref="0x1110009f0"/>
        <function-ref name="captured" scoped="" ref="0x111000b78"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x111000d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x111004140" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x111004140"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x111004490"/>
        <function-ref name="disable" scoped="" ref="0x111004618"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x1110047a0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x111004928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x111004d08" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x111004d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1110030a0"/>
        <function-ref name="disable" scoped="" ref="0x111003228"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x1110033b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x111003538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x110feb020" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x110feb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x110feb370"/>
        <function-ref name="setSynchronous" scoped="" ref="0x110feb4f8"/>
        <function-ref name="captured" scoped="" ref="0x110feb680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110feb808"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110feb990"/>
        <function-ref name="setEdge" scoped="" ref="0x110febb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x110ffd100" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x110ffd100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x110ffd450"/>
        <function-ref name="disable" scoped="" ref="0x110ffd5d8"/>
        <function-ref name="captured" scoped="" ref="0x110ffd760"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x110ffd8e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x110ffdb70" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x110ffdb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x110fec020"/>
        <function-ref name="getControl" scoped="" ref="0x110fec1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x110fec330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x110fec4b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x110fec640"/>
        <function-ref name="disableEvents" scoped="" ref="0x110fec7c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x110fec950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x110fecad8"/>
        <function-ref name="setControl" scoped="" ref="0x110fecc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x110febde0" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x110febde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110fe9170"/>
        <function-ref name="isInput" scoped="" ref="0x110fe92f8"/>
        <function-ref name="setResistor" scoped="" ref="0x110fe9480"/>
        <function-ref name="toggle" scoped="" ref="0x110fe9608"/>
        <function-ref name="isOutput" scoped="" ref="0x110fe9790"/>
        <function-ref name="getResistor" scoped="" ref="0x110fe9918"/>
        <function-ref name="makeOutput" scoped="" ref="0x110fe9aa0"/>
        <function-ref name="get" scoped="" ref="0x110fe9c28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110fe9db0"/>
        <function-ref name="getRaw" scoped="" ref="0x110fe8020"/>
        <function-ref name="set" scoped="" ref="0x110fe81a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110fe8330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110fe84b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110fe8740"/>
        <function-ref name="clr" scoped="" ref="0x110fe88c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x11102b878" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x11102b878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x11102bbc8"/>
        <function-ref name="fired" scoped="" ref="0x11102bd50"/>
        <function-ref name="disable" scoped="" ref="0x11102a020"/>
        <function-ref name="edge" scoped="" ref="0x11102a1a8"/>
        <function-ref name="enable" scoped="" ref="0x11102a330"/>
        <function-ref name="getValue" scoped="" ref="0x11102a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x111021878" loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x111021878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x111021bc8"/>
        <function-ref name="fired" scoped="" ref="0x111021d50"/>
        <function-ref name="disable" scoped="" ref="0x111020020"/>
        <function-ref name="edge" scoped="" ref="0x1110201a8"/>
        <function-ref name="enable" scoped="" ref="0x111020330"/>
        <function-ref name="getValue" scoped="" ref="0x1110204b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x111028878" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x111028878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x111028bc8"/>
        <function-ref name="fired" scoped="" ref="0x111028d50"/>
        <function-ref name="disable" scoped="" ref="0x111027020"/>
        <function-ref name="edge" scoped="" ref="0x1110271a8"/>
        <function-ref name="enable" scoped="" ref="0x111027330"/>
        <function-ref name="getValue" scoped="" ref="0x1110274b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x111026878" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x111026878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x111026bc8"/>
        <function-ref name="fired" scoped="" ref="0x111026d50"/>
        <function-ref name="disable" scoped="" ref="0x111025020"/>
        <function-ref name="edge" scoped="" ref="0x1110251a8"/>
        <function-ref name="enable" scoped="" ref="0x111025330"/>
        <function-ref name="getValue" scoped="" ref="0x1110254b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x11102d878" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x11102d878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x11102dbc8"/>
        <function-ref name="fired" scoped="" ref="0x11102dd50"/>
        <function-ref name="disable" scoped="" ref="0x11102c020"/>
        <function-ref name="edge" scoped="" ref="0x11102c1a8"/>
        <function-ref name="enable" scoped="" ref="0x11102c330"/>
        <function-ref name="getValue" scoped="" ref="0x11102c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x111023878" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x111023878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x111023cc8"/>
        <function-ref name="fired" scoped="" ref="0x111023e50"/>
        <function-ref name="disable" scoped="" ref="0x111022020"/>
        <function-ref name="edge" scoped="" ref="0x1110221a8"/>
        <function-ref name="enable" scoped="" ref="0x111022330"/>
        <function-ref name="getValue" scoped="" ref="0x1110224b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x11102a878" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x11102a878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x11102abc8"/>
        <function-ref name="fired" scoped="" ref="0x11102ad50"/>
        <function-ref name="disable" scoped="" ref="0x111029020"/>
        <function-ref name="edge" scoped="" ref="0x1110291a8"/>
        <function-ref name="enable" scoped="" ref="0x111029330"/>
        <function-ref name="getValue" scoped="" ref="0x1110294b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x111020878" loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x111020878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x111020bc8"/>
        <function-ref name="fired" scoped="" ref="0x111020d50"/>
        <function-ref name="disable" scoped="" ref="0x11101f020"/>
        <function-ref name="edge" scoped="" ref="0x11101f1a8"/>
        <function-ref name="enable" scoped="" ref="0x11101f330"/>
        <function-ref name="getValue" scoped="" ref="0x11101f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x11102e8e0" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x11102e8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x11102ec30"/>
        <function-ref name="fired" scoped="" ref="0x11102edb8"/>
        <function-ref name="disable" scoped="" ref="0x111032020"/>
        <function-ref name="edge" scoped="" ref="0x1110321a8"/>
        <function-ref name="enable" scoped="" ref="0x111032330"/>
        <function-ref name="getValue" scoped="" ref="0x1110324b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x111025878" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x111025878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x111025bc8"/>
        <function-ref name="fired" scoped="" ref="0x111025d50"/>
        <function-ref name="disable" scoped="" ref="0x111024020"/>
        <function-ref name="edge" scoped="" ref="0x1110241a8"/>
        <function-ref name="enable" scoped="" ref="0x111024330"/>
        <function-ref name="getValue" scoped="" ref="0x1110244b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x11102c878" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x11102c878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x11102cbc8"/>
        <function-ref name="fired" scoped="" ref="0x11102cd50"/>
        <function-ref name="disable" scoped="" ref="0x11102b020"/>
        <function-ref name="edge" scoped="" ref="0x11102b1a8"/>
        <function-ref name="enable" scoped="" ref="0x11102b330"/>
        <function-ref name="getValue" scoped="" ref="0x11102b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x111022878" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x111022878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x111022bc8"/>
        <function-ref name="fired" scoped="" ref="0x111022d50"/>
        <function-ref name="disable" scoped="" ref="0x111021020"/>
        <function-ref name="edge" scoped="" ref="0x1110211a8"/>
        <function-ref name="enable" scoped="" ref="0x111021330"/>
        <function-ref name="getValue" scoped="" ref="0x1110214b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x111029878" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x111029878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x111029bc8"/>
        <function-ref name="fired" scoped="" ref="0x111029d50"/>
        <function-ref name="disable" scoped="" ref="0x111028020"/>
        <function-ref name="edge" scoped="" ref="0x1110281a8"/>
        <function-ref name="enable" scoped="" ref="0x111028330"/>
        <function-ref name="getValue" scoped="" ref="0x1110284b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x111027878" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x111027878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x111027bc8"/>
        <function-ref name="fired" scoped="" ref="0x111027d50"/>
        <function-ref name="disable" scoped="" ref="0x111026020"/>
        <function-ref name="edge" scoped="" ref="0x1110261a8"/>
        <function-ref name="enable" scoped="" ref="0x111026330"/>
        <function-ref name="getValue" scoped="" ref="0x1110264b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x111032878" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x111032878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x111032bc8"/>
        <function-ref name="fired" scoped="" ref="0x111032d50"/>
        <function-ref name="disable" scoped="" ref="0x11102d020"/>
        <function-ref name="edge" scoped="" ref="0x11102d1a8"/>
        <function-ref name="enable" scoped="" ref="0x11102d330"/>
        <function-ref name="getValue" scoped="" ref="0x11102d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x111024878" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x111024878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x111024bc8"/>
        <function-ref name="fired" scoped="" ref="0x111024d50"/>
        <function-ref name="disable" scoped="" ref="0x111023020"/>
        <function-ref name="edge" scoped="" ref="0x1110231a8"/>
        <function-ref name="enable" scoped="" ref="0x111023330"/>
        <function-ref name="getValue" scoped="" ref="0x1110234b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x111018568" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x111018568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1110188b8"/>
        <function-ref name="fired" scoped="" ref="0x111018a40"/>
        <function-ref name="disable" scoped="" ref="0x111018bc8"/>
        <function-ref name="edge" scoped="" ref="0x111018d50"/>
        <function-ref name="enable" scoped="" ref="0x111017020"/>
        <function-ref name="getValue" scoped="" ref="0x1110171a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x11100d568" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x11100d568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x11100d8b8"/>
        <function-ref name="fired" scoped="" ref="0x11100da40"/>
        <function-ref name="disable" scoped="" ref="0x11100dbc8"/>
        <function-ref name="edge" scoped="" ref="0x11100dd50"/>
        <function-ref name="enable" scoped="" ref="0x11100c020"/>
        <function-ref name="getValue" scoped="" ref="0x11100c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x111015568" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x111015568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1110158b8"/>
        <function-ref name="fired" scoped="" ref="0x111015a40"/>
        <function-ref name="disable" scoped="" ref="0x111015bc8"/>
        <function-ref name="edge" scoped="" ref="0x111015d50"/>
        <function-ref name="enable" scoped="" ref="0x111013020"/>
        <function-ref name="getValue" scoped="" ref="0x1110131a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x111012568" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x111012568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1110128b8"/>
        <function-ref name="fired" scoped="" ref="0x111012a40"/>
        <function-ref name="disable" scoped="" ref="0x111012bc8"/>
        <function-ref name="edge" scoped="" ref="0x111012d50"/>
        <function-ref name="enable" scoped="" ref="0x111011020"/>
        <function-ref name="getValue" scoped="" ref="0x1110111a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x11101a568" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x11101a568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x11101a8b8"/>
        <function-ref name="fired" scoped="" ref="0x11101aa40"/>
        <function-ref name="disable" scoped="" ref="0x11101abc8"/>
        <function-ref name="edge" scoped="" ref="0x11101ad50"/>
        <function-ref name="enable" scoped="" ref="0x111019020"/>
        <function-ref name="getValue" scoped="" ref="0x1110191a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x11100f568" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x11100f568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x11100f9b8"/>
        <function-ref name="fired" scoped="" ref="0x11100fb40"/>
        <function-ref name="disable" scoped="" ref="0x11100fcc8"/>
        <function-ref name="edge" scoped="" ref="0x11100fe50"/>
        <function-ref name="enable" scoped="" ref="0x11100e020"/>
        <function-ref name="getValue" scoped="" ref="0x11100e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x111017568" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x111017568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1110178b8"/>
        <function-ref name="fired" scoped="" ref="0x111017a40"/>
        <function-ref name="disable" scoped="" ref="0x111017bc8"/>
        <function-ref name="edge" scoped="" ref="0x111017d50"/>
        <function-ref name="enable" scoped="" ref="0x111016020"/>
        <function-ref name="getValue" scoped="" ref="0x1110161a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x11100c568" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x11100c568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x11100c8b8"/>
        <function-ref name="fired" scoped="" ref="0x11100ca40"/>
        <function-ref name="disable" scoped="" ref="0x11100cbc8"/>
        <function-ref name="edge" scoped="" ref="0x11100cd50"/>
        <function-ref name="enable" scoped="" ref="0x11105c020"/>
        <function-ref name="getValue" scoped="" ref="0x11105c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x11101c5c8" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x11101c5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x11101c918"/>
        <function-ref name="fired" scoped="" ref="0x11101caa0"/>
        <function-ref name="disable" scoped="" ref="0x11101cc28"/>
        <function-ref name="edge" scoped="" ref="0x11101cdb0"/>
        <function-ref name="enable" scoped="" ref="0x11101b020"/>
        <function-ref name="getValue" scoped="" ref="0x11101b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x111011568" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x111011568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1110118b8"/>
        <function-ref name="fired" scoped="" ref="0x111011a40"/>
        <function-ref name="disable" scoped="" ref="0x111011bc8"/>
        <function-ref name="edge" scoped="" ref="0x111011d50"/>
        <function-ref name="enable" scoped="" ref="0x111010020"/>
        <function-ref name="getValue" scoped="" ref="0x1110101a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x111019568" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x111019568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1110198b8"/>
        <function-ref name="fired" scoped="" ref="0x111019a40"/>
        <function-ref name="disable" scoped="" ref="0x111019bc8"/>
        <function-ref name="edge" scoped="" ref="0x111019d50"/>
        <function-ref name="enable" scoped="" ref="0x111018020"/>
        <function-ref name="getValue" scoped="" ref="0x1110181a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x11100e568" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x11100e568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x11100e8b8"/>
        <function-ref name="fired" scoped="" ref="0x11100ea40"/>
        <function-ref name="disable" scoped="" ref="0x11100ebc8"/>
        <function-ref name="edge" scoped="" ref="0x11100ed50"/>
        <function-ref name="enable" scoped="" ref="0x11100d020"/>
        <function-ref name="getValue" scoped="" ref="0x11100d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x111016568" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x111016568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1110168b8"/>
        <function-ref name="fired" scoped="" ref="0x111016a40"/>
        <function-ref name="disable" scoped="" ref="0x111016bc8"/>
        <function-ref name="edge" scoped="" ref="0x111016d50"/>
        <function-ref name="enable" scoped="" ref="0x111015020"/>
        <function-ref name="getValue" scoped="" ref="0x1110151a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x111013568" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x111013568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1110138b8"/>
        <function-ref name="fired" scoped="" ref="0x111013a40"/>
        <function-ref name="disable" scoped="" ref="0x111013bc8"/>
        <function-ref name="edge" scoped="" ref="0x111013d50"/>
        <function-ref name="enable" scoped="" ref="0x111012020"/>
        <function-ref name="getValue" scoped="" ref="0x1110121a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x11101b568" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x11101b568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x11101b8b8"/>
        <function-ref name="fired" scoped="" ref="0x11101ba40"/>
        <function-ref name="disable" scoped="" ref="0x11101bbc8"/>
        <function-ref name="edge" scoped="" ref="0x11101bd50"/>
        <function-ref name="enable" scoped="" ref="0x11101a020"/>
        <function-ref name="getValue" scoped="" ref="0x11101a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x111010568" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x111010568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1110108b8"/>
        <function-ref name="fired" scoped="" ref="0x111010a40"/>
        <function-ref name="disable" scoped="" ref="0x111010bc8"/>
        <function-ref name="edge" scoped="" ref="0x111010d50"/>
        <function-ref name="enable" scoped="" ref="0x11100f020"/>
        <function-ref name="getValue" scoped="" ref="0x11100f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x1110dd780" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x1110dd780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1110ddad0"/>
        <function-ref name="fired" scoped="" ref="0x1110ddc58"/>
        <function-ref name="disable" scoped="" ref="0x1110ddde0"/>
        <function-ref name="edge" scoped="" ref="0x111123020"/>
        <function-ref name="enable" scoped="" ref="0x1111231a8"/>
        <function-ref name="getValue" scoped="" ref="0x111123330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x1110deb58" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x1110deb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1110dd020"/>
        <function-ref name="disable" scoped="" ref="0x1110dd1a8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x1110dd330"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x1110dd4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x1111215f8" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x1111215f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x111121948"/>
        <function-ref name="fired" scoped="" ref="0x111121ad0"/>
        <function-ref name="disable" scoped="" ref="0x111121c58"/>
        <function-ref name="edge" scoped="" ref="0x111121de0"/>
        <function-ref name="enable" scoped="" ref="0x111120020"/>
        <function-ref name="getValue" scoped="" ref="0x1111201a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x111122a78" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x111122a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x111122dc8"/>
        <function-ref name="disable" scoped="" ref="0x111121020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x1111211a8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x111121330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x11145c470" loc="69:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x11145c470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11145c9c0"/>
        <function-ref name="write" scoped="" ref="0x11145cb48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x1114679b8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x1114679b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111467d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x11145f470" loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x11145f470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11145f7c0"/>
        <function-ref name="write" scoped="" ref="0x11145f948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x11145bd98" loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x11145bd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111459170"/>
        <function-ref name="write" scoped="" ref="0x1114592f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x111452470" loc="86:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x111452470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114527c0"/>
        <function-ref name="write" scoped="" ref="0x111452948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x1114595c0" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x1114595c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111459910"/>
        <function-ref name="write" scoped="" ref="0x111459a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x1114477c0" loc="108:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x1114477c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111447b10"/>
        <function-ref name="write" scoped="" ref="0x111447c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x1114497c0" loc="104:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x1114497c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111449b10"/>
        <function-ref name="write" scoped="" ref="0x111449c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x111465c50" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x111465c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111464020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x11144fc10" loc="93:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x11144fc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11144e020"/>
        <function-ref name="write" scoped="" ref="0x11144e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x11144a7c0" loc="102:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x11144a7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11144ab10"/>
        <function-ref name="write" scoped="" ref="0x11144ac98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x11145e470" loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x11145e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11145e7c0"/>
        <function-ref name="write" scoped="" ref="0x11145e948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x11145d470" loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x11145d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11145d7c0"/>
        <function-ref name="write" scoped="" ref="0x11145d948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x111455c10" loc="83:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x111455c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111454020"/>
        <function-ref name="write" scoped="" ref="0x1114541a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x111456470" loc="79:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x111456470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114567c0"/>
        <function-ref name="write" scoped="" ref="0x111456948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x111459d60" loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x111459d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114580d8"/>
        <function-ref name="write" scoped="" ref="0x111458260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x111468430" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x111468430"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x111468780"/>
        <function-ref name="abortRelease" scoped="" ref="0x111468908"/>
        <function-ref name="attemptRelease" scoped="" ref="0x111468a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x111463638" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x111463638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111463988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x111463c50" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x111463c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1114620d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x11144d060" loc="95:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x11144d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11144d3b0"/>
        <function-ref name="write" scoped="" ref="0x11144d538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x1114623a0" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x1114623a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1114626f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x111449020" loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x111449020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111449370"/>
        <function-ref name="write" scoped="" ref="0x1114494f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x111464900" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x111464900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111464c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x11144f470" loc="92:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x11144f470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11144f7c0"/>
        <function-ref name="write" scoped="" ref="0x11144f948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x11145ec10" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x11145ec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11145d020"/>
        <function-ref name="write" scoped="" ref="0x11145d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x11145fc10" loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x11145fc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11145e020"/>
        <function-ref name="write" scoped="" ref="0x11145e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x1114673a0" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x1114673a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1114676f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x111450470" loc="90:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x111450470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114507c0"/>
        <function-ref name="write" scoped="" ref="0x111450948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x111452c10" loc="87:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x111452c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111451020"/>
        <function-ref name="write" scoped="" ref="0x1114511a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x111450c10" loc="91:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x111450c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11144f020"/>
        <function-ref name="write" scoped="" ref="0x11144f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x111447020" loc="107:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x111447020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111447370"/>
        <function-ref name="write" scoped="" ref="0x1114474f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x111448020" loc="105:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x111448020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111448370"/>
        <function-ref name="write" scoped="" ref="0x1114484f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x111456c10" loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x111456c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111455020"/>
        <function-ref name="write" scoped="" ref="0x1114551a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x111451470" loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x111451470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114517c0"/>
        <function-ref name="write" scoped="" ref="0x111451948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x11144a020" loc="101:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x11144a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11144a370"/>
        <function-ref name="write" scoped="" ref="0x11144a4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x111458cc8" loc="76:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x111458cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114570a0"/>
        <function-ref name="write" scoped="" ref="0x111457228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x111446020" loc="111:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x111446020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x111446370"/>
        <function-ref name="writeDone" scoped="" ref="0x1114464f8"/>
        <function-ref name="write" scoped="" ref="0x111446680"/>
        <function-ref name="beginRead" scoped="" ref="0x111446808"/>
        <function-ref name="readDone" scoped="" ref="0x111446990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x111468d58" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x111468d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1114670d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x111461c50" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x111461c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11145f020"/>
        <function-ref name="write" scoped="" ref="0x11145f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x11145dc10" loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x11145dc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11145c020"/>
        <function-ref name="write" scoped="" ref="0x11145c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x111454470" loc="84:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x111454470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114547c0"/>
        <function-ref name="write" scoped="" ref="0x111454948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x111458528" loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x111458528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111458878"/>
        <function-ref name="write" scoped="" ref="0x111458a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x111454c10" loc="85:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x111454c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111452020"/>
        <function-ref name="write" scoped="" ref="0x1114521a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x11145ce10" loc="70:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x11145ce10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11145b1a8"/>
        <function-ref name="write" scoped="" ref="0x11145b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x111465020" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x111465020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111465370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x11145b5f8" loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x11145b5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11145b948"/>
        <function-ref name="write" scoped="" ref="0x11145bad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1114067d0" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x1114067d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x111406b20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x111406ca8"/>
        <function-ref name="request" scoped="" ref="0x111406e30"/>
        <function-ref name="granted" scoped="" ref="0x111468020"/>
        <function-ref name="isOwner" scoped="" ref="0x1114681a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x1114629b8" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x1114629b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111462d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x111461638" loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x111461638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111461988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x11144b7c0" loc="100:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x11144b7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11144bb10"/>
        <function-ref name="write" scoped="" ref="0x11144bc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x11144b020" loc="99:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x11144b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11144b370"/>
        <function-ref name="write" scoped="" ref="0x11144b4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x111463020" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x111463020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111463370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x11144d800" loc="96:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x11144d800"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11144db50"/>
        <function-ref name="write" scoped="" ref="0x11144dcd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x1114487c0" loc="106:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x1114487c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111448b10"/>
        <function-ref name="write" scoped="" ref="0x111448c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x111455470" loc="81:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x111455470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114557c0"/>
        <function-ref name="write" scoped="" ref="0x111455948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x111451c10" loc="89:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x111451c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111450020"/>
        <function-ref name="write" scoped="" ref="0x1114501a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x111465638" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x111465638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111465988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x1114642e8" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x1114642e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111464638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x1114574f0" loc="77:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x1114574f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111457840"/>
        <function-ref name="write" scoped="" ref="0x1114579c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x111461020" loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x111461020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111461370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x111457c90" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x111457c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111456020"/>
        <function-ref name="write" scoped="" ref="0x1114561a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x11144e470" loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x11144e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11144ebc0"/>
        <function-ref name="write" scoped="" ref="0x11144ed48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x111446c58" loc="112:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x111446c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x111444020"/>
        <function-ref name="writeDone" scoped="" ref="0x1114441a8"/>
        <function-ref name="write" scoped="" ref="0x111444330"/>
        <function-ref name="beginRead" scoped="" ref="0x1114444b8"/>
        <function-ref name="readDone" scoped="" ref="0x111444640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x111138c00" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x111138c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x111137020"/>
        <function-ref name="writeDone" scoped="" ref="0x1111371a8"/>
        <function-ref name="write" scoped="" ref="0x111137330"/>
        <function-ref name="beginRead" scoped="" ref="0x1111374b8"/>
        <function-ref name="readDone" scoped="" ref="0x111137640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x111139cb0" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x111139cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x1111380a0"/>
        <function-ref name="abortRelease" scoped="" ref="0x111138228"/>
        <function-ref name="attemptRelease" scoped="" ref="0x1111383b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x111135020" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x111135020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111135370"/>
        <function-ref name="write" scoped="" ref="0x1111354f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x111135d60" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x111135d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1111340d8"/>
        <function-ref name="write" scoped="" ref="0x111134260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x111139020" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x111139020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x111139370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1111394f8"/>
        <function-ref name="request" scoped="" ref="0x111139680"/>
        <function-ref name="granted" scoped="" ref="0x111139808"/>
        <function-ref name="isOwner" scoped="" ref="0x111139990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x111134ad8" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x111134ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111134e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x11117d020" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x11117d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x11117d370"/>
        <function-ref name="sendDone" scoped="" ref="0x11117d4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x11112fe50" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x11112fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x11112d1e8"/>
        <function-ref name="writeDone" scoped="" ref="0x11112d370"/>
        <function-ref name="write" scoped="" ref="0x11112d4f8"/>
        <function-ref name="beginRead" scoped="" ref="0x11112d680"/>
        <function-ref name="readDone" scoped="" ref="0x11112d808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x111133e00" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x111133e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x1111301a8"/>
        <function-ref name="abortRelease" scoped="" ref="0x111130330"/>
        <function-ref name="attemptRelease" scoped="" ref="0x1111304b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x11117fd20" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x11117fd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x11117e0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x11117d838" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x11117d838"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x11117db88"/>
        <function-ref name="toIdle" scoped="" ref="0x11117dd10"/>
        <function-ref name="isState" scoped="" ref="0x11117b020"/>
        <function-ref name="isIdle" scoped="" ref="0x11117b1a8"/>
        <function-ref name="requestState" scoped="" ref="0x11117b330"/>
        <function-ref name="forceState" scoped="" ref="0x11117b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x1111801e8" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x1111801e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x111180538"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1111806c0"/>
        <function-ref name="request" scoped="" ref="0x111180848"/>
        <function-ref name="granted" scoped="" ref="0x1111809d0"/>
        <function-ref name="isOwner" scoped="" ref="0x111180b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x111182040" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x111182040"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111182390"/>
        <function-ref name="write" scoped="" ref="0x111182518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x111182d40" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x111182d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1111810d8"/>
        <function-ref name="write" scoped="" ref="0x111181260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x11117b730" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x11117b730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x11117ba80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x11117bc08"/>
        <function-ref name="led1On" scoped="" ref="0x11117bd90"/>
        <function-ref name="led1Toggle" scoped="" ref="0x111175020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x1111751a8"/>
        <function-ref name="get" scoped="" ref="0x111175330"/>
        <function-ref name="led1Off" scoped="" ref="0x1111754b8"/>
        <function-ref name="led2Off" scoped="" ref="0x111175ad8"/>
        <function-ref name="set" scoped="" ref="0x111175640"/>
        <function-ref name="led0On" scoped="" ref="0x1111757c8"/>
        <function-ref name="led2On" scoped="" ref="0x111175950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x111130c48" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x111130c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x11112f020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x11112f1a8"/>
        <function-ref name="request" scoped="" ref="0x11112f330"/>
        <function-ref name="granted" scoped="" ref="0x11112f4b8"/>
        <function-ref name="isOwner" scoped="" ref="0x11112f640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x1111705d0" loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x1111705d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x111170920"/>
        <function-ref name="runTask" scoped="" ref="0x111170aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x111181a98" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x111181a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111181de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x1111c6100" loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x1111c6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x1111c6450"/>
        <function-ref name="toIdle" scoped="" ref="0x1111c65d8"/>
        <function-ref name="isState" scoped="" ref="0x1111c6760"/>
        <function-ref name="isIdle" scoped="" ref="0x1111c68e8"/>
        <function-ref name="requestState" scoped="" ref="0x1111c6a70"/>
        <function-ref name="forceState" scoped="" ref="0x1111c6bf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x1111c4868" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x1111c4868"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x1111c4bb8"/>
        <function-ref name="toIdle" scoped="" ref="0x1111c4d40"/>
        <function-ref name="isState" scoped="" ref="0x1111c1020"/>
        <function-ref name="isIdle" scoped="" ref="0x1111c11a8"/>
        <function-ref name="requestState" scoped="" ref="0x1111c1330"/>
        <function-ref name="forceState" scoped="" ref="0x1111c14b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1111bc5d8" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1111bc5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1111bc928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x1111bb1c8" loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x1111bb1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x1111bb518"/>
        <function-ref name="toIdle" scoped="" ref="0x1111bb6a0"/>
        <function-ref name="isState" scoped="" ref="0x1111bb828"/>
        <function-ref name="isIdle" scoped="" ref="0x1111bb9b0"/>
        <function-ref name="requestState" scoped="" ref="0x1111bbb38"/>
        <function-ref name="forceState" scoped="" ref="0x1111bbcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x11142a020" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x11142a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x11142a370"/>
        <function-ref name="sendDone" scoped="" ref="0x11142a4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x1111fb948" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x1111fb948"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x1111fbc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1111fccf0" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x1111fccf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1111fb0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1111fb228"/>
        <function-ref name="request" scoped="" ref="0x1111fb3b0"/>
        <function-ref name="granted" scoped="" ref="0x1111fb538"/>
        <function-ref name="isOwner" scoped="" ref="0x1111fb6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x112200430" loc="82:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x112200430"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x112200780"/>
        <function-ref name="immediateRequested" scoped="" ref="0x112200908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x1121ffd18" loc="87:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x1121ffd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1121fe0a0"/>
        <function-ref name="sendDone" scoped="" ref="0x1121fe228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x1121fe4b0" loc="89:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x1121fe4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x1121fe800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x112200b90" loc="83:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x112200b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x1121ff020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1122017d0" loc="81:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x1122017d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x112201b20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x112201ca8"/>
        <function-ref name="request" scoped="" ref="0x112201e30"/>
        <function-ref name="granted" scoped="" ref="0x112200020"/>
        <function-ref name="isOwner" scoped="" ref="0x1122001a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x1121ff2a8" loc="85:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x1121ff2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x1121ff5f8"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x1121ff780"/>
        <function-ref name="splitRead" scoped="" ref="0x1121ff908"/>
        <function-ref name="write" scoped="" ref="0x1121ffa90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x1111e96c0" loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x1111e96c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x1111e9a10"/>
        <function-ref name="configure" scoped="" ref="0x1111e9b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x1111e64d0" loc="77:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x1111e64d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1111e6820"/>
        <function-ref name="sendDone" scoped="" ref="0x1111e69a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x1111e4498" loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x1111e4498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x1111e47e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x1111e9e68" loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x1111e9e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x1111e81e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x1111e5270" loc="79:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x1111e5270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1111e55c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1111e5748"/>
        <function-ref name="request" scoped="" ref="0x1111e58d0"/>
        <function-ref name="granted" scoped="" ref="0x1111e5a58"/>
        <function-ref name="isOwner" scoped="" ref="0x1111e5be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1111ea4e8" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x1111ea4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1111ea838"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1111ea9c0"/>
        <function-ref name="request" scoped="" ref="0x1111eab48"/>
        <function-ref name="granted" scoped="" ref="0x1111eacd0"/>
        <function-ref name="isOwner" scoped="" ref="0x1111eae58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x1111e84e0" loc="76:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x1111e84e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x1111e8830"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x1111e89b8"/>
        <function-ref name="splitRead" scoped="" ref="0x1111e8b40"/>
        <function-ref name="write" scoped="" ref="0x1111e8cc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x1111e4c40" loc="81:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x1111e4c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x1111e3020"/>
        <function-ref name="txDone" scoped="" ref="0x1111e31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x111240860" loc="76:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x111240860"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x111240bd0"/>
        <function-ref name="configure" scoped="" ref="0x111240d58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x11123e1e0" loc="79:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x11123e1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x11123e550"/>
        <function-ref name="sendDone" scoped="" ref="0x11123e6d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x11123c860" loc="82:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x11123c860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x11123cbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x11123f020" loc="77:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x11123f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x11123f370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x11123b020" loc="83:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x11123b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x11123b370"/>
        <function-ref name="enableUartRx" scoped="" ref="0x11123b4f8"/>
        <function-ref name="setUctl" scoped="" ref="0x11123b680"/>
        <function-ref name="enableUart" scoped="" ref="0x11123b808"/>
        <function-ref name="setUrctl" scoped="" ref="0x11123b990"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x11123bb18"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x11123bca0"/>
        <function-ref name="getUtctl" scoped="" ref="0x11123be28"/>
        <function-ref name="getUrctl" scoped="" ref="0x11123a020"/>
        <function-ref name="resetUsart" scoped="" ref="0x11123a1a8"/>
        <function-ref name="getUmctl" scoped="" ref="0x11123a330"/>
        <function-ref name="disableIntr" scoped="" ref="0x11123a4b8"/>
        <function-ref name="setUtctl" scoped="" ref="0x11123a640"/>
        <function-ref name="getUbr" scoped="" ref="0x11123a8c8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x11123aa50"/>
        <function-ref name="setUmctl" scoped="" ref="0x11123abd8"/>
        <function-ref name="isUartRx" scoped="" ref="0x11123ad60"/>
        <function-ref name="isUart" scoped="" ref="0x111239020"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x1112391a8"/>
        <function-ref name="isSpi" scoped="" ref="0x111239330"/>
        <function-ref name="enableUartTx" scoped="" ref="0x1112394b8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x111239640"/>
        <function-ref name="disableUartRx" scoped="" ref="0x1112397c8"/>
        <function-ref name="enableIntr" scoped="" ref="0x111239950"/>
        <function-ref name="getMode" scoped="" ref="0x111239ad8"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x111239e60"/>
        <function-ref name="clrIntr" scoped="" ref="0x111238020"/>
        <function-ref name="setUbr" scoped="" ref="0x1112381a8"/>
        <function-ref name="tx" scoped="" ref="0x111238330"/>
        <function-ref name="getUctl" scoped="" ref="0x1112384b8"/>
        <function-ref name="disableUart" scoped="" ref="0x111238640"/>
        <function-ref name="enableSpi" scoped="" ref="0x1112387c8"/>
        <function-ref name="setModeUart" scoped="" ref="0x111238950"/>
        <function-ref name="setModeSpi" scoped="" ref="0x111238ad8"/>
        <function-ref name="rx" scoped="" ref="0x111238c60"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x111238de8"/>
        <function-ref name="isUartTx" scoped="" ref="0x111237020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x1112371a8"/>
        <function-ref name="disableSpi" scoped="" ref="0x111237330"/>
        <function-ref name="disableUartTx" scoped="" ref="0x1112374b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x111236020" loc="85:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x111236020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x111236370"/>
        <function-ref name="led0Toggle" scoped="" ref="0x1112364f8"/>
        <function-ref name="led1On" scoped="" ref="0x111236680"/>
        <function-ref name="led1Toggle" scoped="" ref="0x111236808"/>
        <function-ref name="led2Toggle" scoped="" ref="0x111236990"/>
        <function-ref name="get" scoped="" ref="0x111236b18"/>
        <function-ref name="led1Off" scoped="" ref="0x111236ca0"/>
        <function-ref name="led2On" scoped="" ref="0x111235330"/>
        <function-ref name="set" scoped="" ref="0x111235020"/>
        <function-ref name="led2Off" scoped="" ref="0x111236e28"/>
        <function-ref name="led0On" scoped="" ref="0x1112351a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x11123eac0" loc="81:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x11123eac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x11123ee30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x11123c020"/>
        <function-ref name="request" scoped="" ref="0x11123c1a8"/>
        <function-ref name="granted" scoped="" ref="0x11123c330"/>
        <function-ref name="isOwner" scoped="" ref="0x11123c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x111241ae8" loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x111241ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x111241e58"/>
        <function-ref name="immediateRequest" scoped="" ref="0x111240020"/>
        <function-ref name="request" scoped="" ref="0x1112401a8"/>
        <function-ref name="granted" scoped="" ref="0x111240330"/>
        <function-ref name="isOwner" scoped="" ref="0x1112404b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x11123f5f8" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x11123f5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x11123f948"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x11123fad0"/>
        <function-ref name="splitRead" scoped="" ref="0x11123fc58"/>
        <function-ref name="write" scoped="" ref="0x11123fde0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x111237780" loc="84:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x111237780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x111237ad0"/>
        <function-ref name="txDone" scoped="" ref="0x111237c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x1112355f8" loc="102:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x1112355f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x111235948"/>
        <function-ref name="runTask" scoped="" ref="0x111235ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x111283d68" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x111283d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1112820f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x111283528" loc="77:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x111283528"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x111283878"/>
        <function-ref name="txDone" scoped="" ref="0x111283a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x11128abe0" loc="76:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x11128abe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x111287020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x1112871a8"/>
        <function-ref name="setUctl" scoped="" ref="0x111287330"/>
        <function-ref name="enableUart" scoped="" ref="0x1112874b8"/>
        <function-ref name="setUrctl" scoped="" ref="0x111287640"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x1112877c8"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x111287950"/>
        <function-ref name="getUtctl" scoped="" ref="0x111287ad8"/>
        <function-ref name="getUrctl" scoped="" ref="0x111287c60"/>
        <function-ref name="resetUsart" scoped="" ref="0x111287de8"/>
        <function-ref name="getUmctl" scoped="" ref="0x111286020"/>
        <function-ref name="disableIntr" scoped="" ref="0x1112861a8"/>
        <function-ref name="setUtctl" scoped="" ref="0x111286330"/>
        <function-ref name="getUbr" scoped="" ref="0x1112865b8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x111286740"/>
        <function-ref name="setUmctl" scoped="" ref="0x1112868c8"/>
        <function-ref name="isUartRx" scoped="" ref="0x111286a50"/>
        <function-ref name="isUart" scoped="" ref="0x111286bd8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x111286d60"/>
        <function-ref name="isSpi" scoped="" ref="0x111285020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x1112851a8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x111285330"/>
        <function-ref name="disableUartRx" scoped="" ref="0x1112854b8"/>
        <function-ref name="enableIntr" scoped="" ref="0x111285640"/>
        <function-ref name="getMode" scoped="" ref="0x1112857c8"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x111285b50"/>
        <function-ref name="clrIntr" scoped="" ref="0x111285cd8"/>
        <function-ref name="setUbr" scoped="" ref="0x111285e60"/>
        <function-ref name="tx" scoped="" ref="0x111284020"/>
        <function-ref name="getUctl" scoped="" ref="0x1112841a8"/>
        <function-ref name="disableUart" scoped="" ref="0x111284330"/>
        <function-ref name="enableSpi" scoped="" ref="0x1112844b8"/>
        <function-ref name="setModeUart" scoped="" ref="0x111284640"/>
        <function-ref name="setModeSpi" scoped="" ref="0x1112847c8"/>
        <function-ref name="rx" scoped="" ref="0x111284950"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x111284ad8"/>
        <function-ref name="isUartTx" scoped="" ref="0x111284c60"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x111284de8"/>
        <function-ref name="disableSpi" scoped="" ref="0x111283020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x1112831a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x1112a3558" loc="82:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x1112a3558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1112a38a8"/>
        <function-ref name="isInput" scoped="" ref="0x1112a3a30"/>
        <function-ref name="setResistor" scoped="" ref="0x1112a3bb8"/>
        <function-ref name="toggle" scoped="" ref="0x1112a3d40"/>
        <function-ref name="isOutput" scoped="" ref="0x1112a2020"/>
        <function-ref name="getResistor" scoped="" ref="0x1112a21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1112a2330"/>
        <function-ref name="get" scoped="" ref="0x1112a24b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1112a2640"/>
        <function-ref name="getRaw" scoped="" ref="0x1112a27c8"/>
        <function-ref name="set" scoped="" ref="0x1112a2950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1112a2ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1112a2c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1112a1020"/>
        <function-ref name="clr" scoped="" ref="0x1112a11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x11127bbf0" loc="76:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x11127bbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x11127a020"/>
        <function-ref name="txDone" scoped="" ref="0x11127a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x1112a1558" loc="83:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x1112a1558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1112a18a8"/>
        <function-ref name="isInput" scoped="" ref="0x1112a1a30"/>
        <function-ref name="setResistor" scoped="" ref="0x1112a1bb8"/>
        <function-ref name="toggle" scoped="" ref="0x1112a1d40"/>
        <function-ref name="isOutput" scoped="" ref="0x1112a0020"/>
        <function-ref name="getResistor" scoped="" ref="0x1112a01a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1112a0330"/>
        <function-ref name="get" scoped="" ref="0x1112a04b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1112a0640"/>
        <function-ref name="getRaw" scoped="" ref="0x1112a07c8"/>
        <function-ref name="set" scoped="" ref="0x1112a0950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1112a0ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1112a0c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11129f020"/>
        <function-ref name="clr" scoped="" ref="0x11129f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x11129f558" loc="84:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x11129f558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11129f8a8"/>
        <function-ref name="isInput" scoped="" ref="0x11129fa30"/>
        <function-ref name="setResistor" scoped="" ref="0x11129fbb8"/>
        <function-ref name="toggle" scoped="" ref="0x11129fd40"/>
        <function-ref name="isOutput" scoped="" ref="0x11129e020"/>
        <function-ref name="getResistor" scoped="" ref="0x11129e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x11129e330"/>
        <function-ref name="get" scoped="" ref="0x11129e4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11129e640"/>
        <function-ref name="getRaw" scoped="" ref="0x11129e7c8"/>
        <function-ref name="set" scoped="" ref="0x11129e950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11129ead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11129ec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11129d020"/>
        <function-ref name="clr" scoped="" ref="0x11129d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x11127f350" loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x11127f350"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x11127f6a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x11127f828"/>
        <function-ref name="setUctl" scoped="" ref="0x11127f9b0"/>
        <function-ref name="enableUart" scoped="" ref="0x11127fb38"/>
        <function-ref name="setUrctl" scoped="" ref="0x11127fcc0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x11127fe48"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x11127e020"/>
        <function-ref name="getUtctl" scoped="" ref="0x11127e1a8"/>
        <function-ref name="getUrctl" scoped="" ref="0x11127e330"/>
        <function-ref name="resetUsart" scoped="" ref="0x11127e4b8"/>
        <function-ref name="getUmctl" scoped="" ref="0x11127e640"/>
        <function-ref name="disableIntr" scoped="" ref="0x11127e7c8"/>
        <function-ref name="setUtctl" scoped="" ref="0x11127e950"/>
        <function-ref name="getUbr" scoped="" ref="0x11127ebd8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x11127ed60"/>
        <function-ref name="setUmctl" scoped="" ref="0x11127d020"/>
        <function-ref name="isUartRx" scoped="" ref="0x11127d1a8"/>
        <function-ref name="isUart" scoped="" ref="0x11127d330"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x11127d4b8"/>
        <function-ref name="isSpi" scoped="" ref="0x11127d640"/>
        <function-ref name="enableUartTx" scoped="" ref="0x11127d7c8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x11127d950"/>
        <function-ref name="disableUartRx" scoped="" ref="0x11127dad8"/>
        <function-ref name="enableIntr" scoped="" ref="0x11127dc60"/>
        <function-ref name="getMode" scoped="" ref="0x11127dde8"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x11127c220"/>
        <function-ref name="clrIntr" scoped="" ref="0x11127c3a8"/>
        <function-ref name="setUbr" scoped="" ref="0x11127c530"/>
        <function-ref name="tx" scoped="" ref="0x11127c6b8"/>
        <function-ref name="getUctl" scoped="" ref="0x11127c840"/>
        <function-ref name="disableUart" scoped="" ref="0x11127c9c8"/>
        <function-ref name="enableSpi" scoped="" ref="0x11127cb50"/>
        <function-ref name="setModeUart" scoped="" ref="0x11127ccd8"/>
        <function-ref name="setModeSpi" scoped="" ref="0x11127ce60"/>
        <function-ref name="rx" scoped="" ref="0x11127b020"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x11127b1a8"/>
        <function-ref name="isUartTx" scoped="" ref="0x11127b330"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x11127b4b8"/>
        <function-ref name="disableSpi" scoped="" ref="0x11127b640"/>
        <function-ref name="disableUartTx" scoped="" ref="0x11127b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x1112ada48" loc="79:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x1112ada48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x1112add98"/>
        <function-ref name="getStartByte" scoped="" ref="0x111279020"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x1112791a8"/>
        <function-ref name="setMasterMode" scoped="" ref="0x111279330"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x1112794b8"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x111279640"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x1112797c8"/>
        <function-ref name="getStopBit" scoped="" ref="0x111279950"/>
        <function-ref name="setClockSource" scoped="" ref="0x111279ad8"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x111279c60"/>
        <function-ref name="getData" scoped="" ref="0x111279de8"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x111278020"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x1112781a8"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x111278430"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x1112785b8"/>
        <function-ref name="getIV" scoped="" ref="0x111278740"/>
        <function-ref name="enableI2C" scoped="" ref="0x1112788c8"/>
        <function-ref name="setStartBit" scoped="" ref="0x111278a50"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x111278bd8"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x111278d60"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x1112ac020"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x1112ac1a8"/>
        <function-ref name="isI2C" scoped="" ref="0x1112ac330"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x1112ac4b8"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x1112ac640"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x1112ac9c8"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x1112acb50"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x1112accd8"/>
        <function-ref name="disableNoAck" scoped="" ref="0x1112ace60"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x1112ab020"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x1112ab1a8"/>
        <function-ref name="disableI2C" scoped="" ref="0x1112ab330"/>
        <function-ref name="getShiftClock" scoped="" ref="0x1112ab4b8"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x1112ab640"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x1112ab7c8"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x1112ab950"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x1112abad8"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x1112abc60"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x1112abde8"/>
        <function-ref name="setModeI2C" scoped="" ref="0x1112aa020"/>
        <function-ref name="getStartBit" scoped="" ref="0x1112aa1a8"/>
        <function-ref name="setWordMode" scoped="" ref="0x1112aa330"/>
        <function-ref name="setData" scoped="" ref="0x1112aa4b8"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x1112aa640"/>
        <function-ref name="getClockSource" scoped="" ref="0x1112aa7c8"/>
        <function-ref name="getWordMode" scoped="" ref="0x1112aa950"/>
        <function-ref name="setShiftClock" scoped="" ref="0x1112aaad8"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x1112aac60"/>
        <function-ref name="enableNoAck" scoped="" ref="0x1112aade8"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x1112a9420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x1112a95a8"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x1112a9730"/>
        <function-ref name="setStopBit" scoped="" ref="0x1112a98b8"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x1112a9a40"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x1112a9bc8"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x1112a9d50"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x1112a8020"/>
        <function-ref name="setStartByte" scoped="" ref="0x1112a81a8"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x1112a8330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x1112a5658" loc="81:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x1112a5658"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1112a59a8"/>
        <function-ref name="isInput" scoped="" ref="0x1112a5b30"/>
        <function-ref name="setResistor" scoped="" ref="0x1112a5cb8"/>
        <function-ref name="toggle" scoped="" ref="0x1112a5e40"/>
        <function-ref name="isOutput" scoped="" ref="0x1112a4020"/>
        <function-ref name="getResistor" scoped="" ref="0x1112a41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1112a4330"/>
        <function-ref name="get" scoped="" ref="0x1112a44b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1112a4640"/>
        <function-ref name="getRaw" scoped="" ref="0x1112a47c8"/>
        <function-ref name="set" scoped="" ref="0x1112a4950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1112a4ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1112a4c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1112a3020"/>
        <function-ref name="clr" scoped="" ref="0x1112a31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x11127a5d8" loc="77:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x11127a5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x11127a928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x1112a86e0" loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x1112a86e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1112a8a30"/>
        <function-ref name="isInput" scoped="" ref="0x1112a8bb8"/>
        <function-ref name="setResistor" scoped="" ref="0x1112a8d40"/>
        <function-ref name="toggle" scoped="" ref="0x1112a6020"/>
        <function-ref name="isOutput" scoped="" ref="0x1112a61a8"/>
        <function-ref name="getResistor" scoped="" ref="0x1112a6330"/>
        <function-ref name="makeOutput" scoped="" ref="0x1112a64b8"/>
        <function-ref name="get" scoped="" ref="0x1112a6640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1112a67c8"/>
        <function-ref name="getRaw" scoped="" ref="0x1112a6950"/>
        <function-ref name="set" scoped="" ref="0x1112a6ad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1112a6c60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1112a6de8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1112a5120"/>
        <function-ref name="clr" scoped="" ref="0x1112a52a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x1121f68c8" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x1121f68c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x1121f6c18"/>
        <function-ref name="immediateRequested" scoped="" ref="0x1121f6da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x1121f0780" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x1121f0780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1121f0ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x1121e98c8" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x1121e98c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x1121e9c18"/>
        <function-ref name="configure" scoped="" ref="0x1121e9da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x1121f0d58" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x1121f0d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x1121ef0d8"/>
        <function-ref name="getStartByte" scoped="" ref="0x1121ef260"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x1121ef3e8"/>
        <function-ref name="setMasterMode" scoped="" ref="0x1121ef570"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x1121ef6f8"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x1121ef880"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x1121efa08"/>
        <function-ref name="getStopBit" scoped="" ref="0x1121efb90"/>
        <function-ref name="setClockSource" scoped="" ref="0x1121efd18"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x1121ee020"/>
        <function-ref name="getData" scoped="" ref="0x1121ee1a8"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x1121ee330"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x1121ee4b8"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x1121ee740"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x1121ee8c8"/>
        <function-ref name="getIV" scoped="" ref="0x1121eea50"/>
        <function-ref name="enableI2C" scoped="" ref="0x1121eebd8"/>
        <function-ref name="setStartBit" scoped="" ref="0x1121eed60"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x1121ed020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x1121ed1a8"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x1121ed330"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x1121ed4b8"/>
        <function-ref name="isI2C" scoped="" ref="0x1121ed640"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x1121ed7c8"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x1121ed950"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x1121edcd8"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x1121ede60"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x1121ec020"/>
        <function-ref name="disableNoAck" scoped="" ref="0x1121ec1a8"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x1121ec330"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x1121ec4b8"/>
        <function-ref name="disableI2C" scoped="" ref="0x1121ec640"/>
        <function-ref name="getShiftClock" scoped="" ref="0x1121ec7c8"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x1121ec950"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x1121ecad8"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x1121ecc60"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x1121ecde8"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x1121eb020"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x1121eb1a8"/>
        <function-ref name="setModeI2C" scoped="" ref="0x1121eb330"/>
        <function-ref name="getStartBit" scoped="" ref="0x1121eb4b8"/>
        <function-ref name="setWordMode" scoped="" ref="0x1121eb640"/>
        <function-ref name="setData" scoped="" ref="0x1121eb7c8"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x1121eb950"/>
        <function-ref name="getClockSource" scoped="" ref="0x1121ebad8"/>
        <function-ref name="getWordMode" scoped="" ref="0x1121ebc60"/>
        <function-ref name="setShiftClock" scoped="" ref="0x1121ebde8"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x1121ea020"/>
        <function-ref name="enableNoAck" scoped="" ref="0x1121ea1a8"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x1121ea730"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x1121ea8b8"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x1121eaa40"/>
        <function-ref name="setStopBit" scoped="" ref="0x1121eabc8"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x1121ead50"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x1121e9020"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x1121e91a8"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x1121e9330"/>
        <function-ref name="setStartByte" scoped="" ref="0x1121e94b8"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x1121e9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x1121f0020" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x1121f0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x1121f0370"/>
        <function-ref name="txDone" scoped="" ref="0x1121f04f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1121f7b38" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x1121f7b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1121f6020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1121f61a8"/>
        <function-ref name="request" scoped="" ref="0x1121f6330"/>
        <function-ref name="granted" scoped="" ref="0x1121f64b8"/>
        <function-ref name="isOwner" scoped="" ref="0x1121f6640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x1121f57c0" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x1121f57c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x1121f5b10"/>
        <function-ref name="enableUartRx" scoped="" ref="0x1121f5c98"/>
        <function-ref name="setUctl" scoped="" ref="0x1121f5e20"/>
        <function-ref name="enableUart" scoped="" ref="0x1121f4020"/>
        <function-ref name="setUrctl" scoped="" ref="0x1121f41a8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x1121f4330"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x1121f44b8"/>
        <function-ref name="getUtctl" scoped="" ref="0x1121f4640"/>
        <function-ref name="getUrctl" scoped="" ref="0x1121f47c8"/>
        <function-ref name="resetUsart" scoped="" ref="0x1121f4950"/>
        <function-ref name="getUmctl" scoped="" ref="0x1121f4ad8"/>
        <function-ref name="disableIntr" scoped="" ref="0x1121f4c60"/>
        <function-ref name="setUtctl" scoped="" ref="0x1121f4de8"/>
        <function-ref name="getUbr" scoped="" ref="0x1121f3120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x1121f32a8"/>
        <function-ref name="setUmctl" scoped="" ref="0x1121f3430"/>
        <function-ref name="isUartRx" scoped="" ref="0x1121f35b8"/>
        <function-ref name="isUart" scoped="" ref="0x1121f3740"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x1121f38c8"/>
        <function-ref name="isSpi" scoped="" ref="0x1121f3a50"/>
        <function-ref name="enableUartTx" scoped="" ref="0x1121f3bd8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x1121f3d60"/>
        <function-ref name="disableUartRx" scoped="" ref="0x1121f2020"/>
        <function-ref name="enableIntr" scoped="" ref="0x1121f21a8"/>
        <function-ref name="getMode" scoped="" ref="0x1121f2330"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x1121f26b8"/>
        <function-ref name="clrIntr" scoped="" ref="0x1121f2840"/>
        <function-ref name="setUbr" scoped="" ref="0x1121f29c8"/>
        <function-ref name="tx" scoped="" ref="0x1121f2b50"/>
        <function-ref name="getUctl" scoped="" ref="0x1121f2cd8"/>
        <function-ref name="disableUart" scoped="" ref="0x1121f2e60"/>
        <function-ref name="enableSpi" scoped="" ref="0x1121f1020"/>
        <function-ref name="setModeUart" scoped="" ref="0x1121f11a8"/>
        <function-ref name="setModeSpi" scoped="" ref="0x1121f1330"/>
        <function-ref name="rx" scoped="" ref="0x1121f14b8"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x1121f1640"/>
        <function-ref name="isUartTx" scoped="" ref="0x1121f17c8"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x1121f1950"/>
        <function-ref name="disableSpi" scoped="" ref="0x1121f1ad8"/>
        <function-ref name="disableUartTx" scoped="" ref="0x1121f1c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x1121f5060" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x1121f5060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x1121f53b0"/>
        <function-ref name="userId" scoped="" ref="0x1121f5538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x111319020" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x111319020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x111319370"/>
        <function-ref name="immediateRequested" scoped="" ref="0x1113194f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x111318570" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x111318570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x1113188c0"/>
        <function-ref name="configure" scoped="" ref="0x111318a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x11131d2b0" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x11131d2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x11131d600"/>
        <function-ref name="txDone" scoped="" ref="0x11131d788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x11131cce8" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x11131cce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x11131a0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x11131a228"/>
        <function-ref name="request" scoped="" ref="0x11131a3b0"/>
        <function-ref name="granted" scoped="" ref="0x11131a538"/>
        <function-ref name="isOwner" scoped="" ref="0x11131a6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x11131c1c8" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x11131c1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x11131c518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x1113197f0" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x1113197f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x111319b40"/>
        <function-ref name="userId" scoped="" ref="0x111319cc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x111315a48" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x111315a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x111315d98"/>
        <function-ref name="userId" scoped="" ref="0x111372020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x111317b70" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x111317b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x111316020"/>
        <function-ref name="txDone" scoped="" ref="0x1113161a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x111315470" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x111315470"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1113157c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x111316590" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x111316590"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x111316900"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x111316bc8" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x111316bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x111315020"/>
        <function-ref name="txDone" scoped="" ref="0x1113151a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x11136f388" loc="92:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x11136f388"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x11136f6f8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x11136f880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x11136d020" loc="96:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x11136d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x11136d390"/>
        <function-ref name="configure" scoped="" ref="0x11136d518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x11136fac8" loc="93:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x11136fac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x11136fe18"/>
        <function-ref name="requested" scoped="" ref="0x11136e020"/>
        <function-ref name="granted" scoped="" ref="0x11136e1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x11136e330"/>
        <function-ref name="immediateRequested" scoped="" ref="0x11136e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x111370558" loc="91:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x111370558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1113708c8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x111370a50"/>
        <function-ref name="request" scoped="" ref="0x111370bd8"/>
        <function-ref name="granted" scoped="" ref="0x111370d60"/>
        <function-ref name="isOwner" scoped="" ref="0x11136f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x11136e700" loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x11136e700"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x11136ea50"/>
        <function-ref name="userId" scoped="" ref="0x11136ebd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x112225828" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x112225828"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x112225b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x112225e00" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x112225e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x1122241a8"/>
        <function-ref name="isEmpty" scoped="" ref="0x112224330"/>
        <function-ref name="isEnqueued" scoped="" ref="0x1122244b8"/>
        <function-ref name="dequeue" scoped="" ref="0x112224640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x112222b48" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x112222b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x112221020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x1122211a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x1122208c0" loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x1122208c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x112220c30"/>
        <function-ref name="configure" scoped="" ref="0x112220db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x11221f0a0" loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x11221f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x11221f3f0"/>
        <function-ref name="isEmpty" scoped="" ref="0x11221f578"/>
        <function-ref name="isEnqueued" scoped="" ref="0x11221f700"/>
        <function-ref name="dequeue" scoped="" ref="0x11221f888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x1122213f0" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x1122213f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x112221740"/>
        <function-ref name="requested" scoped="" ref="0x1122218c8"/>
        <function-ref name="granted" scoped="" ref="0x112221a50"/>
        <function-ref name="isOwner" scoped="" ref="0x112221bd8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x112221d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x11221fad0" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x11221fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x11221fe20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x11221d020"/>
        <function-ref name="led1On" scoped="" ref="0x11221d1a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x11221d330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x11221d4b8"/>
        <function-ref name="get" scoped="" ref="0x11221d640"/>
        <function-ref name="led1Off" scoped="" ref="0x11221d7c8"/>
        <function-ref name="led0On" scoped="" ref="0x11221dde8"/>
        <function-ref name="set" scoped="" ref="0x11221dad8"/>
        <function-ref name="led2On" scoped="" ref="0x11221d950"/>
        <function-ref name="led2Off" scoped="" ref="0x11221dc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x112223e20" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x112223e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1122221c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x112222348"/>
        <function-ref name="request" scoped="" ref="0x1122224d0"/>
        <function-ref name="granted" scoped="" ref="0x112222658"/>
        <function-ref name="isOwner" scoped="" ref="0x1122227e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x112220020" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x112220020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x112220370"/>
        <function-ref name="userId" scoped="" ref="0x1122204f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x11221c100" loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x11221c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x11221c450"/>
        <function-ref name="runTask" scoped="" ref="0x11221c5d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x111366b48" loc="4:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x111366b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x111363020"/>
        <function-ref name="getStartByte" scoped="" ref="0x1113631a8"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x111363330"/>
        <function-ref name="setMasterMode" scoped="" ref="0x1113634b8"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x111363640"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x1113637c8"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x111363950"/>
        <function-ref name="getStopBit" scoped="" ref="0x111363ad8"/>
        <function-ref name="setClockSource" scoped="" ref="0x111363c60"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x111363de8"/>
        <function-ref name="getData" scoped="" ref="0x111362020"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x1113621a8"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x111362330"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x1113625b8"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x111362740"/>
        <function-ref name="getIV" scoped="" ref="0x1113628c8"/>
        <function-ref name="enableI2C" scoped="" ref="0x111362a50"/>
        <function-ref name="setStartBit" scoped="" ref="0x111362bd8"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x111362d60"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x111361020"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x1113611a8"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x111361330"/>
        <function-ref name="isI2C" scoped="" ref="0x1113614b8"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x111361640"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x1113617c8"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x111361b50"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x111361cd8"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x111361e60"/>
        <function-ref name="disableNoAck" scoped="" ref="0x111360020"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x1113601a8"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x111360330"/>
        <function-ref name="disableI2C" scoped="" ref="0x1113604b8"/>
        <function-ref name="getShiftClock" scoped="" ref="0x111360640"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x1113607c8"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x111360950"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x111360ad8"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x111360c60"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x111360de8"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x11135f020"/>
        <function-ref name="setModeI2C" scoped="" ref="0x11135f1a8"/>
        <function-ref name="getStartBit" scoped="" ref="0x11135f330"/>
        <function-ref name="setWordMode" scoped="" ref="0x11135f4b8"/>
        <function-ref name="setData" scoped="" ref="0x11135f640"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x11135f7c8"/>
        <function-ref name="getClockSource" scoped="" ref="0x11135f950"/>
        <function-ref name="getWordMode" scoped="" ref="0x11135fad8"/>
        <function-ref name="setShiftClock" scoped="" ref="0x11135fc60"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x11135fde8"/>
        <function-ref name="enableNoAck" scoped="" ref="0x11135e020"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x11135e5a8"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x11135e730"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x11135e8b8"/>
        <function-ref name="setStopBit" scoped="" ref="0x11135ea40"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x11135ebc8"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x11135ed50"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x11135d020"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x11135d1a8"/>
        <function-ref name="setStartByte" scoped="" ref="0x11135d330"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x11135d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x111353060" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x111353060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x1113533b0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x111353538"/>
        <function-ref name="setUctl" scoped="" ref="0x1113536c0"/>
        <function-ref name="enableUart" scoped="" ref="0x111353848"/>
        <function-ref name="setUrctl" scoped="" ref="0x1113539d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x111353b58"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x111353ce0"/>
        <function-ref name="getUtctl" scoped="" ref="0x111353e68"/>
        <function-ref name="getUrctl" scoped="" ref="0x111352020"/>
        <function-ref name="resetUsart" scoped="" ref="0x1113521a8"/>
        <function-ref name="getUmctl" scoped="" ref="0x111352330"/>
        <function-ref name="disableIntr" scoped="" ref="0x1113524b8"/>
        <function-ref name="setUtctl" scoped="" ref="0x111352640"/>
        <function-ref name="getUbr" scoped="" ref="0x1113528c8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x111352a50"/>
        <function-ref name="setUmctl" scoped="" ref="0x111352bd8"/>
        <function-ref name="isUartRx" scoped="" ref="0x111352d60"/>
        <function-ref name="isUart" scoped="" ref="0x111351020"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x1113511a8"/>
        <function-ref name="isSpi" scoped="" ref="0x111351330"/>
        <function-ref name="enableUartTx" scoped="" ref="0x1113514b8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x111351640"/>
        <function-ref name="disableUartRx" scoped="" ref="0x1113517c8"/>
        <function-ref name="enableIntr" scoped="" ref="0x111351950"/>
        <function-ref name="getMode" scoped="" ref="0x111351ad8"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x111351e60"/>
        <function-ref name="clrIntr" scoped="" ref="0x111350020"/>
        <function-ref name="setUbr" scoped="" ref="0x1113501a8"/>
        <function-ref name="tx" scoped="" ref="0x111350330"/>
        <function-ref name="getUctl" scoped="" ref="0x1113504b8"/>
        <function-ref name="disableUart" scoped="" ref="0x111350640"/>
        <function-ref name="enableSpi" scoped="" ref="0x1113507c8"/>
        <function-ref name="setModeUart" scoped="" ref="0x111350950"/>
        <function-ref name="setModeSpi" scoped="" ref="0x111350ad8"/>
        <function-ref name="rx" scoped="" ref="0x111350c60"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x111350de8"/>
        <function-ref name="isUartTx" scoped="" ref="0x11134f020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x11134f1a8"/>
        <function-ref name="disableSpi" scoped="" ref="0x11134f330"/>
        <function-ref name="disableUartTx" scoped="" ref="0x11134f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x11134d7e0" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x11134d7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11134db30"/>
        <function-ref name="isInput" scoped="" ref="0x11134dcb8"/>
        <function-ref name="setResistor" scoped="" ref="0x11134de40"/>
        <function-ref name="toggle" scoped="" ref="0x11134c020"/>
        <function-ref name="isOutput" scoped="" ref="0x11134c1a8"/>
        <function-ref name="getResistor" scoped="" ref="0x11134c330"/>
        <function-ref name="makeOutput" scoped="" ref="0x11134c4b8"/>
        <function-ref name="get" scoped="" ref="0x11134c640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11134c7c8"/>
        <function-ref name="getRaw" scoped="" ref="0x11134c950"/>
        <function-ref name="set" scoped="" ref="0x11134cad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11134cc60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11134cde8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11134b120"/>
        <function-ref name="clr" scoped="" ref="0x11134b2a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x11135a4e8" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x11135a4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x11135a838"/>
        <function-ref name="getStartByte" scoped="" ref="0x11135a9c0"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x11135ab48"/>
        <function-ref name="setMasterMode" scoped="" ref="0x11135acd0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x11135ae58"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x111359020"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x1113591a8"/>
        <function-ref name="getStopBit" scoped="" ref="0x111359330"/>
        <function-ref name="setClockSource" scoped="" ref="0x1113594b8"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x111359640"/>
        <function-ref name="getData" scoped="" ref="0x1113597c8"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x111359950"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x111359ad8"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x111359d60"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x111358020"/>
        <function-ref name="getIV" scoped="" ref="0x1113581a8"/>
        <function-ref name="enableI2C" scoped="" ref="0x111358330"/>
        <function-ref name="setStartBit" scoped="" ref="0x1113584b8"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x111358640"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x1113587c8"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x111358950"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x111358ad8"/>
        <function-ref name="isI2C" scoped="" ref="0x111358c60"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x111358de8"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x111357020"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x1113573a8"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x111357530"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x1113576b8"/>
        <function-ref name="disableNoAck" scoped="" ref="0x111357840"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x1113579c8"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x111357b50"/>
        <function-ref name="disableI2C" scoped="" ref="0x111357cd8"/>
        <function-ref name="getShiftClock" scoped="" ref="0x111357e60"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x111356020"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x1113561a8"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x111356330"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x1113564b8"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x111356640"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x1113567c8"/>
        <function-ref name="setModeI2C" scoped="" ref="0x111356950"/>
        <function-ref name="getStartBit" scoped="" ref="0x111356ad8"/>
        <function-ref name="setWordMode" scoped="" ref="0x111356c60"/>
        <function-ref name="setData" scoped="" ref="0x111356de8"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x111355020"/>
        <function-ref name="getClockSource" scoped="" ref="0x1113551a8"/>
        <function-ref name="getWordMode" scoped="" ref="0x111355330"/>
        <function-ref name="setShiftClock" scoped="" ref="0x1113554b8"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x111355640"/>
        <function-ref name="enableNoAck" scoped="" ref="0x1113557c8"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x111355d50"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x111354020"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x1113541a8"/>
        <function-ref name="setStopBit" scoped="" ref="0x111354330"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x1113544b8"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x111354640"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x1113547c8"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x111354950"/>
        <function-ref name="setStartByte" scoped="" ref="0x111354ad8"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x111354c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x11134f868" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x11134f868"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11134fbb8"/>
        <function-ref name="isInput" scoped="" ref="0x11134fd40"/>
        <function-ref name="setResistor" scoped="" ref="0x11134e020"/>
        <function-ref name="toggle" scoped="" ref="0x11134e1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x11134e330"/>
        <function-ref name="getResistor" scoped="" ref="0x11134e4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x11134e640"/>
        <function-ref name="get" scoped="" ref="0x11134e7c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11134e950"/>
        <function-ref name="getRaw" scoped="" ref="0x11134ead8"/>
        <function-ref name="set" scoped="" ref="0x11134ec60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11134ede8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11134d020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11134d2a8"/>
        <function-ref name="clr" scoped="" ref="0x11134d430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x11148fa88" loc="69:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x11148fa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11148e020"/>
        <function-ref name="write" scoped="" ref="0x11148e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x111499100" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x111499100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111499450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x111493a88" loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x111493a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111493dd8"/>
        <function-ref name="write" scoped="" ref="0x111492020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x11148d470" loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x11148d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11148d7c0"/>
        <function-ref name="write" scoped="" ref="0x11148d948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x111486c10" loc="86:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x111486c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111485020"/>
        <function-ref name="write" scoped="" ref="0x1114851a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x11148dc10" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x11148dc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11148c020"/>
        <function-ref name="write" scoped="" ref="0x11148c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x1114792e8" loc="108:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x1114792e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111479638"/>
        <function-ref name="write" scoped="" ref="0x1114797c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x11147c2e8" loc="104:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x11147c2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11147c638"/>
        <function-ref name="write" scoped="" ref="0x11147c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x1114983a0" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x1114983a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1114986f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x111481470" loc="93:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x111481470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114817c0"/>
        <function-ref name="write" scoped="" ref="0x111481948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x11147d2e8" loc="102:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x11147d2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11147d638"/>
        <function-ref name="write" scoped="" ref="0x11147d7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x111492a88" loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x111492a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111492dd8"/>
        <function-ref name="write" scoped="" ref="0x111491020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x111491a88" loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x111491a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111491dd8"/>
        <function-ref name="write" scoped="" ref="0x11148f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x111487470" loc="83:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x111487470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114877c0"/>
        <function-ref name="write" scoped="" ref="0x111487948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x11148ac10" loc="79:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x11148ac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111488020"/>
        <function-ref name="write" scoped="" ref="0x1114881a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x11148c470" loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x11148c470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11148c7c0"/>
        <function-ref name="write" scoped="" ref="0x11148c948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x111439a90" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x111439a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x111439de0"/>
        <function-ref name="abortRelease" scoped="" ref="0x111438020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x1114381a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x111497c50" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x111497c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111495020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x1114952e8" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x1114952e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111495738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x111480a38" loc="95:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x111480a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111480d88"/>
        <function-ref name="write" scoped="" ref="0x11147f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x111495a00" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x111495a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111495d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x11147da88" loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x11147da88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11147ddd8"/>
        <function-ref name="write" scoped="" ref="0x11147c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x111497020" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x111497020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111497370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x111482c10" loc="92:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x111482c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111481020"/>
        <function-ref name="write" scoped="" ref="0x1114811a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x1114912e8" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x1114912e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111491638"/>
        <function-ref name="write" scoped="" ref="0x1114917c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x1114922e8" loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x1114922e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111492638"/>
        <function-ref name="write" scoped="" ref="0x1114927c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x111438a88" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x111438a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111438dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x111484c10" loc="90:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x111484c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111482020"/>
        <function-ref name="write" scoped="" ref="0x1114821a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x111485470" loc="87:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x111485470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114857c0"/>
        <function-ref name="write" scoped="" ref="0x111485948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x111482470" loc="91:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x111482470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114827c0"/>
        <function-ref name="write" scoped="" ref="0x111482948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x11147aa88" loc="107:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x11147aa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11147add8"/>
        <function-ref name="write" scoped="" ref="0x111479020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x11147ca88" loc="105:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x11147ca88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11147cdd8"/>
        <function-ref name="write" scoped="" ref="0x11147a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x111488470" loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x111488470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114887c0"/>
        <function-ref name="write" scoped="" ref="0x111488948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x111485c10" loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x111485c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111484020"/>
        <function-ref name="write" scoped="" ref="0x1114841a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x11147ea88" loc="101:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x11147ea88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11147edd8"/>
        <function-ref name="write" scoped="" ref="0x11147d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x11148b470" loc="76:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x11148b470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11148b7c0"/>
        <function-ref name="write" scoped="" ref="0x11148b948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x111479a88" loc="111:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x111479a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x111479dd8"/>
        <function-ref name="writeDone" scoped="" ref="0x111478020"/>
        <function-ref name="write" scoped="" ref="0x1114781a8"/>
        <function-ref name="beginRead" scoped="" ref="0x111478330"/>
        <function-ref name="readDone" scoped="" ref="0x1114784b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x111438470" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x111438470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1114387c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x1114932e8" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x1114932e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111493638"/>
        <function-ref name="write" scoped="" ref="0x1114937c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x11148f2e8" loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x11148f2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11148f638"/>
        <function-ref name="write" scoped="" ref="0x11148f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x111487c10" loc="84:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x111487c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111486020"/>
        <function-ref name="write" scoped="" ref="0x1114861a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x11148cc10" loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x11148cc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11148b020"/>
        <function-ref name="write" scoped="" ref="0x11148b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x111486470" loc="85:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x111486470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114867c0"/>
        <function-ref name="write" scoped="" ref="0x111486948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x11148e470" loc="70:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x11148e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11148e7c0"/>
        <function-ref name="write" scoped="" ref="0x11148e948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x111499718" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x111499718"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111499a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x11148ec10" loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x11148ec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11148d020"/>
        <function-ref name="write" scoped="" ref="0x11148d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x11143ae60" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x11143ae60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1114391e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x111439370"/>
        <function-ref name="request" scoped="" ref="0x1114394f8"/>
        <function-ref name="granted" scoped="" ref="0x111439680"/>
        <function-ref name="isOwner" scoped="" ref="0x111439808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x111494060" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x111494060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1114943b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x111494c90" loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x111494c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111493020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x11147e2e8" loc="100:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x11147e2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11147e638"/>
        <function-ref name="write" scoped="" ref="0x11147e7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x11147fa88" loc="99:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x11147fa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11147fdd8"/>
        <function-ref name="write" scoped="" ref="0x11147e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x111497638" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x111497638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111497988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x11147f2e8" loc="96:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x11147f2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11147f638"/>
        <function-ref name="write" scoped="" ref="0x11147f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x11147a2e8" loc="106:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x11147a2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11147a638"/>
        <function-ref name="write" scoped="" ref="0x11147a7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x111488c10" loc="81:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x111488c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111487020"/>
        <function-ref name="write" scoped="" ref="0x1114871a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x111484470" loc="89:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x111484470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114847c0"/>
        <function-ref name="write" scoped="" ref="0x111484948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x111499d30" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x111499d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1114980d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x1114989b8" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x1114989b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111498d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x11148bc10" loc="77:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x11148bc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11148a020"/>
        <function-ref name="write" scoped="" ref="0x11148a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x111494678" loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x111494678"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1114949c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x11148a470" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x11148a470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11148a7c0"/>
        <function-ref name="write" scoped="" ref="0x11148a948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x111481c10" loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x111481c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114805e8"/>
        <function-ref name="write" scoped="" ref="0x111480770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x111478780" loc="112:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x111478780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x111478ad0"/>
        <function-ref name="writeDone" scoped="" ref="0x111478c58"/>
        <function-ref name="write" scoped="" ref="0x111478de0"/>
        <function-ref name="beginRead" scoped="" ref="0x111477020"/>
        <function-ref name="readDone" scoped="" ref="0x1114771a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x1114c5470" loc="69:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x1114c5470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114c59c0"/>
        <function-ref name="write" scoped="" ref="0x1114c5b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x11146e900" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x11146e900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11146ec50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x1114c8470" loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x1114c8470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114c87c0"/>
        <function-ref name="write" scoped="" ref="0x1114c8948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x1114c4d98" loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x1114c4d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114c2170"/>
        <function-ref name="write" scoped="" ref="0x1114c22f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x1114bb470" loc="86:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x1114bb470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114bb7c0"/>
        <function-ref name="write" scoped="" ref="0x1114bb948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x1114c25c0" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x1114c25c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114c2910"/>
        <function-ref name="write" scoped="" ref="0x1114c2a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x1114b07c0" loc="108:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x1114b07c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114b0b10"/>
        <function-ref name="write" scoped="" ref="0x1114b0c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x1114b27c0" loc="104:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x1114b27c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114b2b10"/>
        <function-ref name="write" scoped="" ref="0x1114b2c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x11146cc50" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x11146cc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11146b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x1114b8c10" loc="93:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x1114b8c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114b7020"/>
        <function-ref name="write" scoped="" ref="0x1114b71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x1114b37c0" loc="102:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x1114b37c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114b3b10"/>
        <function-ref name="write" scoped="" ref="0x1114b3c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x1114c7470" loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x1114c7470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114c77c0"/>
        <function-ref name="write" scoped="" ref="0x1114c7948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x1114c6470" loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x1114c6470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114c67c0"/>
        <function-ref name="write" scoped="" ref="0x1114c6948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x1114bec10" loc="83:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x1114bec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114bd020"/>
        <function-ref name="write" scoped="" ref="0x1114bd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x1114bf470" loc="79:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x1114bf470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114bf7c0"/>
        <function-ref name="write" scoped="" ref="0x1114bf948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x1114c2d60" loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x1114c2d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114c10d8"/>
        <function-ref name="write" scoped="" ref="0x1114c1260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x11146f2a8" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x11146f2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x11146f5f8"/>
        <function-ref name="abortRelease" scoped="" ref="0x11146f780"/>
        <function-ref name="attemptRelease" scoped="" ref="0x11146f908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x11146a638" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x11146a638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11146a988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x11146ac50" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x11146ac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1114690d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x1114b6060" loc="95:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x1114b6060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114b63b0"/>
        <function-ref name="write" scoped="" ref="0x1114b6538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x1114693a0" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x1114693a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1114696f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x1114b2020" loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x1114b2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114b2370"/>
        <function-ref name="write" scoped="" ref="0x1114b24f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x11146b900" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x11146b900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11146bc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x1114b8470" loc="92:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x1114b8470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114b87c0"/>
        <function-ref name="write" scoped="" ref="0x1114b8948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x1114c7c10" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x1114c7c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114c6020"/>
        <function-ref name="write" scoped="" ref="0x1114c61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x1114c8c10" loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x1114c8c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114c7020"/>
        <function-ref name="write" scoped="" ref="0x1114c71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x11146e2e8" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x11146e2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11146e638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x1114b9470" loc="90:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x1114b9470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114b97c0"/>
        <function-ref name="write" scoped="" ref="0x1114b9948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x1114bbc10" loc="87:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x1114bbc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114ba020"/>
        <function-ref name="write" scoped="" ref="0x1114ba1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x1114b9c10" loc="91:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x1114b9c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114b8020"/>
        <function-ref name="write" scoped="" ref="0x1114b81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x1114b0020" loc="107:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x1114b0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114b0370"/>
        <function-ref name="write" scoped="" ref="0x1114b04f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x1114b1020" loc="105:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x1114b1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114b1370"/>
        <function-ref name="write" scoped="" ref="0x1114b14f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x1114bfc10" loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x1114bfc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114be020"/>
        <function-ref name="write" scoped="" ref="0x1114be1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x1114ba470" loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x1114ba470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114ba7c0"/>
        <function-ref name="write" scoped="" ref="0x1114ba948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x1114b3020" loc="101:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x1114b3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114b3370"/>
        <function-ref name="write" scoped="" ref="0x1114b34f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x1114c1cc8" loc="76:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x1114c1cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114c00a0"/>
        <function-ref name="write" scoped="" ref="0x1114c0228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x1114af020" loc="111:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x1114af020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x1114af370"/>
        <function-ref name="writeDone" scoped="" ref="0x1114af4f8"/>
        <function-ref name="write" scoped="" ref="0x1114af680"/>
        <function-ref name="beginRead" scoped="" ref="0x1114af808"/>
        <function-ref name="readDone" scoped="" ref="0x1114af990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x11146fbd0" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x11146fbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11146e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x1114cac50" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x1114cac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114c8020"/>
        <function-ref name="write" scoped="" ref="0x1114c81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x1114c6c10" loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x1114c6c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114c5020"/>
        <function-ref name="write" scoped="" ref="0x1114c51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x1114bd470" loc="84:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x1114bd470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114bd7c0"/>
        <function-ref name="write" scoped="" ref="0x1114bd948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x1114c1528" loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x1114c1528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114c1878"/>
        <function-ref name="write" scoped="" ref="0x1114c1a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x1114bdc10" loc="85:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x1114bdc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114bb020"/>
        <function-ref name="write" scoped="" ref="0x1114bb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x1114c5e10" loc="70:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x1114c5e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114c41a8"/>
        <function-ref name="write" scoped="" ref="0x1114c4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x11146c020" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x11146c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11146c370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x1114c45f8" loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x1114c45f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114c4948"/>
        <function-ref name="write" scoped="" ref="0x1114c4ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x111470558" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x111470558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1114708a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x111470a30"/>
        <function-ref name="request" scoped="" ref="0x111470bb8"/>
        <function-ref name="granted" scoped="" ref="0x111470d40"/>
        <function-ref name="isOwner" scoped="" ref="0x11146f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x1114699b8" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x1114699b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111469d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x1114ca638" loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x1114ca638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1114ca988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x1114b47c0" loc="100:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x1114b47c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114b4b10"/>
        <function-ref name="write" scoped="" ref="0x1114b4c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x1114b4020" loc="99:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x1114b4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114b4370"/>
        <function-ref name="write" scoped="" ref="0x1114b44f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x11146a020" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x11146a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11146a370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x1114b6800" loc="96:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x1114b6800"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114b6b50"/>
        <function-ref name="write" scoped="" ref="0x1114b6cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x1114b17c0" loc="106:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x1114b17c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114b1b10"/>
        <function-ref name="write" scoped="" ref="0x1114b1c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x1114be470" loc="81:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x1114be470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114be7c0"/>
        <function-ref name="write" scoped="" ref="0x1114be948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x1114bac10" loc="89:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x1114bac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114b9020"/>
        <function-ref name="write" scoped="" ref="0x1114b91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x11146c638" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x11146c638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11146c988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x11146b2e8" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x11146b2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11146b638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x1114c04f0" loc="77:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x1114c04f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114c0840"/>
        <function-ref name="write" scoped="" ref="0x1114c09c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x1114ca020" loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x1114ca020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1114ca370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x1114c0c90" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x1114c0c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114bf020"/>
        <function-ref name="write" scoped="" ref="0x1114bf1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x1114b7470" loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x1114b7470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114b7bc0"/>
        <function-ref name="write" scoped="" ref="0x1114b7d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x1114afc58" loc="112:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x1114afc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x1114ad020"/>
        <function-ref name="writeDone" scoped="" ref="0x1114ad1a8"/>
        <function-ref name="write" scoped="" ref="0x1114ad330"/>
        <function-ref name="beginRead" scoped="" ref="0x1114ad4b8"/>
        <function-ref name="readDone" scoped="" ref="0x1114ad640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x1114a4690" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x1114a4690"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x1114a49e0"/>
        <function-ref name="changed" scoped="" ref="0x1114a4b68"/>
        <function-ref name="amGroup" scoped="" ref="0x1114a4cf0"/>
        <function-ref name="setAddress" scoped="" ref="0x1114a4e78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x1114a6ce0" loc="13:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x1114a6ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x1114f30a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x1114ee190" loc="5:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x1114ee190"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x1114ee4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x1114eb648" loc="8:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x1114eb648"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114eb998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x1114f2ad8" loc="8:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x1114f2ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114f2e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x1114d63f8" loc="14:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x1114d63f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114d6748"/>
        <function-ref name="write" scoped="" ref="0x1114d68d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x1114d6c40" loc="15:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x1114d6c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x1114da020"/>
        <function-ref name="stop" scoped="" ref="0x1114da1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x1114dcb08" loc="11:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x1114dcb08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1114dce58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x1114dfbb0" loc="8:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x1114dfbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11152b020"/>
        <function-ref name="write" scoped="" ref="0x11152b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x11152b530" loc="11:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x11152b530"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11152b880"/>
        <function-ref name="isInput" scoped="" ref="0x11152ba08"/>
        <function-ref name="toggle" scoped="" ref="0x11152bb90"/>
        <function-ref name="isOutput" scoped="" ref="0x11152bd18"/>
        <function-ref name="get" scoped="" ref="0x11152a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x11152a1a8"/>
        <function-ref name="set" scoped="" ref="0x11152a330"/>
        <function-ref name="clr" scoped="" ref="0x11152a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x111522748" loc="15:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x111522748"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b08b8"/>
            <typename><typedef-ref name="TMicro" ref="0x1107b0c10"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x111525578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x111527108" loc="11:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x111527108"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111527458"/>
        <function-ref name="write" scoped="" ref="0x1115275e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x111527968" loc="14:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x111527968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111527cb8"/>
        <function-ref name="isInput" scoped="" ref="0x111527e40"/>
        <function-ref name="toggle" scoped="" ref="0x111526020"/>
        <function-ref name="isOutput" scoped="" ref="0x1115261a8"/>
        <function-ref name="get" scoped="" ref="0x111526330"/>
        <function-ref name="makeOutput" scoped="" ref="0x1115264b8"/>
        <function-ref name="set" scoped="" ref="0x111526640"/>
        <function-ref name="clr" scoped="" ref="0x1115267c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x111529b88" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x111529b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b08b8"/>
            <typename><typedef-ref name="TMicro" ref="0x1107b0c10"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x111502930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x1114ff020" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x1114ff020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b08b8"/>
            <typename><typedef-ref name="TMicro" ref="0x1107b0c10"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x1114ffd70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x111556410" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x111556410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b08b8"/>
            <typename><typedef-ref name="TMicro" ref="0x1107b0c10"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x111554190"/>
        <function-ref name="clearOverflow" scoped="" ref="0x111554aa0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x111554618"/>
        <function-ref name="overflow" scoped="" ref="0x111553020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x111550790" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x111550790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b08b8"/>
            <typename><typedef-ref name="TMicro" ref="0x1107b0c10"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x11154f578"/>
        <function-ref name="clearOverflow" scoped="" ref="0x11154e020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x11154fa00"/>
        <function-ref name="overflow" scoped="" ref="0x11154e4a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x11154ade8" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x11154ade8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x111549170"/>
        <function-ref name="setClockSource" scoped="" ref="0x1115492f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x111549480"/>
        <function-ref name="get" scoped="" ref="0x111549608"/>
        <function-ref name="disableEvents" scoped="" ref="0x111549790"/>
        <function-ref name="clearOverflow" scoped="" ref="0x111549918"/>
        <function-ref name="getMode" scoped="" ref="0x111549aa0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x111549c28"/>
        <function-ref name="overflow" scoped="" ref="0x111549db0"/>
        <function-ref name="setMode" scoped="" ref="0x111548020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x1115481a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x11154ce08" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x11154ce08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b08b8"/>
            <typename><typedef-ref name="TMicro" ref="0x1107b0c10"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x11154bbe8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x11154a548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x11154a0c0"/>
        <function-ref name="overflow" scoped="" ref="0x11154a9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x11152c828" loc="3:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x11152c828"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11152cb78"/>
        <function-ref name="isInput" scoped="" ref="0x11152cd00"/>
        <function-ref name="toggle" scoped="" ref="0x111544020"/>
        <function-ref name="isOutput" scoped="" ref="0x1115441a8"/>
        <function-ref name="get" scoped="" ref="0x111544330"/>
        <function-ref name="makeOutput" scoped="" ref="0x1115444b8"/>
        <function-ref name="set" scoped="" ref="0x111544640"/>
        <function-ref name="clr" scoped="" ref="0x1115447c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x111542c18" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x111542c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111541020"/>
        <function-ref name="isInput" scoped="" ref="0x1115411a8"/>
        <function-ref name="setResistor" scoped="" ref="0x111541330"/>
        <function-ref name="toggle" scoped="" ref="0x1115414b8"/>
        <function-ref name="isOutput" scoped="" ref="0x111541640"/>
        <function-ref name="getResistor" scoped="" ref="0x1115417c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x111541950"/>
        <function-ref name="get" scoped="" ref="0x111541ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x111541c60"/>
        <function-ref name="getRaw" scoped="" ref="0x111541de8"/>
        <function-ref name="set" scoped="" ref="0x111540020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1115401a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x111540330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1115405b8"/>
        <function-ref name="clr" scoped="" ref="0x111540740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x111543ae8" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x111543ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111543e38"/>
        <function-ref name="isInput" scoped="" ref="0x111542020"/>
        <function-ref name="toggle" scoped="" ref="0x1115421a8"/>
        <function-ref name="isOutput" scoped="" ref="0x111542330"/>
        <function-ref name="get" scoped="" ref="0x1115424b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x111542640"/>
        <function-ref name="set" scoped="" ref="0x1115427c8"/>
        <function-ref name="clr" scoped="" ref="0x111542950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x11153e588" loc="14:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x11153e588"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x11153e8d8"/>
        <function-ref name="stop" scoped="" ref="0x11153ea60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x1115965f8" loc="46:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x1115965f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x111596948"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x111596ad0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x111596c58"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x111596de0"/>
        <function-ref name="setCca" scoped="" ref="0x111595020"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x1115951a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x111592280" loc="47:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x111592280"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x1115925d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x11152f870" loc="45:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x11152f870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x11152fbc0"/>
        <function-ref name="cancel" scoped="" ref="0x11152fd48"/>
        <function-ref name="modify" scoped="" ref="0x111596020"/>
        <function-ref name="sendDone" scoped="" ref="0x1115961a8"/>
        <function-ref name="resend" scoped="" ref="0x111596330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisableRx" ref="0x11158f0d0" loc="49:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DisableRx" scoped="" ref="0x11158f0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisableRx"/>
      </instance>
      <interface-functions>
        <function-ref name="enableRx" scoped="" ref="0x11158f420"/>
        <function-ref name="disableRx" scoped="" ref="0x11158f5a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x11152f0c0" loc="44:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x11152f0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x11152f410"/>
        <function-ref name="stop" scoped="" ref="0x11152f598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x111592988" loc="48:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x111592988"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x111592cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x11158a4b0" loc="51:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x11158a4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x11158a800"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x11158a988"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x11158ab10"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x11158ac98"/>
        <function-ref name="setCca" scoped="" ref="0x11158ae20"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x111589020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x111581150" loc="58:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x111581150"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b0150"/>
            <typename><typedef-ref name="T32khz" ref="0x1107b04a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fbc6020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x111580700"/>
        <function-ref name="clear" scoped="" ref="0x111580de0"/>
        <function-ref name="isValid" scoped="" ref="0x111580020"/>
        <function-ref name="set" scoped="" ref="0x1115784f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x1115653d0" loc="79:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x1115653d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111565720"/>
        <function-ref name="write" scoped="" ref="0x1115658a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x111565c00" loc="80:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x111565c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111564020"/>
        <function-ref name="write" scoped="" ref="0x1115641a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x111589428" loc="52:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x111589428"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x111589778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x111568a90" loc="73:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x111568a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111568de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x111576ba8" loc="60:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x111576ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x111575020"/>
        <function-ref name="disable" scoped="" ref="0x1115751a8"/>
        <function-ref name="captured" scoped="" ref="0x111575330"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x1115754b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x111588648" loc="55:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x111588648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b0150"/>
            <typename><typedef-ref name="T32khz" ref="0x1107b04a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fbc6020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x111585cc0"/>
        <function-ref name="fired" scoped="" ref="0x111587d50"/>
        <function-ref name="startAt" scoped="" ref="0x1115856b8"/>
        <function-ref name="isRunning" scoped="" ref="0x111585230"/>
        <function-ref name="getAlarm" scoped="" ref="0x111584190"/>
        <function-ref name="start" scoped="" ref="0x1115873f0"/>
        <function-ref name="stop" scoped="" ref="0x1115878c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x111584628" loc="56:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x111584628"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x111584978"/>
        <function-ref name="setNetwork" scoped="" ref="0x111584b00"/>
        <function-ref name="getRssi" scoped="" ref="0x111584c88"/>
        <function-ref name="getNetwork" scoped="" ref="0x111584e10"/>
        <function-ref name="getPower" scoped="" ref="0x111583020"/>
        <function-ref name="getLqi" scoped="" ref="0x1115831a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x11156a3b0" loc="68:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x11156a3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11156a700"/>
        <function-ref name="write" scoped="" ref="0x11156a888"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x11156ac20" loc="69:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x11156ac20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111569020"/>
        <function-ref name="write" scoped="" ref="0x1115691a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x1115c6e10" loc="84:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x1115c6e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1115c91a8"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x1115c9330"/>
        <function-ref name="sfd" scoped="" ref="0x1115c94b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x11158b6b8" loc="50:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x11158b6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x11158ba08"/>
        <function-ref name="cancel" scoped="" ref="0x11158bb90"/>
        <function-ref name="modify" scoped="" ref="0x11158bd18"/>
        <function-ref name="sendDone" scoped="" ref="0x11158a020"/>
        <function-ref name="resend" scoped="" ref="0x11158a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x11156cb28" loc="66:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x11156cb28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x11156ce78"/>
        <function-ref name="abortRelease" scoped="" ref="0x11156b030"/>
        <function-ref name="attemptRelease" scoped="" ref="0x11156b1b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x1115671d8" loc="74:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x1115671d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111567728"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x111570b10" loc="62:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x111570b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111570e60"/>
        <function-ref name="isInput" scoped="" ref="0x11156e020"/>
        <function-ref name="toggle" scoped="" ref="0x11156e1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x11156e330"/>
        <function-ref name="get" scoped="" ref="0x11156e4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x11156e640"/>
        <function-ref name="set" scoped="" ref="0x11156e7c8"/>
        <function-ref name="clr" scoped="" ref="0x11156e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x11158d7d0" loc="48:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x11158d7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x11158db20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x1115834d8" loc="57:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x1115834d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x111583828"/>
        <function-ref name="getHeader" scoped="" ref="0x1115839b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x111583b38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x111576020" loc="59:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x111576020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x111576370"/>
        <function-ref name="isSet" scoped="" ref="0x1115764f8"/>
        <function-ref name="cancel" scoped="" ref="0x111576680"/>
        <function-ref name="set" scoped="" ref="0x111576808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x111567ad8" loc="75:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x111567ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111567e28"/>
        <function-ref name="write" scoped="" ref="0x111566020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x11156de68" loc="65:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x11156de68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x11156c1e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x11156c370"/>
        <function-ref name="request" scoped="" ref="0x11156c4f8"/>
        <function-ref name="granted" scoped="" ref="0x11156c680"/>
        <function-ref name="isOwner" scoped="" ref="0x11156c808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x111575800" loc="61:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x111575800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111575c50"/>
        <function-ref name="isInput" scoped="" ref="0x111575dd8"/>
        <function-ref name="toggle" scoped="" ref="0x111570020"/>
        <function-ref name="isOutput" scoped="" ref="0x1115701a8"/>
        <function-ref name="get" scoped="" ref="0x111570330"/>
        <function-ref name="makeOutput" scoped="" ref="0x1115704b8"/>
        <function-ref name="set" scoped="" ref="0x111570640"/>
        <function-ref name="clr" scoped="" ref="0x1115707c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x111564500" loc="81:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x111564500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111564850"/>
        <function-ref name="write" scoped="" ref="0x1115649d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x111564d48" loc="82:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x111564d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1115cb0d8"/>
        <function-ref name="write" scoped="" ref="0x1115cb260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x111569520" loc="70:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x111569520"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111569870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x11156ec98" loc="63:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x11156ec98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11156d020"/>
        <function-ref name="isInput" scoped="" ref="0x11156d1a8"/>
        <function-ref name="toggle" scoped="" ref="0x11156d330"/>
        <function-ref name="isOutput" scoped="" ref="0x11156d4b8"/>
        <function-ref name="get" scoped="" ref="0x11156d640"/>
        <function-ref name="makeOutput" scoped="" ref="0x11156d7c8"/>
        <function-ref name="set" scoped="" ref="0x11156d950"/>
        <function-ref name="clr" scoped="" ref="0x11156dad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x1115c9770" loc="85:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x1115c9770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x1115c9ac0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x1115c9c48"/>
        <function-ref name="led1On" scoped="" ref="0x1115c9dd0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x1115c8020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x1115c81a8"/>
        <function-ref name="get" scoped="" ref="0x1115c8330"/>
        <function-ref name="led1Off" scoped="" ref="0x1115c84b8"/>
        <function-ref name="led2Off" scoped="" ref="0x1115c8ad8"/>
        <function-ref name="set" scoped="" ref="0x1115c8640"/>
        <function-ref name="led0On" scoped="" ref="0x1115c87c8"/>
        <function-ref name="led2On" scoped="" ref="0x1115c8950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x1115683a0" loc="72:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x1115683a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1115686f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x111566aa8" loc="78:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x111566aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111566df8"/>
        <function-ref name="write" scoped="" ref="0x111565020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisableRx" ref="0x1115c5bb8" loc="89:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DisableRx" scoped="" ref="0x1115c5bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisableRx"/>
      </instance>
      <interface-functions>
        <function-ref name="enableRx" scoped="" ref="0x1115c4020"/>
        <function-ref name="disableRx" scoped="" ref="0x1115c41a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x1115c8e78" loc="87:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x1115c8e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1115c51f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x11158de10" loc="49:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x11158de10"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x11158b1a8"/>
        <function-ref name="stop" scoped="" ref="0x11158b330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x11156b528" loc="67:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x11156b528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x11156b878"/>
        <function-ref name="writeDone" scoped="" ref="0x11156ba00"/>
        <function-ref name="write" scoped="" ref="0x11156bb88"/>
        <function-ref name="beginRead" scoped="" ref="0x11156bd10"/>
        <function-ref name="readDone" scoped="" ref="0x11156a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x111569bf0" loc="71:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x111569bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111568020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x1115663a8" loc="77:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x1115663a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1115666f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x111589b70" loc="53:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x111589b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x111588020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x1115c5580" loc="88:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x1115c5580"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1115c58d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x111662a88" loc="69:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x111662a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111661020"/>
        <function-ref name="write" scoped="" ref="0x1116611a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x111603100" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x111603100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111603450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x111665a88" loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x111665a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111665dd8"/>
        <function-ref name="write" scoped="" ref="0x111664020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x111660470" loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x111660470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1116607c0"/>
        <function-ref name="write" scoped="" ref="0x111660948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x111659c10" loc="86:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x111659c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111657020"/>
        <function-ref name="write" scoped="" ref="0x1116571a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x111660c10" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x111660c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11165e020"/>
        <function-ref name="write" scoped="" ref="0x11165e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x11164c2e8" loc="108:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x11164c2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11164c638"/>
        <function-ref name="write" scoped="" ref="0x11164c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x11164e2e8" loc="104:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x11164e2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11164e638"/>
        <function-ref name="write" scoped="" ref="0x11164e7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x1116013a0" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x1116013a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1116016f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x111654470" loc="93:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x111654470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1116547c0"/>
        <function-ref name="write" scoped="" ref="0x111654948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x11164f2e8" loc="102:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x11164f2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11164f638"/>
        <function-ref name="write" scoped="" ref="0x11164f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x111664a88" loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x111664a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111664dd8"/>
        <function-ref name="write" scoped="" ref="0x111663020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x111663a88" loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x111663a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111663dd8"/>
        <function-ref name="write" scoped="" ref="0x111662020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x11165a470" loc="83:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x11165a470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11165a7c0"/>
        <function-ref name="write" scoped="" ref="0x11165a948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x11165cc10" loc="79:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x11165cc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11165b020"/>
        <function-ref name="write" scoped="" ref="0x11165b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x11165e470" loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x11165e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11165e7c0"/>
        <function-ref name="write" scoped="" ref="0x11165e948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x111605a18" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x111605a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x111605d68"/>
        <function-ref name="abortRelease" scoped="" ref="0x111604020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x1116041a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x111600c50" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x111600c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111668020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x1116682e8" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x1116682e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111668738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x111653a38" loc="95:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x111653a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111653d88"/>
        <function-ref name="write" scoped="" ref="0x111652020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x111668a00" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x111668a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111668d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x11164fa88" loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x11164fa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11164fdd8"/>
        <function-ref name="write" scoped="" ref="0x11164e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x111600020" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x111600020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111600370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x111655c10" loc="92:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x111655c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111654020"/>
        <function-ref name="write" scoped="" ref="0x1116541a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x1116632e8" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x1116632e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111663638"/>
        <function-ref name="write" scoped="" ref="0x1116637c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x1116642e8" loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x1116642e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111664638"/>
        <function-ref name="write" scoped="" ref="0x1116647c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x111604a88" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x111604a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111604dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x111656c10" loc="90:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x111656c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111655020"/>
        <function-ref name="write" scoped="" ref="0x1116551a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x111657470" loc="87:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x111657470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1116577c0"/>
        <function-ref name="write" scoped="" ref="0x111657948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x111655470" loc="91:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x111655470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1116557c0"/>
        <function-ref name="write" scoped="" ref="0x111655948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x11164da88" loc="107:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x11164da88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11164ddd8"/>
        <function-ref name="write" scoped="" ref="0x11164c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x11164ea88" loc="105:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x11164ea88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11164edd8"/>
        <function-ref name="write" scoped="" ref="0x11164d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x11165b470" loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x11165b470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11165b7c0"/>
        <function-ref name="write" scoped="" ref="0x11165b948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x111657c10" loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x111657c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111656020"/>
        <function-ref name="write" scoped="" ref="0x1116561a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x111650a88" loc="101:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x111650a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111650dd8"/>
        <function-ref name="write" scoped="" ref="0x11164f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x11165d470" loc="76:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x11165d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11165d7c0"/>
        <function-ref name="write" scoped="" ref="0x11165d948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x11164ca88" loc="111:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x11164ca88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x11164cdd8"/>
        <function-ref name="writeDone" scoped="" ref="0x11164b020"/>
        <function-ref name="write" scoped="" ref="0x11164b1a8"/>
        <function-ref name="beginRead" scoped="" ref="0x11164b330"/>
        <function-ref name="readDone" scoped="" ref="0x11164b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x111604470" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x111604470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1116047c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x1116652e8" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x1116652e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111665638"/>
        <function-ref name="write" scoped="" ref="0x1116657c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x1116622e8" loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x1116622e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111662638"/>
        <function-ref name="write" scoped="" ref="0x1116627c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x11165ac10" loc="84:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x11165ac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111659020"/>
        <function-ref name="write" scoped="" ref="0x1116591a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x11165ec10" loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x11165ec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11165d020"/>
        <function-ref name="write" scoped="" ref="0x11165d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x111659470" loc="85:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x111659470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1116597c0"/>
        <function-ref name="write" scoped="" ref="0x111659948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x111661470" loc="70:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x111661470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1116617c0"/>
        <function-ref name="write" scoped="" ref="0x111661948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x111603718" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x111603718"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111603a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x111661c10" loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x111661c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111660020"/>
        <function-ref name="write" scoped="" ref="0x1116601a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x111606da0" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x111606da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x111605170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1116052f8"/>
        <function-ref name="request" scoped="" ref="0x111605480"/>
        <function-ref name="granted" scoped="" ref="0x111605608"/>
        <function-ref name="isOwner" scoped="" ref="0x111605790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x111667060" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x111667060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1116673b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x111667c90" loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x111667c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111665020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x1116502e8" loc="100:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x1116502e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111650638"/>
        <function-ref name="write" scoped="" ref="0x1116507c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x111652a88" loc="99:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x111652a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111652dd8"/>
        <function-ref name="write" scoped="" ref="0x111650020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x111600638" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x111600638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111600988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x1116522e8" loc="96:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x1116522e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111652638"/>
        <function-ref name="write" scoped="" ref="0x1116527c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x11164d2e8" loc="106:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x11164d2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11164d638"/>
        <function-ref name="write" scoped="" ref="0x11164d7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x11165bc10" loc="81:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x11165bc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11165a020"/>
        <function-ref name="write" scoped="" ref="0x11165a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x111656470" loc="89:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x111656470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1116567c0"/>
        <function-ref name="write" scoped="" ref="0x111656948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x111603d30" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x111603d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1116010d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x1116019b8" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x1116019b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111601d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x11165dc10" loc="77:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x11165dc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11165c020"/>
        <function-ref name="write" scoped="" ref="0x11165c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x111667678" loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x111667678"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1116679c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x11165c470" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x11165c470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11165c7c0"/>
        <function-ref name="write" scoped="" ref="0x11165c948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x111654c10" loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x111654c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1116535e8"/>
        <function-ref name="write" scoped="" ref="0x111653770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x11164b780" loc="112:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x11164b780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x11164bad0"/>
        <function-ref name="writeDone" scoped="" ref="0x11164bc58"/>
        <function-ref name="write" scoped="" ref="0x11164bde0"/>
        <function-ref name="beginRead" scoped="" ref="0x111649020"/>
        <function-ref name="readDone" scoped="" ref="0x1116491a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x11163b4b8" loc="42:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x11163b4b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x11163b808"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x11163b990"/>
        <function-ref name="sfd" scoped="" ref="0x11163bb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisableFifoP" ref="0x111637d80" loc="46:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DisableFifoP" scoped="" ref="0x111637d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisableFifoP"/>
      </instance>
      <interface-functions>
        <function-ref name="enableFifoP" scoped="" ref="0x111639170"/>
        <function-ref name="disableFifoP" scoped="" ref="0x1116392f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x11163bde8" loc="43:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x11163bde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x11163a170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x11163a578" loc="44:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x11163a578"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x11163a8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x11163eba0" loc="41:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x11163eba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x11163b020"/>
        <function-ref name="stop" scoped="" ref="0x11163b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x11169b500" loc="56:../../chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x11169b500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11169b850"/>
        <function-ref name="isInput" scoped="" ref="0x11169b9d8"/>
        <function-ref name="toggle" scoped="" ref="0x11169bb60"/>
        <function-ref name="isOutput" scoped="" ref="0x11169bce8"/>
        <function-ref name="get" scoped="" ref="0x11169be70"/>
        <function-ref name="makeOutput" scoped="" ref="0x11169a020"/>
        <function-ref name="set" scoped="" ref="0x11169a1a8"/>
        <function-ref name="clr" scoped="" ref="0x11169a330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x1116937d8" loc="66:../../chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x1116937d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x111693b28"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x111693cb0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x111693e38"/>
        <function-ref name="syncDone" scoped="" ref="0x111692020"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x1116921a8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x111692330"/>
        <function-ref name="setChannel" scoped="" ref="0x1116924b8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x111692640"/>
        <function-ref name="setPanAddr" scoped="" ref="0x1116927c8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x111692950"/>
        <function-ref name="getExtAddr" scoped="" ref="0x111692ad8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x111692c60"/>
        <function-ref name="sync" scoped="" ref="0x111692de8"/>
        <function-ref name="getChannel" scoped="" ref="0x111691120"/>
        <function-ref name="getPanAddr" scoped="" ref="0x1116912a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x11167b3f8" loc="156:../../chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x11167b3f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x11167b748"/>
        <function-ref name="runTask" scoped="" ref="0x11167b8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x111691870" loc="67:../../chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x111691870"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b0150"/>
            <typename><typedef-ref name="T32khz" ref="0x1107b04a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fbc6020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x111690d40"/>
        <function-ref name="clear" scoped="" ref="0x11168f458"/>
        <function-ref name="isValid" scoped="" ref="0x111690660"/>
        <function-ref name="set" scoped="" ref="0x11168fb38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x11169a690" loc="57:../../chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x11169a690"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11169a9e0"/>
        <function-ref name="isInput" scoped="" ref="0x11169ab68"/>
        <function-ref name="toggle" scoped="" ref="0x11169acf0"/>
        <function-ref name="isOutput" scoped="" ref="0x11169ae78"/>
        <function-ref name="get" scoped="" ref="0x111699030"/>
        <function-ref name="makeOutput" scoped="" ref="0x1116991b8"/>
        <function-ref name="set" scoped="" ref="0x111699340"/>
        <function-ref name="clr" scoped="" ref="0x1116994c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x11168c558" loc="71:../../chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x11168c558"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11168c8a8"/>
        <function-ref name="write" scoped="" ref="0x11168ca30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x11168cd88" loc="72:../../chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x11168cd88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11168b170"/>
        <function-ref name="write" scoped="" ref="0x11168b2f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x11168a020" loc="74:../../chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x11168a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11168a370"/>
        <function-ref name="write" scoped="" ref="0x11168a4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x111694020" loc="64:../../chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x111694020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x111694370"/>
        <function-ref name="setNetwork" scoped="" ref="0x1116944f8"/>
        <function-ref name="getRssi" scoped="" ref="0x111694680"/>
        <function-ref name="getNetwork" scoped="" ref="0x111694808"/>
        <function-ref name="getPower" scoped="" ref="0x111694990"/>
        <function-ref name="getLqi" scoped="" ref="0x111694b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x111634330" loc="49:../../chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x111634330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x111634680"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x111634808"/>
        <function-ref name="sfd" scoped="" ref="0x111634990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisableFifoP" ref="0x11169da80" loc="53:../../chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DisableFifoP" scoped="" ref="0x11169da80"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisableFifoP"/>
      </instance>
      <interface-functions>
        <function-ref name="enableFifoP" scoped="" ref="0x11169ddd0"/>
        <function-ref name="disableFifoP" scoped="" ref="0x11169c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChaseListen" ref="0x1116899e0" loc="79:../../chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChaseListen" scoped="" ref="0x1116899e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChaseListen"/>
      </instance>
      <interface-functions>
        <function-ref name="reboot_rec" scoped="" ref="0x111689d30"/>
        <function-ref name="begin_rec" scoped="" ref="0x111688020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x1116950f0" loc="62:../../chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x1116950f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111695540"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x11169c368" loc="55:../../chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x11169c368"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11169c6b8"/>
        <function-ref name="isInput" scoped="" ref="0x11169c840"/>
        <function-ref name="toggle" scoped="" ref="0x11169c9c8"/>
        <function-ref name="isOutput" scoped="" ref="0x11169cb50"/>
        <function-ref name="get" scoped="" ref="0x11169ccd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x11169ce60"/>
        <function-ref name="set" scoped="" ref="0x11169b020"/>
        <function-ref name="clr" scoped="" ref="0x11169b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x11168a888" loc="75:../../chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x11168a888"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11168add8"/>
        <function-ref name="write" scoped="" ref="0x111689020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1116354a0" loc="47:../../chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1116354a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1116357f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x111694e48" loc="65:../../chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x111694e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x1116931c0"/>
        <function-ref name="getHeader" scoped="" ref="0x111693348"/>
        <function-ref name="getMetadata" scoped="" ref="0x1116934d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x111634c60" loc="50:../../chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x111634c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x11169d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x111697538" loc="60:../../chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x111697538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x111697888"/>
        <function-ref name="immediateRequest" scoped="" ref="0x111697a10"/>
        <function-ref name="request" scoped="" ref="0x111697b98"/>
        <function-ref name="granted" scoped="" ref="0x111697d20"/>
        <function-ref name="isOwner" scoped="" ref="0x111696020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x11168b650" loc="73:../../chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x11168b650"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11168b9a0"/>
        <function-ref name="write" scoped="" ref="0x11168bb28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x111696390" loc="61:../../chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x111696390"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x1116966e0"/>
        <function-ref name="writeDone" scoped="" ref="0x111696868"/>
        <function-ref name="write" scoped="" ref="0x1116969f0"/>
        <function-ref name="beginRead" scoped="" ref="0x111696b78"/>
        <function-ref name="readDone" scoped="" ref="0x111696d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x111689398" loc="76:../../chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x111689398"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1116896e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x11169d428" loc="51:../../chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x11169d428"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x11169d778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x111688a98" loc="83:../../chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x111688a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x111688de8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x111687020"/>
        <function-ref name="led1On" scoped="" ref="0x1116871a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x111687330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x1116874b8"/>
        <function-ref name="get" scoped="" ref="0x111687640"/>
        <function-ref name="led1Off" scoped="" ref="0x1116877c8"/>
        <function-ref name="led2Off" scoped="" ref="0x111687de8"/>
        <function-ref name="set" scoped="" ref="0x111687950"/>
        <function-ref name="led0On" scoped="" ref="0x111687ad8"/>
        <function-ref name="led2On" scoped="" ref="0x111687c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x11168db48" loc="70:../../chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x11168db48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11168c020"/>
        <function-ref name="write" scoped="" ref="0x11168c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x11168d448" loc="69:../../chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x11168d448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11168d798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisableRx" ref="0x111688308" loc="80:../../chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DisableRx" scoped="" ref="0x111688308"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisableRx"/>
      </instance>
      <interface-functions>
        <function-ref name="enableRx" scoped="" ref="0x111688658"/>
        <function-ref name="disableRx" scoped="" ref="0x1116887e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x1116998a8" loc="58:../../chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x1116998a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x111699bf8"/>
        <function-ref name="disable" scoped="" ref="0x111699d80"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x111697020"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x1116971a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x1116958e0" loc="63:../../chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x1116958e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111695c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x111635ae0" loc="48:../../chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x111635ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x111635e30"/>
        <function-ref name="stop" scoped="" ref="0x111634020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x1116e4398" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x1116e4398"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x1116e46e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x1116ed8b0" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x1116ed8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x1116edc00"/>
        <function-ref name="setNetwork" scoped="" ref="0x1116edd88"/>
        <function-ref name="getRssi" scoped="" ref="0x1116ea020"/>
        <function-ref name="getNetwork" scoped="" ref="0x1116ea1a8"/>
        <function-ref name="getPower" scoped="" ref="0x1116ea330"/>
        <function-ref name="getLqi" scoped="" ref="0x1116ea4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x1116e4d80" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x1116e4d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b0150"/>
            <typename><typedef-ref name="T32khz" ref="0x1107b04a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fbc6020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x1116e5278"/>
        <function-ref name="clear" scoped="" ref="0x1116e5958"/>
        <function-ref name="isValid" scoped="" ref="0x1116e7af8"/>
        <function-ref name="set" scoped="" ref="0x1116e3088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x1116e9310" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x1116e9310"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x1116e9660"/>
        <function-ref name="getHeader" scoped="" ref="0x1116e97e8"/>
        <function-ref name="getMetadata" scoped="" ref="0x1116e9970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x1116df870" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x1116df870"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1116dfbc0"/>
        <function-ref name="isSet" scoped="" ref="0x1116dfd48"/>
        <function-ref name="cancel" scoped="" ref="0x1116dd020"/>
        <function-ref name="set" scoped="" ref="0x1116dd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x1116e3c58" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x1116e3c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b1990"/>
            <typename><typedef-ref name="TMilli" ref="0x1107b1ce8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fbc6020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x1116e00f8"/>
        <function-ref name="clear" scoped="" ref="0x1116e07d8"/>
        <function-ref name="isValid" scoped="" ref="0x1116e19f0"/>
        <function-ref name="set" scoped="" ref="0x1116df020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x1116ea850" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x1116ea850"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x1116eaba0"/>
        <function-ref name="noAck" scoped="" ref="0x1116ead28"/>
        <function-ref name="wasAcked" scoped="" ref="0x1116e9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x1116d8320" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x1116d8320"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x1116d8670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x1116da160" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x1116da160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x1116da4b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x1116da638"/>
        <function-ref name="getRssi" scoped="" ref="0x1116da7c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x1116da948"/>
        <function-ref name="getPower" scoped="" ref="0x1116daad0"/>
        <function-ref name="getLqi" scoped="" ref="0x1116dac58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x11173b308" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x11173b308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x11173b658"/>
        <function-ref name="payloadLength" scoped="" ref="0x11173b7e0"/>
        <function-ref name="getPayload" scoped="" ref="0x11173b968"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x11173baf0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x11173bc78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x1116d8d08" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x1116d8d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b0150"/>
            <typename><typedef-ref name="T32khz" ref="0x1107b04a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fbc6020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x1116d61f0"/>
        <function-ref name="clear" scoped="" ref="0x1116d68d0"/>
        <function-ref name="isValid" scoped="" ref="0x1116d7ac0"/>
        <function-ref name="set" scoped="" ref="0x1116d4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x1116d9970" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x1116d9970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x1116d9cc0"/>
        <function-ref name="getHeader" scoped="" ref="0x1116d9e48"/>
        <function-ref name="getMetadata" scoped="" ref="0x1116d8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x11173c6c8" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x11173c6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x11173ca18"/>
        <function-ref name="isSet" scoped="" ref="0x11173cba0"/>
        <function-ref name="cancel" scoped="" ref="0x11173cd28"/>
        <function-ref name="set" scoped="" ref="0x11173b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x11173a1d8" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x11173a1d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b0150"/>
            <typename><typedef-ref name="T32khz" ref="0x1107b04a8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x11173ad58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x111739438" loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x111739438"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b1990"/>
            <typename><typedef-ref name="TMilli" ref="0x1107b1ce8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x111738020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x1116d4bf0" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x1116d4bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b1990"/>
            <typename><typedef-ref name="TMilli" ref="0x1107b1ce8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fbc6020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x11173e088"/>
        <function-ref name="clear" scoped="" ref="0x11173e768"/>
        <function-ref name="isValid" scoped="" ref="0x1116d3970"/>
        <function-ref name="set" scoped="" ref="0x11173ee48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x1116d9020" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x1116d9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x1116d9370"/>
        <function-ref name="noAck" scoped="" ref="0x1116d94f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x1116d9680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x111758020" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x111758020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b0150"/>
            <typename><typedef-ref name="T32khz" ref="0x1107b04a8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x111758ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x111757230" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x111757230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b0150"/>
            <typename><typedef-ref name="T32khz" ref="0x1107b04a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fbc6020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x111756020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x111756930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1117564a8"/>
        <function-ref name="overflow" scoped="" ref="0x111756db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x111752020" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x111752020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b1990"/>
            <typename><typedef-ref name="TMilli" ref="0x1107b1ce8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x11174f2b8"/>
        <function-ref name="fired" scoped="" ref="0x111751978"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x1117506c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x111750278"/>
        <function-ref name="getdt" scoped="" ref="0x11174fb58"/>
        <function-ref name="gett0" scoped="" ref="0x11174f708"/>
        <function-ref name="isRunning" scoped="" ref="0x111751dc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x111752b68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x111750c98"/>
        <function-ref name="startOneShot" scoped="" ref="0x111751088"/>
        <function-ref name="stop" scoped="" ref="0x111751528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x1117aca88" loc="69:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x1117aca88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1117ab020"/>
        <function-ref name="write" scoped="" ref="0x1117ab1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x111748020" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x111748020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111748370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x111742a88" loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x111742a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111742dd8"/>
        <function-ref name="write" scoped="" ref="0x111740020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x1117aa470" loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x1117aa470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1117aa7c0"/>
        <function-ref name="write" scoped="" ref="0x1117aa948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x1117a3c10" loc="86:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x1117a3c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1117a2020"/>
        <function-ref name="write" scoped="" ref="0x1117a21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x1117aac10" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x1117aac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1117a9020"/>
        <function-ref name="write" scoped="" ref="0x1117a91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x1117962e8" loc="108:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x1117962e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111796638"/>
        <function-ref name="write" scoped="" ref="0x1117967c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x1117982e8" loc="104:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x1117982e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111798638"/>
        <function-ref name="write" scoped="" ref="0x1117987c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x1117472e8" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x1117472e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111747638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x11179e470" loc="93:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x11179e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11179e7c0"/>
        <function-ref name="write" scoped="" ref="0x11179e948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x1117992e8" loc="102:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x1117992e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111799638"/>
        <function-ref name="write" scoped="" ref="0x1117997c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x111740a88" loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x111740a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111740dd8"/>
        <function-ref name="write" scoped="" ref="0x11173f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x11173fa88" loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x11173fa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11173fdd8"/>
        <function-ref name="write" scoped="" ref="0x1117ac020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x1117a4470" loc="83:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x1117a4470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1117a47c0"/>
        <function-ref name="write" scoped="" ref="0x1117a4948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x1117a6c10" loc="79:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x1117a6c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1117a5020"/>
        <function-ref name="write" scoped="" ref="0x1117a51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x1117a9470" loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x1117a9470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1117a97c0"/>
        <function-ref name="write" scoped="" ref="0x1117a9948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x11174a8c8" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x11174a8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x11174ac18"/>
        <function-ref name="abortRelease" scoped="" ref="0x11174ada0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x111749020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x111745c50" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x111745c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111744020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x1117442e8" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x1117442e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111744738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x11179da38" loc="95:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x11179da38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11179dd88"/>
        <function-ref name="write" scoped="" ref="0x11179c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x111744a00" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x111744a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111744d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x111799a88" loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x111799a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111799dd8"/>
        <function-ref name="write" scoped="" ref="0x111798020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x111745020" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x111745020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111745370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x11179fc10" loc="92:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x11179fc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11179e020"/>
        <function-ref name="write" scoped="" ref="0x11179e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x11173f2e8" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x11173f2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11173f638"/>
        <function-ref name="write" scoped="" ref="0x11173f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x1117402e8" loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x1117402e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111740638"/>
        <function-ref name="write" scoped="" ref="0x1117407c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x111749900" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x111749900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111749c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x1117a0c10" loc="90:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x1117a0c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11179f020"/>
        <function-ref name="write" scoped="" ref="0x11179f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x1117a2470" loc="87:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x1117a2470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1117a27c0"/>
        <function-ref name="write" scoped="" ref="0x1117a2948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x11179f470" loc="91:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x11179f470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11179f7c0"/>
        <function-ref name="write" scoped="" ref="0x11179f948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x111797a88" loc="107:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x111797a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111797dd8"/>
        <function-ref name="write" scoped="" ref="0x111796020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x111798a88" loc="105:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x111798a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111798dd8"/>
        <function-ref name="write" scoped="" ref="0x111797020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x1117a5470" loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x1117a5470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1117a57c0"/>
        <function-ref name="write" scoped="" ref="0x1117a5948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x1117a2c10" loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x1117a2c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1117a0020"/>
        <function-ref name="write" scoped="" ref="0x1117a01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x11179ba88" loc="101:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x11179ba88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11179bdd8"/>
        <function-ref name="write" scoped="" ref="0x111799020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x1117a7470" loc="76:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x1117a7470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1117a77c0"/>
        <function-ref name="write" scoped="" ref="0x1117a7948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x111796a88" loc="111:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x111796a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x111796dd8"/>
        <function-ref name="writeDone" scoped="" ref="0x111795020"/>
        <function-ref name="write" scoped="" ref="0x1117951a8"/>
        <function-ref name="beginRead" scoped="" ref="0x111795330"/>
        <function-ref name="readDone" scoped="" ref="0x1117954b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x1117492e8" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x1117492e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111749638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x1117422e8" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x1117422e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111742638"/>
        <function-ref name="write" scoped="" ref="0x1117427c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x1117ac2e8" loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x1117ac2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1117ac638"/>
        <function-ref name="write" scoped="" ref="0x1117ac7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x1117a4c10" loc="84:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x1117a4c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1117a3020"/>
        <function-ref name="write" scoped="" ref="0x1117a31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x1117a9c10" loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x1117a9c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1117a7020"/>
        <function-ref name="write" scoped="" ref="0x1117a71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x1117a3470" loc="85:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x1117a3470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1117a37c0"/>
        <function-ref name="write" scoped="" ref="0x1117a3948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x1117ab470" loc="70:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x1117ab470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1117ab7c0"/>
        <function-ref name="write" scoped="" ref="0x1117ab948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x111748638" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x111748638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111748988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x1117abc10" loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x1117abc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1117aa020"/>
        <function-ref name="write" scoped="" ref="0x1117aa1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x11174bc60" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x11174bc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x11174a020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x11174a1a8"/>
        <function-ref name="request" scoped="" ref="0x11174a330"/>
        <function-ref name="granted" scoped="" ref="0x11174a4b8"/>
        <function-ref name="isOwner" scoped="" ref="0x11174a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x111743060" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x111743060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1117433b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x111743c90" loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x111743c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111742020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x11179b2e8" loc="100:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x11179b2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11179b638"/>
        <function-ref name="write" scoped="" ref="0x11179b7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x11179ca88" loc="99:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x11179ca88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11179cdd8"/>
        <function-ref name="write" scoped="" ref="0x11179b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x111745638" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x111745638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111745988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x11179c2e8" loc="96:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x11179c2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11179c638"/>
        <function-ref name="write" scoped="" ref="0x11179c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x1117972e8" loc="106:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x1117972e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111797638"/>
        <function-ref name="write" scoped="" ref="0x1117977c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x1117a5c10" loc="81:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x1117a5c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1117a4020"/>
        <function-ref name="write" scoped="" ref="0x1117a41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x1117a0470" loc="89:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x1117a0470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1117a07c0"/>
        <function-ref name="write" scoped="" ref="0x1117a0948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x111748c50" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x111748c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111747020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x111747900" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x111747900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111747c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x1117a7c10" loc="77:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x1117a7c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1117a6020"/>
        <function-ref name="write" scoped="" ref="0x1117a61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x111743678" loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x111743678"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1117439c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x1117a6470" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x1117a6470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1117a67c0"/>
        <function-ref name="write" scoped="" ref="0x1117a6948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x11179ec10" loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x11179ec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11179d5e8"/>
        <function-ref name="write" scoped="" ref="0x11179d770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x111795780" loc="112:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x111795780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x111795ad0"/>
        <function-ref name="writeDone" scoped="" ref="0x111795c58"/>
        <function-ref name="write" scoped="" ref="0x111795de0"/>
        <function-ref name="beginRead" scoped="" ref="0x111794020"/>
        <function-ref name="readDone" scoped="" ref="0x1117941a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x1117e0268" loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x1117e0268"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x1117e05b8"/>
        <function-ref name="toIdle" scoped="" ref="0x1117e0740"/>
        <function-ref name="isState" scoped="" ref="0x1117e08c8"/>
        <function-ref name="isIdle" scoped="" ref="0x1117e0a50"/>
        <function-ref name="requestState" scoped="" ref="0x1117e0bd8"/>
        <function-ref name="forceState" scoped="" ref="0x1117e0d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x1117d80a0" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="ChaseC.sleepTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x1117d80a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b1990"/>
            <typename><typedef-ref name="TMilli" ref="0x1107b1ce8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1117d42b8"/>
        <function-ref name="fired" scoped="" ref="0x1117d69b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x1117d56c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x1117d5278"/>
        <function-ref name="getdt" scoped="" ref="0x1117d4b58"/>
        <function-ref name="gett0" scoped="" ref="0x1117d4708"/>
        <function-ref name="isRunning" scoped="" ref="0x1117d6e00"/>
        <function-ref name="startPeriodic" scoped="" ref="0x1117d8be8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x1117d5c98"/>
        <function-ref name="startOneShot" scoped="" ref="0x1117d60c0"/>
        <function-ref name="stop" scoped="" ref="0x1117d6560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x1117d25e8" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="ChaseC.delayTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x1117d25e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b1990"/>
            <typename><typedef-ref name="TMilli" ref="0x1107b1ce8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1117ce8f0"/>
        <function-ref name="fired" scoped="" ref="0x1117cf020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x1117cfd10"/>
        <function-ref name="isOneShot" scoped="" ref="0x1117cf8c0"/>
        <function-ref name="getdt" scoped="" ref="0x1117cd1c0"/>
        <function-ref name="gett0" scoped="" ref="0x1117ced40"/>
        <function-ref name="isRunning" scoped="" ref="0x1117cf470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x1117d0158"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x1117ce320"/>
        <function-ref name="startOneShot" scoped="" ref="0x1117d05f8"/>
        <function-ref name="stop" scoped="" ref="0x1117d0a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x1117cbaa0" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="ChaseC.randTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x1117cbaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b1990"/>
            <typename><typedef-ref name="TMilli" ref="0x1107b1ce8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1117c8d60"/>
        <function-ref name="fired" scoped="" ref="0x1117c9470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x1117c81c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x1117c9d10"/>
        <function-ref name="getdt" scoped="" ref="0x1117c7648"/>
        <function-ref name="gett0" scoped="" ref="0x1117c71f8"/>
        <function-ref name="isRunning" scoped="" ref="0x1117c98c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x1117ca620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x1117c8790"/>
        <function-ref name="startOneShot" scoped="" ref="0x1117caac0"/>
        <function-ref name="stop" scoped="" ref="0x1117c9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x1117ead28" loc="29:../../net/ChaseP.nc">
      <component-ref qname="ChaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x1117ead28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1117e90a0"/>
        <function-ref name="isInput" scoped="" ref="0x1117e9228"/>
        <function-ref name="toggle" scoped="" ref="0x1117e93b0"/>
        <function-ref name="isOutput" scoped="" ref="0x1117e9538"/>
        <function-ref name="get" scoped="" ref="0x1117e96c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1117e9848"/>
        <function-ref name="set" scoped="" ref="0x1117e99d0"/>
        <function-ref name="clr" scoped="" ref="0x1117e9b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TailSend" ref="0x111846b08" loc="40:../../net/ChaseP.nc">
      <component-ref qname="ChaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TailSend" scoped="" ref="0x111846b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x111846e58"/>
        <function-ref name="getPayload" scoped="" ref="0x111845020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1118451a8"/>
        <function-ref name="cancel" scoped="" ref="0x111845330"/>
        <function-ref name="sendDone" scoped="" ref="0x1118454b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChaseEnergy" ref="0x1117ef850" loc="18:../../net/ChaseP.nc">
      <component-ref qname="ChaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChaseEnergy" scoped="" ref="0x1117ef850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChaseEnergy"/>
      </instance>
      <interface-functions>
        <function-ref name="getRadioOnTime" scoped="" ref="0x1117efba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChasePacket" ref="0x1117f0a78" loc="16:../../net/ChaseP.nc">
      <component-ref qname="ChaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChasePacket" scoped="" ref="0x1117f0a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChasePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x1117f0dc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sleepTimer" ref="0x1118538e8" loc="32:../../net/ChaseP.nc">
      <component-ref qname="ChaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sleepTimer" scoped="" ref="0x1118538e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b1990"/>
            <typename><typedef-ref name="TMilli" ref="0x1107b1ce8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x11184fbc0"/>
        <function-ref name="fired" scoped="" ref="0x111851238"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x11184f020"/>
        <function-ref name="isOneShot" scoped="" ref="0x111851ad8"/>
        <function-ref name="getdt" scoped="" ref="0x11184e4d8"/>
        <function-ref name="gett0" scoped="" ref="0x11184e088"/>
        <function-ref name="isRunning" scoped="" ref="0x111851688"/>
        <function-ref name="startPeriodic" scoped="" ref="0x111852458"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x11184f5f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x1118528f8"/>
        <function-ref name="stop" scoped="" ref="0x111852d98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TailPacket" ref="0x1118457e8" loc="41:../../net/ChaseP.nc">
      <component-ref qname="ChaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TailPacket" scoped="" ref="0x1118457e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x111845b38"/>
        <function-ref name="payloadLength" scoped="" ref="0x111845cc0"/>
        <function-ref name="getPayload" scoped="" ref="0x111845e48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x111843020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x1118431a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EnergyIndicator" ref="0x1117ea5c0" loc="28:../../net/ChaseP.nc">
      <component-ref qname="ChaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x1117ea5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x1117eaa10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="subReceive" ref="0x1117ed580" loc="23:../../net/ChaseP.nc">
      <component-ref qname="ChaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="subReceive" scoped="" ref="0x1117ed580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1117ed8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x111848430" loc="36:../../net/ChaseP.nc">
      <component-ref qname="ChaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x111848430"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b1990"/>
            <typename><typedef-ref name="TMilli" ref="0x1107b1ce8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x111847020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChaseControl" ref="0x1117f02e8" loc="15:../../net/ChaseP.nc">
      <component-ref qname="ChaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChaseControl" scoped="" ref="0x1117f02e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChaseControl"/>
      </instance>
      <interface-functions>
        <function-ref name="dc_started" scoped="" ref="0x1117f0638"/>
        <function-ref name="dc_start" scoped="" ref="0x1117f07c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x111849a60" loc="34:../../net/ChaseP.nc">
      <component-ref qname="ChaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x111849a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x111849db0"/>
        <function-ref name="rand32" scoped="" ref="0x111848020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x1117ec9c8" loc="25:../../net/ChaseP.nc">
      <component-ref qname="ChaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioControl" scoped="" ref="0x1117ec9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x1117ecd18"/>
        <function-ref name="stopDone" scoped="" ref="0x1117eb020"/>
        <function-ref name="start" scoped="" ref="0x1117eb1a8"/>
        <function-ref name="stop" scoped="" ref="0x1117eb330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChaseListen" ref="0x1117f1b08" loc="14:../../net/ChaseP.nc">
      <component-ref qname="ChaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChaseListen" scoped="" ref="0x1117f1b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChaseListen"/>
      </instance>
      <interface-functions>
        <function-ref name="reboot_rec" scoped="" ref="0x1117f1e58"/>
        <function-ref name="begin_rec" scoped="" ref="0x1117f0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="cc2420_begin_rec" ref="0x111834020" loc="103:../../net/ChaseP.nc">
      <component-ref qname="ChaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="cc2420_begin_rec" scoped="" ref="0x111834020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x111834370"/>
        <function-ref name="runTask" scoped="" ref="0x1118344f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="radio_stop" ref="0x11182f3f0" loc="113:../../net/ChaseP.nc">
      <component-ref qname="ChaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="radio_stop" scoped="" ref="0x11182f3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x11182f740"/>
        <function-ref name="runTask" scoped="" ref="0x11182f8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="pkt_resend" ref="0x111835100" loc="102:../../net/ChaseP.nc">
      <component-ref qname="ChaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="pkt_resend" scoped="" ref="0x111835100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x111835450"/>
        <function-ref name="runTask" scoped="" ref="0x1118355d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="randTimer" ref="0x11184ead0" loc="33:../../net/ChaseP.nc">
      <component-ref qname="ChaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="randTimer" scoped="" ref="0x11184ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b1990"/>
            <typename><typedef-ref name="TMilli" ref="0x1107b1ce8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x11184ad60"/>
        <function-ref name="fired" scoped="" ref="0x11184c470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x11184a1c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x11184cd10"/>
        <function-ref name="getdt" scoped="" ref="0x111849648"/>
        <function-ref name="gett0" scoped="" ref="0x1118491f8"/>
        <function-ref name="isRunning" scoped="" ref="0x11184c8c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x11184d658"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x11184a790"/>
        <function-ref name="startOneShot" scoped="" ref="0x11184daf8"/>
        <function-ref name="stop" scoped="" ref="0x11184c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1117efe18" loc="19:../../net/ChaseP.nc">
      <component-ref qname="ChaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1117efe18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1117ed1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signal_classify" ref="0x111839298" loc="96:../../net/ChaseP.nc">
      <component-ref qname="ChaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signal_classify" scoped="" ref="0x111839298"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1118397e8"/>
        <function-ref name="runTask" scoped="" ref="0x111839970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="start_rand_ippi" ref="0x111834e60" loc="104:../../net/ChaseP.nc">
      <component-ref qname="ChaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="start_rand_ippi" scoped="" ref="0x111834e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1118331e8"/>
        <function-ref name="runTask" scoped="" ref="0x111833370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="radio_start" ref="0x1118305a0" loc="112:../../net/ChaseP.nc">
      <component-ref qname="ChaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="radio_start" scoped="" ref="0x1118305a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1118308f0"/>
        <function-ref name="runTask" scoped="" ref="0x111830a78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChaseDelay" ref="0x1117ef0c0" loc="17:../../net/ChaseP.nc">
      <component-ref qname="ChaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChaseDelay" scoped="" ref="0x1117ef0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChaseDelay"/>
      </instance>
      <interface-functions>
        <function-ref name="getTime" scoped="" ref="0x1117ef410"/>
        <function-ref name="getDelay" scoped="" ref="0x1117ef598"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketIndicator" ref="0x1117ebe78" loc="27:../../net/ChaseP.nc">
      <component-ref qname="ChaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x1117ebe78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x1117ea1f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="subSend" ref="0x1117edc30" loc="24:../../net/ChaseP.nc">
      <component-ref qname="ChaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="subSend" scoped="" ref="0x1117edc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1117ec020"/>
        <function-ref name="cancel" scoped="" ref="0x1117ec1a8"/>
        <function-ref name="modify" scoped="" ref="0x1117ec330"/>
        <function-ref name="sendDone" scoped="" ref="0x1117ec4b8"/>
        <function-ref name="resend" scoped="" ref="0x1117ec640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x111847428" loc="37:../../net/ChaseP.nc">
      <component-ref qname="ChaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x111847428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x111847778"/>
        <function-ref name="led0Toggle" scoped="" ref="0x111847900"/>
        <function-ref name="led1On" scoped="" ref="0x111847a88"/>
        <function-ref name="led1Toggle" scoped="" ref="0x111847c10"/>
        <function-ref name="led2Toggle" scoped="" ref="0x111847d98"/>
        <function-ref name="get" scoped="" ref="0x111846020"/>
        <function-ref name="led1Off" scoped="" ref="0x1118461a8"/>
        <function-ref name="led2Off" scoped="" ref="0x1118467c8"/>
        <function-ref name="set" scoped="" ref="0x111846330"/>
        <function-ref name="led0On" scoped="" ref="0x1118464b8"/>
        <function-ref name="led2On" scoped="" ref="0x111846640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="delayTimer" ref="0x1118587a0" loc="31:../../net/ChaseP.nc">
      <component-ref qname="ChaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="delayTimer" scoped="" ref="0x1118587a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b1990"/>
            <typename><typedef-ref name="TMilli" ref="0x1107b1ce8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x111854a18"/>
        <function-ref name="fired" scoped="" ref="0x111856158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x111856e48"/>
        <function-ref name="isOneShot" scoped="" ref="0x1118569f8"/>
        <function-ref name="getdt" scoped="" ref="0x1118532e8"/>
        <function-ref name="gett0" scoped="" ref="0x111854e68"/>
        <function-ref name="isRunning" scoped="" ref="0x1118565a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x111857370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x111854448"/>
        <function-ref name="startOneShot" scoped="" ref="0x111857810"/>
        <function-ref name="stop" scoped="" ref="0x111857cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisableRx" ref="0x1117eb5d8" loc="26:../../net/ChaseP.nc">
      <component-ref qname="ChaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DisableRx" scoped="" ref="0x1117eb5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisableRx"/>
      </instance>
      <interface-functions>
        <function-ref name="enableRx" scoped="" ref="0x1117eb928"/>
        <function-ref name="disableRx" scoped="" ref="0x1117ebab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signal_detect" ref="0x11183a298" loc="95:../../net/ChaseP.nc">
      <component-ref qname="ChaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signal_detect" scoped="" ref="0x11183a298"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x11183a5e8"/>
        <function-ref name="runTask" scoped="" ref="0x11183a770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="pkt_send_init" ref="0x111838350" loc="100:../../net/ChaseP.nc">
      <component-ref qname="ChaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="pkt_send_init" scoped="" ref="0x111838350"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1118386a0"/>
        <function-ref name="runTask" scoped="" ref="0x111838828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChaseFlood" ref="0x1117f1378" loc="13:../../net/ChaseP.nc">
      <component-ref qname="ChaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChaseFlood" scoped="" ref="0x1117f1378"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChaseFlood"/>
      </instance>
      <interface-functions>
        <function-ref name="init_flood" scoped="" ref="0x1117f16c8"/>
        <function-ref name="pkt_reced" scoped="" ref="0x1117f1850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x1117e9e10" loc="30:../../net/ChaseP.nc">
      <component-ref qname="ChaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x1117e9e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x1118581a8"/>
        <function-ref name="userId" scoped="" ref="0x111858330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="pkt_send" ref="0x111836298" loc="101:../../net/ChaseP.nc">
      <component-ref qname="ChaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="pkt_send" scoped="" ref="0x111836298"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1118365e8"/>
        <function-ref name="runTask" scoped="" ref="0x111836770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x1119b21d0" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="ChaseC.TailSend"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x1119b21d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1119b2520"/>
        <function-ref name="getPayload" scoped="" ref="0x1119b26a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1119b2830"/>
        <function-ref name="cancel" scoped="" ref="0x1119b29b8"/>
        <function-ref name="sendDone" scoped="" ref="0x1119b2b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x1119b2d88" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="ChaseC.TailSend"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x1119b2d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1119b1170"/>
        <function-ref name="payloadLength" scoped="" ref="0x1119b12f8"/>
        <function-ref name="getPayload" scoped="" ref="0x1119b1480"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1119b1608"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x1119b1790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x1119b19d8" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="ChaseC.TailSend"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x1119b19d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x1119b1d28"/>
        <function-ref name="source" scoped="" ref="0x1119b0020"/>
        <function-ref name="address" scoped="" ref="0x1119b01a8"/>
        <function-ref name="destination" scoped="" ref="0x1119b0330"/>
        <function-ref name="setSource" scoped="" ref="0x1119b04b8"/>
        <function-ref name="setDestination" scoped="" ref="0x1119b0640"/>
        <function-ref name="type" scoped="" ref="0x1119b07c8"/>
        <function-ref name="setType" scoped="" ref="0x1119b0950"/>
        <function-ref name="isForMe" scoped="" ref="0x1119b0ad8"/>
        <function-ref name="setGroup" scoped="" ref="0x1119b0c60"/>
        <function-ref name="localGroup" scoped="" ref="0x1119b0de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x1119af0a0" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="ChaseC.TailSend"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x1119af0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x1119af3f0"/>
        <function-ref name="noAck" scoped="" ref="0x1119af578"/>
        <function-ref name="wasAcked" scoped="" ref="0x1119af700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x11237e530" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ChaseC.TailSend.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x11237e530"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x11237e880"/>
        <function-ref name="getPayload" scoped="" ref="0x11237ea08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x11237eb90"/>
        <function-ref name="cancel" scoped="" ref="0x11237ed18"/>
        <function-ref name="sendDone" scoped="" ref="0x11237d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x11237d2c8" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ChaseC.TailSend.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x11237d2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x11237d618"/>
        <function-ref name="getPayload" scoped="" ref="0x11237d7a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x11237d928"/>
        <function-ref name="cancel" scoped="" ref="0x11237dab0"/>
        <function-ref name="sendDone" scoped="" ref="0x11237dc38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x11237de80" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ChaseC.TailSend.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x11237de80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x11237c1f8"/>
        <function-ref name="source" scoped="" ref="0x11237c380"/>
        <function-ref name="address" scoped="" ref="0x11237c508"/>
        <function-ref name="destination" scoped="" ref="0x11237c690"/>
        <function-ref name="setSource" scoped="" ref="0x11237c818"/>
        <function-ref name="setDestination" scoped="" ref="0x11237c9a0"/>
        <function-ref name="type" scoped="" ref="0x11237cb28"/>
        <function-ref name="setType" scoped="" ref="0x11237ccb0"/>
        <function-ref name="isForMe" scoped="" ref="0x11237ce38"/>
        <function-ref name="setGroup" scoped="" ref="0x11237b020"/>
        <function-ref name="localGroup" scoped="" ref="0x11237b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x11191c5d8" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x11191c5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x11191c928"/>
        <function-ref name="getPayload" scoped="" ref="0x11191cab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x11191cc38"/>
        <function-ref name="cancel" scoped="" ref="0x11191cdc0"/>
        <function-ref name="sendDone" scoped="" ref="0x11191b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x1119496f8" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x1119496f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x1104f73b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x111949a68"/>
        <function-ref name="getPayload" scoped="" ref="0x111949bf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x111949d78"/>
        <function-ref name="cancel" scoped="" ref="0x111948020"/>
        <function-ref name="sendDone" scoped="" ref="0x1119481a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x11194a920" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x11194a920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x11194ac90"/>
        <function-ref name="getPayload" scoped="" ref="0x11194ae18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x111949020"/>
        <function-ref name="cancel" scoped="" ref="0x1119491a8"/>
        <function-ref name="sendDone" scoped="" ref="0x111949330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x111947a10" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x111947a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x111947d60"/>
        <function-ref name="payloadLength" scoped="" ref="0x111946020"/>
        <function-ref name="getPayload" scoped="" ref="0x1119461a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x111946330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x1119464b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x111946780" loc="169:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x111946780"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x111946ad0"/>
        <function-ref name="runTask" scoped="" ref="0x111946c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x111945020" loc="126:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x111945020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x111945370"/>
        <function-ref name="runTask" scoped="" ref="0x1119454f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x1119483f0" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x1119483f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x111948740"/>
        <function-ref name="source" scoped="" ref="0x1119488c8"/>
        <function-ref name="address" scoped="" ref="0x111948a50"/>
        <function-ref name="destination" scoped="" ref="0x111948bd8"/>
        <function-ref name="setSource" scoped="" ref="0x111948d60"/>
        <function-ref name="setDestination" scoped="" ref="0x111947020"/>
        <function-ref name="type" scoped="" ref="0x1119471a8"/>
        <function-ref name="setType" scoped="" ref="0x111947330"/>
        <function-ref name="isForMe" scoped="" ref="0x1119474b8"/>
        <function-ref name="setGroup" scoped="" ref="0x111947640"/>
        <function-ref name="localGroup" scoped="" ref="0x1119477c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChaseEnergy" ref="0x111991d70" loc="16:ChaseTestC.nc">
      <component-ref qname="ChaseTestC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChaseEnergy" scoped="" ref="0x111991d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChaseEnergy"/>
      </instance>
      <interface-functions>
        <function-ref name="getRadioOnTime" scoped="" ref="0x1119900f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChasePacket" ref="0x11199da88" loc="9:ChaseTestC.nc">
      <component-ref qname="ChaseTestC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChasePacket" scoped="" ref="0x11199da88"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChasePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x11199ddd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x111997a50" loc="12:ChaseTestC.nc">
      <component-ref qname="ChaseTestC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x111997a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x111997da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x111996188" loc="13:ChaseTestC.nc">
      <component-ref qname="ChaseTestC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x111996188"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x1119964d8"/>
        <function-ref name="stopDone" scoped="" ref="0x111996660"/>
        <function-ref name="start" scoped="" ref="0x1119967e8"/>
        <function-ref name="stop" scoped="" ref="0x111996970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="energySerialSend" ref="0x11198dc78" loc="23:ChaseTestC.nc">
      <component-ref qname="ChaseTestC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="energySerialSend" scoped="" ref="0x11198dc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x11198c020"/>
        <function-ref name="getPayload" scoped="" ref="0x11198c1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x11198c330"/>
        <function-ref name="cancel" scoped="" ref="0x11198c4b8"/>
        <function-ref name="sendDone" scoped="" ref="0x11198c640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChaseControl" ref="0x11199d2f8" loc="8:ChaseTestC.nc">
      <component-ref qname="ChaseTestC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChaseControl" scoped="" ref="0x11199d2f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChaseControl"/>
      </instance>
      <interface-functions>
        <function-ref name="dc_started" scoped="" ref="0x11199d648"/>
        <function-ref name="dc_start" scoped="" ref="0x11199d7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="delaySerialSend" ref="0x11198ee68" loc="22:ChaseTestC.nc">
      <component-ref qname="ChaseTestC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="delaySerialSend" scoped="" ref="0x11198ee68"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x11198d2e8"/>
        <function-ref name="getPayload" scoped="" ref="0x11198d470"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x11198d5f8"/>
        <function-ref name="cancel" scoped="" ref="0x11198d780"/>
        <function-ref name="sendDone" scoped="" ref="0x11198d908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x11199c0c0" loc="10:ChaseTestC.nc">
      <component-ref qname="ChaseTestC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x11199c0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x11199c410"/>
        <function-ref name="rand32" scoped="" ref="0x11199c598"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="energySerialPkt" ref="0x11198a380" loc="26:ChaseTestC.nc">
      <component-ref qname="ChaseTestC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="energySerialPkt" scoped="" ref="0x11198a380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x11198a6d0"/>
        <function-ref name="payloadLength" scoped="" ref="0x11198a858"/>
        <function-ref name="getPayload" scoped="" ref="0x11198a9e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x11198ab68"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x11198acf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="floodTimer" ref="0x11199ca08" loc="11:ChaseTestC.nc">
      <component-ref qname="ChaseTestC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="floodTimer" scoped="" ref="0x11199ca08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b1990"/>
            <typename><typedef-ref name="TMilli" ref="0x1107b1ce8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x111998d60"/>
        <function-ref name="fired" scoped="" ref="0x11199a470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x1119981c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x11199ad10"/>
        <function-ref name="getdt" scoped="" ref="0x111997648"/>
        <function-ref name="gett0" scoped="" ref="0x1119971f8"/>
        <function-ref name="isRunning" scoped="" ref="0x11199a8c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x11199b578"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x111998790"/>
        <function-ref name="startOneShot" scoped="" ref="0x11199ba18"/>
        <function-ref name="stop" scoped="" ref="0x11199a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChaseDelay" ref="0x1119903a0" loc="17:ChaseTestC.nc">
      <component-ref qname="ChaseTestC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChaseDelay" scoped="" ref="0x1119903a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChaseDelay"/>
      </instance>
      <interface-functions>
        <function-ref name="getTime" scoped="" ref="0x1119906f0"/>
        <function-ref name="getDelay" scoped="" ref="0x111990878"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="floodSerialSend" ref="0x11198e198" loc="21:ChaseTestC.nc">
      <component-ref qname="ChaseTestC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="floodSerialSend" scoped="" ref="0x11198e198"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x11198e4e8"/>
        <function-ref name="getPayload" scoped="" ref="0x11198e670"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x11198e7f8"/>
        <function-ref name="cancel" scoped="" ref="0x11198e980"/>
        <function-ref name="sendDone" scoped="" ref="0x11198eb08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="delaySerialPkt" ref="0x11198b688" loc="25:ChaseTestC.nc">
      <component-ref qname="ChaseTestC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="delaySerialPkt" scoped="" ref="0x11198b688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x11198b9d8"/>
        <function-ref name="payloadLength" scoped="" ref="0x11198bb60"/>
        <function-ref name="getPayload" scoped="" ref="0x11198bce8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x11198be70"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x11198a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="floodSerialPkt" ref="0x11198c998" loc="24:ChaseTestC.nc">
      <component-ref qname="ChaseTestC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="floodSerialPkt" scoped="" ref="0x11198c998"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x11198cce8"/>
        <function-ref name="payloadLength" scoped="" ref="0x11198ce70"/>
        <function-ref name="getPayload" scoped="" ref="0x11198b020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x11198b1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x11198b330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x111990af0" loc="19:ChaseTestC.nc">
      <component-ref qname="ChaseTestC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x111990af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x111990e40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x11198f020"/>
        <function-ref name="led1On" scoped="" ref="0x11198f1a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x11198f330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x11198f4b8"/>
        <function-ref name="get" scoped="" ref="0x11198f640"/>
        <function-ref name="led1Off" scoped="" ref="0x11198f7c8"/>
        <function-ref name="led2Off" scoped="" ref="0x11198fde8"/>
        <function-ref name="set" scoped="" ref="0x11198f950"/>
        <function-ref name="led0On" scoped="" ref="0x11198fad8"/>
        <function-ref name="led2On" scoped="" ref="0x11198fc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="dcTimer" ref="0x111996dc0" loc="15:ChaseTestC.nc">
      <component-ref qname="ChaseTestC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="dcTimer" scoped="" ref="0x111996dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1107b1990"/>
            <typename><typedef-ref name="TMilli" ref="0x1107b1ce8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x111991088"/>
        <function-ref name="fired" scoped="" ref="0x111994708"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x111992470"/>
        <function-ref name="isOneShot" scoped="" ref="0x111992020"/>
        <function-ref name="getdt" scoped="" ref="0x111991928"/>
        <function-ref name="gett0" scoped="" ref="0x1119914d8"/>
        <function-ref name="isRunning" scoped="" ref="0x111994b58"/>
        <function-ref name="startPeriodic" scoped="" ref="0x111995930"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x111992a40"/>
        <function-ref name="startOneShot" scoped="" ref="0x111995dd0"/>
        <function-ref name="stop" scoped="" ref="0x1119942b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChaseFlood" ref="0x11199eb30" loc="7:ChaseTestC.nc">
      <component-ref qname="ChaseTestC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChaseFlood" scoped="" ref="0x11199eb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChaseFlood"/>
      </instance>
      <interface-functions>
        <function-ref name="init_flood" scoped="" ref="0x11199ee80"/>
        <function-ref name="pkt_reced" scoped="" ref="0x11199d030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x1119bf398" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x1119bf398"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1119bf6e8"/>
        <function-ref name="getPayload" scoped="" ref="0x1119bf870"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1119bf9f8"/>
        <function-ref name="cancel" scoped="" ref="0x1119bfb80"/>
        <function-ref name="sendDone" scoped="" ref="0x1119bfd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x1119be020" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x1119be020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1119be370"/>
        <function-ref name="payloadLength" scoped="" ref="0x1119be4f8"/>
        <function-ref name="getPayload" scoped="" ref="0x1119be680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1119be808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x1119be990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x1119bebd8" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x1119bebd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x111a35020"/>
        <function-ref name="source" scoped="" ref="0x111a351a8"/>
        <function-ref name="address" scoped="" ref="0x111a35330"/>
        <function-ref name="destination" scoped="" ref="0x111a354b8"/>
        <function-ref name="setSource" scoped="" ref="0x111a35640"/>
        <function-ref name="setDestination" scoped="" ref="0x111a357c8"/>
        <function-ref name="type" scoped="" ref="0x111a35950"/>
        <function-ref name="setType" scoped="" ref="0x111a35ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x111a35c60"/>
        <function-ref name="setGroup" scoped="" ref="0x111a35de8"/>
        <function-ref name="localGroup" scoped="" ref="0x111a34020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x111a342a8" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x111a342a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x111a345f8"/>
        <function-ref name="noAck" scoped="" ref="0x111a34780"/>
        <function-ref name="wasAcked" scoped="" ref="0x111a34908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x1123ddd00" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x1123ddd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1123dc0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x1123dc228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1123dc3b0"/>
        <function-ref name="cancel" scoped="" ref="0x1123dc538"/>
        <function-ref name="sendDone" scoped="" ref="0x1123dc6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x1123dc968" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x1123dc968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1123dccb8"/>
        <function-ref name="getPayload" scoped="" ref="0x1123dce40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1123db020"/>
        <function-ref name="cancel" scoped="" ref="0x1123db1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x1123db330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x1123db578" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x1123db578"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x1123db8c8"/>
        <function-ref name="source" scoped="" ref="0x1123dba50"/>
        <function-ref name="address" scoped="" ref="0x1123dbbd8"/>
        <function-ref name="destination" scoped="" ref="0x1123dbd60"/>
        <function-ref name="setSource" scoped="" ref="0x1123da020"/>
        <function-ref name="setDestination" scoped="" ref="0x1123da1a8"/>
        <function-ref name="type" scoped="" ref="0x1123da330"/>
        <function-ref name="setType" scoped="" ref="0x1123da4b8"/>
        <function-ref name="isForMe" scoped="" ref="0x1123da640"/>
        <function-ref name="setGroup" scoped="" ref="0x1123da7c8"/>
        <function-ref name="localGroup" scoped="" ref="0x1123da950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x111a31c28" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/QueueC.nc">
      <component-ref qname="PrintfC.QueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x111a31c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x111a0d960"/>
        <function-ref name="enqueue" scoped="" ref="0x111a0c680"/>
        <function-ref name="element" scoped="" ref="0x111a0ccb0"/>
        <function-ref name="full" scoped="" ref="0x111a30c38"/>
        <function-ref name="maxSize" scoped="" ref="0x111a0d510"/>
        <function-ref name="dequeue" scoped="" ref="0x111a0c020"/>
        <function-ref name="empty" scoped="" ref="0x111a307e8"/>
        <function-ref name="size" scoped="" ref="0x111a0d0c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x111a064e8" loc="93:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x111a064e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x111a021f8"/>
        <function-ref name="enqueue" scoped="" ref="0x111a01020"/>
        <function-ref name="element" scoped="" ref="0x111a01650"/>
        <function-ref name="full" scoped="" ref="0x111a054d8"/>
        <function-ref name="maxSize" scoped="" ref="0x111a05d78"/>
        <function-ref name="dequeue" scoped="" ref="0x111a02858"/>
        <function-ref name="empty" scoped="" ref="0x111a05088"/>
        <function-ref name="size" scoped="" ref="0x111a05928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x111a01cc8" loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x111a01cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x111a000a0"/>
        <function-ref name="getPayload" scoped="" ref="0x111a00228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x111a003b0"/>
        <function-ref name="cancel" scoped="" ref="0x111a00538"/>
        <function-ref name="sendDone" scoped="" ref="0x111a006c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x111a00948" loc="95:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x111a00948"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x111a00c98"/>
        <function-ref name="payloadLength" scoped="" ref="0x111a00e20"/>
        <function-ref name="getPayload" scoped="" ref="0x1119ff020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1119ff1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x1119ff330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="retrySend" ref="0x1119fa9a8" loc="114:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="retrySend" scoped="" ref="0x1119fa9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1119facf8"/>
        <function-ref name="runTask" scoped="" ref="0x1119fae80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x111a075a8" loc="89:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x111a075a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x111a078f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x1119ff5a8" loc="96:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x1119ff5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x1119ff8f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x1119ffa80"/>
        <function-ref name="led1On" scoped="" ref="0x1119ffc08"/>
        <function-ref name="led1Toggle" scoped="" ref="0x1119ffd90"/>
        <function-ref name="led2Toggle" scoped="" ref="0x1119fd020"/>
        <function-ref name="get" scoped="" ref="0x1119fd1a8"/>
        <function-ref name="led1Off" scoped="" ref="0x1119fd330"/>
        <function-ref name="led2Off" scoped="" ref="0x1119fd950"/>
        <function-ref name="set" scoped="" ref="0x1119fd4b8"/>
        <function-ref name="led0On" scoped="" ref="0x1119fd640"/>
        <function-ref name="led2On" scoped="" ref="0x1119fd7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x111a04c10" loc="90:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x111a04c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x111a06020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x111a5a400" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x111a5a400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x111a5a750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x111a59678" loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x111a59678"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x111a599c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x111a59c98" loc="95:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x111a59c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x111a56020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x111a51358" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x111a51358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x111a516a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x111a51a38" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x111a51a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x111a51d88"/>
        <function-ref name="stopDone" scoped="" ref="0x111a4e020"/>
        <function-ref name="start" scoped="" ref="0x111a4e1a8"/>
        <function-ref name="stop" scoped="" ref="0x111a4e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x111a57020" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="ChaseTestAppC.floodSerialSend"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x111a57020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x111a57370"/>
        <function-ref name="getPayload" scoped="" ref="0x111a574f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x111a57680"/>
        <function-ref name="cancel" scoped="" ref="0x111a57808"/>
        <function-ref name="sendDone" scoped="" ref="0x111a57990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x111a57bd8" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="ChaseTestAppC.floodSerialSend"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x111a57bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x111a48020"/>
        <function-ref name="payloadLength" scoped="" ref="0x111a481a8"/>
        <function-ref name="getPayload" scoped="" ref="0x111a48330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x111a484b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x111a48640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x111a48888" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="ChaseTestAppC.floodSerialSend"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x111a48888"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x111a48bd8"/>
        <function-ref name="source" scoped="" ref="0x111a48d60"/>
        <function-ref name="address" scoped="" ref="0x111a47020"/>
        <function-ref name="destination" scoped="" ref="0x111a471a8"/>
        <function-ref name="setSource" scoped="" ref="0x111a47330"/>
        <function-ref name="setDestination" scoped="" ref="0x111a474b8"/>
        <function-ref name="type" scoped="" ref="0x111a47640"/>
        <function-ref name="setType" scoped="" ref="0x111a477c8"/>
        <function-ref name="isForMe" scoped="" ref="0x111a47950"/>
        <function-ref name="setGroup" scoped="" ref="0x111a47ad8"/>
        <function-ref name="localGroup" scoped="" ref="0x111a47c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x111a46020" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="ChaseTestAppC.floodSerialSend"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x111a46020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x111a46370"/>
        <function-ref name="noAck" scoped="" ref="0x111a464f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x111a46680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x11245b188" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ChaseTestAppC.floodSerialSend.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x11245b188"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x11245b4d8"/>
        <function-ref name="getPayload" scoped="" ref="0x11245b660"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x11245b7e8"/>
        <function-ref name="cancel" scoped="" ref="0x11245b970"/>
        <function-ref name="sendDone" scoped="" ref="0x11245baf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x11245bda0" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ChaseTestAppC.floodSerialSend.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x11245bda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x112459170"/>
        <function-ref name="getPayload" scoped="" ref="0x1124592f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x112459480"/>
        <function-ref name="cancel" scoped="" ref="0x112459608"/>
        <function-ref name="sendDone" scoped="" ref="0x112459790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x1124599d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ChaseTestAppC.floodSerialSend.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x1124599d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x112459d28"/>
        <function-ref name="source" scoped="" ref="0x112458020"/>
        <function-ref name="address" scoped="" ref="0x1124581a8"/>
        <function-ref name="destination" scoped="" ref="0x112458330"/>
        <function-ref name="setSource" scoped="" ref="0x1124584b8"/>
        <function-ref name="setDestination" scoped="" ref="0x112458640"/>
        <function-ref name="type" scoped="" ref="0x1124587c8"/>
        <function-ref name="setType" scoped="" ref="0x112458950"/>
        <function-ref name="isForMe" scoped="" ref="0x112458ad8"/>
        <function-ref name="setGroup" scoped="" ref="0x112458c60"/>
        <function-ref name="localGroup" scoped="" ref="0x112458de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x111a447b0" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="ChaseTestAppC.delaySerialSend"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x111a447b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x111a44b00"/>
        <function-ref name="getPayload" scoped="" ref="0x111a44c88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x111a44e10"/>
        <function-ref name="cancel" scoped="" ref="0x111a43020"/>
        <function-ref name="sendDone" scoped="" ref="0x111a431a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x111a433f0" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="ChaseTestAppC.delaySerialSend"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x111a433f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x111a43740"/>
        <function-ref name="payloadLength" scoped="" ref="0x111a438c8"/>
        <function-ref name="getPayload" scoped="" ref="0x111a43a50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x111a43bd8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x111a43d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x111a42020" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="ChaseTestAppC.delaySerialSend"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x111a42020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x111a42370"/>
        <function-ref name="source" scoped="" ref="0x111a424f8"/>
        <function-ref name="address" scoped="" ref="0x111a42680"/>
        <function-ref name="destination" scoped="" ref="0x111a42808"/>
        <function-ref name="setSource" scoped="" ref="0x111a42990"/>
        <function-ref name="setDestination" scoped="" ref="0x111a42b18"/>
        <function-ref name="type" scoped="" ref="0x111a42ca0"/>
        <function-ref name="setType" scoped="" ref="0x111a42e28"/>
        <function-ref name="isForMe" scoped="" ref="0x111a41020"/>
        <function-ref name="setGroup" scoped="" ref="0x111a411a8"/>
        <function-ref name="localGroup" scoped="" ref="0x111a41330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x111a415b8" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="ChaseTestAppC.delaySerialSend"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x111a415b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x111a41908"/>
        <function-ref name="noAck" scoped="" ref="0x111a41a90"/>
        <function-ref name="wasAcked" scoped="" ref="0x111a41c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x112443958" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ChaseTestAppC.delaySerialSend.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x112443958"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x112443ca8"/>
        <function-ref name="getPayload" scoped="" ref="0x112443e30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x112442020"/>
        <function-ref name="cancel" scoped="" ref="0x1124421a8"/>
        <function-ref name="sendDone" scoped="" ref="0x112442330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x1124425d8" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ChaseTestAppC.delaySerialSend.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x1124425d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x112442928"/>
        <function-ref name="getPayload" scoped="" ref="0x112442ab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x112442c38"/>
        <function-ref name="cancel" scoped="" ref="0x112442dc0"/>
        <function-ref name="sendDone" scoped="" ref="0x112441020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x112441268" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ChaseTestAppC.delaySerialSend.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x112441268"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x1124415b8"/>
        <function-ref name="source" scoped="" ref="0x112441740"/>
        <function-ref name="address" scoped="" ref="0x1124418c8"/>
        <function-ref name="destination" scoped="" ref="0x112441a50"/>
        <function-ref name="setSource" scoped="" ref="0x112441bd8"/>
        <function-ref name="setDestination" scoped="" ref="0x112441d60"/>
        <function-ref name="type" scoped="" ref="0x112440020"/>
        <function-ref name="setType" scoped="" ref="0x1124401a8"/>
        <function-ref name="isForMe" scoped="" ref="0x112440330"/>
        <function-ref name="setGroup" scoped="" ref="0x1124404b8"/>
        <function-ref name="localGroup" scoped="" ref="0x112440640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x111a3e060" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="ChaseTestAppC.energySerialSend"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x111a3e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x111a3e3b0"/>
        <function-ref name="getPayload" scoped="" ref="0x111a3e538"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x111a3e6c0"/>
        <function-ref name="cancel" scoped="" ref="0x111a3e848"/>
        <function-ref name="sendDone" scoped="" ref="0x111a3e9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x111a3ec18" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="ChaseTestAppC.energySerialSend"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x111a3ec18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x111a3c020"/>
        <function-ref name="payloadLength" scoped="" ref="0x111a3c1a8"/>
        <function-ref name="getPayload" scoped="" ref="0x111a3c330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x111a3c4b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x111a3c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x111a3c888" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="ChaseTestAppC.energySerialSend"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x111a3c888"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x111a3cbd8"/>
        <function-ref name="source" scoped="" ref="0x111a3cd60"/>
        <function-ref name="address" scoped="" ref="0x111a3b020"/>
        <function-ref name="destination" scoped="" ref="0x111a3b1a8"/>
        <function-ref name="setSource" scoped="" ref="0x111a3b330"/>
        <function-ref name="setDestination" scoped="" ref="0x111a3b4b8"/>
        <function-ref name="type" scoped="" ref="0x111a3b640"/>
        <function-ref name="setType" scoped="" ref="0x111a3b7c8"/>
        <function-ref name="isForMe" scoped="" ref="0x111a3b950"/>
        <function-ref name="setGroup" scoped="" ref="0x111a3bad8"/>
        <function-ref name="localGroup" scoped="" ref="0x111a3bc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x111a3a020" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="ChaseTestAppC.energySerialSend"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x111a3a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x111a3a370"/>
        <function-ref name="noAck" scoped="" ref="0x111a3a4f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x111a3a680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x11242de68" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ChaseTestAppC.energySerialSend.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x11242de68"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x11242b1e8"/>
        <function-ref name="getPayload" scoped="" ref="0x11242b370"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x11242b4f8"/>
        <function-ref name="cancel" scoped="" ref="0x11242b680"/>
        <function-ref name="sendDone" scoped="" ref="0x11242b808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x11242bab0" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ChaseTestAppC.energySerialSend.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x11242bab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x11242be00"/>
        <function-ref name="getPayload" scoped="" ref="0x112429020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1124291a8"/>
        <function-ref name="cancel" scoped="" ref="0x112429330"/>
        <function-ref name="sendDone" scoped="" ref="0x1124294b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x112429700" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ChaseTestAppC.energySerialSend.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x112429700"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x112429a50"/>
        <function-ref name="source" scoped="" ref="0x112429bd8"/>
        <function-ref name="address" scoped="" ref="0x112429d60"/>
        <function-ref name="destination" scoped="" ref="0x112428020"/>
        <function-ref name="setSource" scoped="" ref="0x1124281a8"/>
        <function-ref name="setDestination" scoped="" ref="0x112428330"/>
        <function-ref name="type" scoped="" ref="0x1124284b8"/>
        <function-ref name="setType" scoped="" ref="0x112428640"/>
        <function-ref name="isForMe" scoped="" ref="0x1124287c8"/>
        <function-ref name="setGroup" scoped="" ref="0x112428950"/>
        <function-ref name="localGroup" scoped="" ref="0x112428ad8"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x1103448c0" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x110342580" loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x11036e328" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x1103706f0" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x11036fbc8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x110370070" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x110370e00" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x110354328" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x1103549a8" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x11036f500" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x10ff99b08" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x10fef8ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x1103b6ae0" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x1103b6870" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x1103b9178" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x110367978"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x110366858"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x1103b5328" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x1103b4178" loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x1103b6178" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x1103b5a00" loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x1103b98b0" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x1103b8020" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x1103b89f0" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x110367978"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x110366858"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x1103b8780" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x110367978"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x110366858"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x1103c9328" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x1103c66e8" loc="79:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x1103c6478" loc="79:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x1103c5290" loc="86:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="81:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x1103c5020" loc="86:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x1103c7cf8" loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x1103c7568" loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x1103c9c50" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x1103c99e0" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x1103b2a20" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x1103ae378" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x1103ae108" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x1103aecd8" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x1103aea68" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x1103cd6e0" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x1103cd470" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x1103cdd68" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x1103a0ae8" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x1103bc338" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x1103bc0c8" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x11039f258" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x1103a2020" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x11039f930" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x1103a2e28" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x1103a0460" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x1103a2750" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x1103a1500" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x1103a1da0" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x1103a1b30" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x1103bccd0" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x1103bca60" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x1103e3dc0" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x1102ff1d8" loc="76:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x1101c1490" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x10fe3c020" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x10fe47020" loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x10fe3c718" loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x10fe4fba0" loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x10fe4e3e0" loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x11050c5b8" loc="113:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x11050c348" loc="113:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x11050ba40" loc="138:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x11050b7d0" loc="138:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x11050f9a0" loc="104:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x11050cda0" loc="130:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x11055d2f0" loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x1104f7b18"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x11055f990" loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x1104f7b18"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x11055fcf0" loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x11055d060" loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x110559628" loc="135:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="126:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x110559060" loc="135:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x110559370" loc="135:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x110558828" loc="123:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="113:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x11055c5b8" loc="96:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="82:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x11055c348" loc="96:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x11055ba00" loc="110:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="98:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x11055b458" loc="110:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x11055b780" loc="110:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
      <documentation loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x110550838" loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1105505c8" loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x11054f830" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x11054f5c0" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x110573948" loc="126:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="109:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x110573380" loc="126:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x110573690" loc="126:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x110571ab8" loc="106:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="96:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x110572bd0" loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x110572640" loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x110572950" loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Receive.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x110554a40" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Receive.nc">
        <documentation loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
              <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x110554140" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x110554468" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x110554778" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x110579428" loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x110579b60" loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x110577328" loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x1105761d8" loc="83:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x110575810" loc="100:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x110599020" loc="117:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x110577a40" loc="77:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x110599b20" loc="134:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x1105998b0" loc="134:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x11057acd8" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x110576948" loc="89:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x1105750d8" loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x110581520" loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1105812b0" loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x110580630" loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1105803c0" loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x11057e700" loc="85:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x11057e490" loc="85:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x110586c60" loc="177:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x1104f7760"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x1105869f0" loc="177:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x11056ad18" loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x1104f7b18"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x11056aaa8" loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x11056c290" loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x1104f7b18"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x11056cce8" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x1104f7b18"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x11056ca78" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x1105665d8" loc="121:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x1104f7b18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x110566020" loc="121:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x110566358" loc="121:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x1104f7b18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x11056b0b8" loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x1104f7b18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x110568a98" loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x110568dd0" loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x1104f7b18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x1105638c8" loc="147:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x1104f73b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x110563658" loc="147:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x110561b70" loc="162:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x1104f73b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x1105615f0" loc="162:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x1105618f0" loc="162:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x1104f73b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x110565788" loc="136:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x110565518" loc="136:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x1105840b8" loc="187:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x1104f7760"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x110585a80" loc="187:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x110585db0" loc="187:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x1104f7760"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x110584e20" loc="195:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x1104f7760"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x11058fbb0" loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x11058f620" loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x11058f930" loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x1105882d8" loc="125:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="115:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x11058ac90" loc="125:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x110588020" loc="125:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x11058a488" loc="112:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="102:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x11058c0a8" loc="89:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="77:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x11058de08" loc="89:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x11058b5c8" loc="100:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="91:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x11058b020" loc="100:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x11058b348" loc="100:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x1105f12a0" loc="31:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1105f2bb0" loc="31:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x1105f1020" loc="31:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x1105f34a0" loc="15:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x1105f22e0" loc="23:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1105f3cb8" loc="23:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x1105f2060" loc="23:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/StdControl.nc">
      <documentation loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x110600e40" loc="95:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x1105fd600" loc="105:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="97:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x110622328" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x1105ffbd0" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x110605258" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x110603660" loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x110601290" loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x110601020" loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x110603e78" loc="79:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x110605d48" loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x110605ad8" loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x110601a88" loc="100:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x1106026f8" loc="85:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x11060c070" loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x11060c928" loc="81:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x11060d748" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x11060d4d8" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x11060b4b0" loc="91:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x11060b240" loc="91:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x110608030" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x110608bd8" loc="69:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x110608968" loc="69:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x1106076a0" loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x110607430" loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartStream.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x110730b50" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x1107305b0" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1107308d0" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x11072b4e0" loc="79:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x11072b270" loc="79:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x1107292a0" loc="90:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="81:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x11072bc58" loc="90:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x110729020" loc="90:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x11072c258" loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x110728a38" loc="99:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="92:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x110728160" loc="99:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x110728480" loc="99:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x1107287a8" loc="99:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x11072cad0" loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x11072f358" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x11072e9f8" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x11072ed18" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x11072f0c8" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartByte.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x110767af0" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x110767880" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x1107648f8" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x110764340" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x110764678" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x1107c6070" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x1107c6938" loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x1107c5950" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x11078c1e0"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x11078c5e8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Resource.nc">
      <documentation loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x11079a9b8" loc="120:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="104:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x11079ca68" loc="97:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="90:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x11079c178" loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x11079a258" loc="102:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="99:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x1107993e0" loc="128:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="122:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x1107bb020" loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x1107bc6f8" loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x1107b3738" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x1107b34c8" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x1107b7d60" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x1107ec5d0" loc="213:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x1107f7a38" loc="143:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x1107d3020" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x11075f880"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x11075d0d8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x1107d7d48" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x11075f880"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x11075d0d8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x1107cac98" loc="123:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x1107d03f8" loc="70:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x11075a518"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x11075ad40"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x1107d0188" loc="70:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x11075a518"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x11075ad40"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x1107f1c28" loc="180:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x1107ed070" loc="197:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x1107d2a18" loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x11075c608"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x11075cd80"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x1107d0b80" loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x11075a518"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x11075ad40"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x1107cc688" loc="97:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x1107cc418" loc="97:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x1107cecf8" loc="95:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x1107f1558" loc="179:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x1107d2290" loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x11075c608"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x11075cd80"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x1107d2020" loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x11075c608"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x11075cd80"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x1107cfc20" loc="85:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x1107f0328" loc="181:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x1107ce5b8" loc="90:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x1107ce348" loc="90:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x1107cbe18" loc="113:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x1107ca578" loc="118:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x1107f2770" loc="177:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x1107f5720" loc="163:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x1107c9b38" loc="133:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x1107f2e48" loc="178:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x1107f61d8" loc="148:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x1107f09e0" loc="182:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x1107ccdf8" loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x110763130"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x110760088"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x1107ee178" loc="187:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x1107ede48" loc="207:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x1107cf4e0" loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x1107cf270" loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x1107ea020" loc="224:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x1107ecc88" loc="224:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x1107d3788" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x11075f880"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x11075d0d8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x1107c93e0" loc="128:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x1107f68c8" loc="153:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x1107f2020" loc="174:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x11078c1e0"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x11078c5e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x1107f3c78" loc="174:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x11078c1e0"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x11078c5e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x1107f3290" loc="168:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x110771950"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x110771d58"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x1107f3020" loc="168:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x110771950"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x110771d58"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x1107ea868" loc="231:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x1107ee8f8" loc="192:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x1107cb5e8" loc="108:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x1107ed768" loc="202:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x1107f5020" loc="158:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x1107f7328" loc="138:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x1107e6b10" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x1107e6b10"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x1107e6d40" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1107e6d40"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x1107e3620" loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1107e6d40"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x1107e2688" loc="76:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x1107e3e38" loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x1107e2d78" loc="82:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x11086f8c8" loc="95:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x11086e0d8" loc="105:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x11085c178" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x11085c860" loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x11088ae58" loc="110:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x11088abe8" loc="110:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x11085eae0" loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x11085b718" loc="87:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x110889718" loc="117:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x11085b020" loc="85:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x11085d9f0" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x11088bc88" loc="99:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x11085d258" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x110862d08" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x11085be30" loc="92:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x11088a3e0" loc="101:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x11088b598" loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x11085e400" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x110b05020" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x110b056e8" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x110b07290" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x110b044a0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x110b07930" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x110b05da0" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x110b08548" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x110b08bb8" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x110b67720" loc="90:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x110b65020" loc="98:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x110b90590" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x110bb6c48" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x110bb4c58" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x110bb6428" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x110bb4490" loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x110bb3560" loc="81:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x110ba9ac8" loc="79:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x110bb2c58"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x110ba9858" loc="79:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x110bb2c58"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x110badb00" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x110baa5e8" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x110bb2c58"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x110baa378" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x110bb2c58"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x110ba9020" loc="70:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x110bb2c58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x110bff110" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x110c719a0" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x110c719a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x110c68328" loc="136:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fbc6020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x110c6de68" loc="83:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x110c6aad8" loc="114:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10fbc6020"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10fbc6020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x110c6a540" loc="114:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10fbc6020"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x110c6a858" loc="114:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10fbc6020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x110c6bda8" loc="98:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x110c67290" loc="151:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fbc6020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x110c68a48" loc="144:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fbc6020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x110c6b610" loc="92:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x110c6e4a0" loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10fbc6020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x110c6e230" loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10fbc6020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x110c699e0" loc="129:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10fbc6020"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10fbc6020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x110c69448" loc="129:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10fbc6020"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x110c69760" loc="129:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10fbc6020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x110c6d020" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10fbc6020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x110c6ec70" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10fbc6020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x110c6d7c8" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x110c92d70" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x110c92d70"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x110c8f630" loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fbc6020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x110c8a470" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x110c8a470"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x110c8a6a0" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x110c8a6a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x110c85020" loc="109:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x110c8a6a0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x110c871d8" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x110c866c0" loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x110c8a6a0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x110c8a6a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x110c86120" loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x110c8a6a0"/></type-var>
          </variable>
          <variable name="dt" ref="0x110c86440" loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x110c8a6a0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x110c87948" loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x110c857a0" loc="116:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x110c8a6a0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x110c88290" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x110c8a6a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x110c88020" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x110c8a6a0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x110c88a60" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Random.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x110e14020" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x110e156f0" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fbc6020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x110dd3bd0" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x110dd3bd0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x110e186b8" loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x110dd3bd0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x110e18448" loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x110dd3bd0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChaseEnergy" loc="1:../../interface/ChaseEnergy.nc">
      <function command="" provided="0" name="getRadioOnTime" ref="0x110e36598" loc="2:../../interface/ChaseEnergy.nc">
        <interfacedef-ref qname="ChaseEnergy"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fbc6020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChasePacket" loc="1:../../interface/ChasePacket.nc">
      <function command="" provided="0" name="getPayload" ref="0x110e3a878" loc="2:../../interface/ChasePacket.nc">
        <interfacedef-ref qname="ChasePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x110e3a2b0" loc="2:../../interface/ChasePacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x110e3a5c0" loc="2:../../interface/ChasePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChaseControl" loc="1:../../interface/ChaseControl.nc">
      <function event="" provided="0" name="dc_started" ref="0x110e3b020" loc="7:../../interface/ChaseControl.nc">
        <interfacedef-ref qname="ChaseControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="err" ref="0x110e3cc58" loc="7:../../interface/ChaseControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dc_start" ref="0x110e3c588" loc="2:../../interface/ChaseControl.nc">
        <interfacedef-ref qname="ChaseControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChaseListen" loc="1:../../interface/ChaseListen.nc">
      <function event="" provided="0" name="reboot_rec" ref="0x110dfcc30" loc="2:../../interface/ChaseListen.nc">
        <interfacedef-ref qname="ChaseListen"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="begin_rec" ref="0x110df6328" loc="3:../../interface/ChaseListen.nc">
        <interfacedef-ref qname="ChaseListen"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChaseDelay" loc="3:../../interface/ChaseDelay.nc">
      <function command="" provided="0" name="getTime" ref="0x110df7948" loc="4:../../interface/ChaseDelay.nc">
        <interfacedef-ref qname="ChaseDelay"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10fbc6020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="getDelay" ref="0x110e382d0" loc="5:../../interface/ChaseDelay.nc">
        <interfacedef-ref qname="ChaseDelay"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x110dff540"/>
                <typename><typedef-ref name="chase_delay_t" ref="0x110dffb58"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lay" ref="0x110e38060" loc="5:../../interface/ChaseDelay.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x110dff540"/>
                <typename><typedef-ref name="chase_delay_t" ref="0x110dffb58"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChaseFlood" loc="1:../../interface/ChaseFlood.nc">
      <function command="" provided="0" name="init_flood" ref="0x110df9930" loc="2:../../interface/ChaseFlood.nc">
        <interfacedef-ref qname="ChaseFlood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x110df9020" loc="2:../../interface/ChaseFlood.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x110df9330" loc="2:../../interface/ChaseFlood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </variable>
          <variable name="payload" ref="0x110df96a0" loc="2:../../interface/ChaseFlood.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="pkt_reced" ref="0x110df89a8" loc="3:../../interface/ChaseFlood.nc">
        <interfacedef-ref qname="ChaseFlood"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
              <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x110df8060" loc="3:../../interface/ChaseFlood.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x110df8370" loc="3:../../interface/ChaseFlood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </variable>
          <variable name="payload" ref="0x110df86e0" loc="3:../../interface/ChaseFlood.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x110e219f8" loc="95:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x110e21788" loc="95:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x110e24dd0" loc="81:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x110e24b60" loc="81:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x110e25640" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x110e253d0" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x110e26b60" loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x110e268f0" loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x110e24020" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x110e25d88" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x110e22c30" loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x110e229c0" loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x110e4e2a0" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x110e50b70" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x110e4e020" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x110e4a5f0" loc="77:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x110e4a020" loc="77:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x110e4a370" loc="77:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x110e4ed00" loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x10fbc4728"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x110e4ea90" loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x110e4c5e0" loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x110e4c370" loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x110e503e8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x110e50178" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x110e4d7d8" loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x110e4d568" loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x110e590b8" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x110e5aaa8" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x110e5adc0" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x110e58328" loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x110e55958" loc="84:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x110e56b90" loc="84:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x110e553b8" loc="84:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x110e556c8" loc="84:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x110e563f8" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x110e58e00" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x110e56178" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x110e59ac8" loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x110e59858" loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x110e47668" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x110e473c0" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x110e48c08" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x110508b70"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x110505438"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x110e48920" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x110e45880" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x110505ed8"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x1105276c8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x110e45598" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x110e5f020" loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x110e5c020" loc="97:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x110e5e780" loc="90:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x110e61740" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x110e60768" loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x110e5f828" loc="76:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x110e5e020" loc="83:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x110e60020" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/State.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x110e40ce8" loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x110e42458" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x110e40590" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x110e40320" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x110e42b60" loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x110e43290" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x110e43020" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x110e43cb8" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x110e43a48" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x110ec4680" loc="106:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x110ec40c8" loc="106:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x110ec4400" loc="106:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x110ec6178" loc="93:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x110ec7840" loc="87:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x110ec7200" loc="87:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x110ec75c0" loc="87:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x110ecc0a8" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x110ecde00" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x110ec6980" loc="98:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x110ec9990" loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x110ec9720" loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x110ecb108" loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x110ecce40" loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x110ec3828" loc="117:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x110ec8a30" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x110ec87c0" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x110ec3070" loc="112:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x110ecb828" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x110e3ddf0"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x110e34548"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x110ec9020" loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x110ecd6d0" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x110ecc790" loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x110ec8110" loc="77:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Read.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x110ebf2a0" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x110ebf2a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x110ebfad8" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Read.nc">
        <documentation loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x110ebe7c8" loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Read.nc">
        <documentation loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x110ebf2a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x110ebe248" loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x110ebe548" loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x110ebf2a0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x110ee7338" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x11050ee38"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x110ee70c8" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x110ee7d90" loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x11050ee38"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x110ee7b20" loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x110eb1678" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x110e3ddf0"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x110e34548"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x110eef178" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x1104f7b18"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x110eee020" loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x110eef8d8" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x1104f7760"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x110ef1920" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x1104f7760"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x1104f7b18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x110ef1368" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x1104f7760"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x110ef16a0" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x1104f7b18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x110ee0328" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x11050ee38"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x110eec688" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x11050ee38"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x110ef5878" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x110eec0c8" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x110eec3f8" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x110eeade8" loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x11050ee38"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x110eea020" loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x110eea828" loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x110eeab58" loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x110ef3a78" loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x110ef3328" loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x110ef4bc0" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x110ef4378" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x1110020d8" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x111000178" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x111002a00" loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x111002790" loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x1110058b8" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x111030bc0" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x11102e540" loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x111030498" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x11102fd50" loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x11102fae0" loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x110fe5d30" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x11102f378" loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x1111158c8" loc="24:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x1111140d8" loc="31:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x1111148a8" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x111143348" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x111144d58" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x1111430c8" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x11113d2b0" loc="91:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x11113f940" loc="91:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x11113fc70" loc="91:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x11113d020" loc="91:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x111140c50" loc="82:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x11050ee38"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x1111406a0" loc="82:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x1111409d0" loc="82:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x111144020" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x11050ee38"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x111145908" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x111145c38" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x111141948" loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x111141060" loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x111141390" loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x1111416b8" loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x11117a930" loc="70:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x11117a020" loc="70:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x11117a380" loc="70:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x11117a6a0" loc="70:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x111179cc8" loc="82:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x111179060" loc="82:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x1111793c0" loc="82:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1111796e0" loc="82:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x111179a28" loc="83:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x11117f9b8" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x11117f748" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x1111ec360" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x110771950"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x110771d58"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x1111f1338" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x1111f10c8" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x1111f0630" loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x1111f03c0" loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x1111f1b38" loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x1111ef0a8" loc="81:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x1111f0dc8" loc="81:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x1112b6ae0" loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x11126c178" loc="31:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x111262bf0" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x111262980" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x111275da8" loc="11:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x1112b8020" loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x111266020" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x11126e360" loc="28:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x11126b020" loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x11126f3d0" loc="25:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x11126f160" loc="25:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x1112729d8" loc="21:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x11126abc0" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x111261a60" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x1112b63e0" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x1112622a8" loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x1112b11d8" loc="91:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x1112ad710" loc="100:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x111274b80" loc="14:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x11126a4c0" loc="38:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x111268c68" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x11126fc30" loc="27:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x111277c50" loc="7:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x111263b10" loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x1112638a0" loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x111277580" loc="6:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x1112608d8" loc="69:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x1112b4258" loc="81:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x1112af828" loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x1112ad020" loc="97:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x1112b8e40" loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x1112b4928" loc="83:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x111261360" loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x1112b22a8" loc="87:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x111273290" loc="15:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x111265110" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x1112b3750" loc="86:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x1112b7ca8" loc="77:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x111267810" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x1112675a0" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x1112ae020" loc="95:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x1112631d8" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x1112b8730" loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x1112756b0" loc="8:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x1107a7658"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x1107a7a60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x111275440" loc="8:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x1107a7658"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x1107a7a60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x11126bdc8" loc="37:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x1112722d0" loc="19:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x111272060" loc="19:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x1112684e0" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x111268270" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x1112b2a18" loc="90:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x111270a60" loc="24:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x1112739a0" loc="18:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x111265a50" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x1112657e0" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10fbc5b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x1112744d0" loc="12:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x1112b3020" loc="84:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x1112b75a0" loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x1112601d8" loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x111266980" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x111266710" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x11126b6d8" loc="35:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x11126ea40" loc="29:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x1112ae730" loc="96:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x111270338" loc="22:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x1112700c8" loc="22:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x1112b1938" loc="92:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x11126c848" loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x1112af0d8" loc="93:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x1114eb3b0" loc="13:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x1114eb140" loc="13:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x1114d73f0" loc="10:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x1114dbac0" loc="10:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x1114dbe08" loc="10:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1114d7160" loc="10:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x1114d60b8" loc="11:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x1114d7ac8" loc="11:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1114d7dd8" loc="11:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x111523420" loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x111523420"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x111523650" loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x111523650"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x111522118" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x111523650"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x111523e78" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x111523650"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x111595e20" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisableRx" loc="1:../../chips/cc2420/transmit/DisableRx.nc">
      <function command="" provided="0" name="enableRx" ref="0x111594de0" loc="3:../../chips/cc2420/transmit/DisableRx.nc">
        <interfacedef-ref qname="DisableRx"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRx" ref="0x111594770" loc="2:../../chips/cc2420/transmit/DisableRx.nc">
        <interfacedef-ref qname="DisableRx"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x1115822e8" loc="35:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x1115822e8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x111582518" loc="35:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x111582518"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x11157d290" loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x111582518"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x11157d020" loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x11157c370" loc="70:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x11157c100" loc="70:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x11157f0a8" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x111582dc8" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x11157b5e0" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x111582518"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x11157b020" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x11157b360" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x111582518"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x1115c6ac0" loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x1115c6170" loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x1115c6840" loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x1115c7a00" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x1115c7290" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10fbc6020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x1115c7020" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10fbc6020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x1115738e0" loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x111573670" loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x111577990" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x111577720" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x111572720" loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1115724b0" loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x1115717f8" loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x111571588" loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisableFifoP" loc="1:../../chips/cc2420/receive/DisableFifoP.nc">
      <function command="" provided="0" name="enableFifoP" ref="0x111637ae8" loc="3:../../chips/cc2420/receive/DisableFifoP.nc">
        <interfacedef-ref qname="DisableFifoP"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableFifoP" ref="0x111637460" loc="2:../../chips/cc2420/receive/DisableFifoP.nc">
        <interfacedef-ref qname="DisableFifoP"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x1116e69e0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1116e6770" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x11053bc58"/>
                <typename><typedef-ref name="message_t" ref="0x11055f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Queue.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x111a2c140" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x111a2c140"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x111a29728" loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x111a2c140"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x111a27020" loc="97:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="90:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10fe43780"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x111a2c140"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x111a28d78" loc="97:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x111a2c140"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x10fbc0508"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:2"><attribute-ref name="one" ref="0x10fbc0508"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x111a25020" loc="108:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="99:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x111a2c140"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x111a27c50" loc="108:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="full" ref="0x111a2b0d8" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is full.</short>
          <long>&#10; Returns if the queue is full.&#10;&#10; @return Whether the queue is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x111a29020" loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x111a28290" loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="82:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x111a2c140"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x111a2c968" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10fe3f1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x111a2b7f0" loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10fbc5790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/Putchar.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TINYOS_OS_DIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x111a048d8" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/Putchar.nc">
        <documentation loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x111a04668" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>

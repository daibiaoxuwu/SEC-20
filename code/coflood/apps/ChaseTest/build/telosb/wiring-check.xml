<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="13:ChaseTestAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x10806d428"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x106a19940"/></to>
    </wire>
    <wire loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x106a19940"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x106a18c50"/></to>
    </wire>
    <wire loc="14:ChaseTestAppC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x10806db08"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x106be2dc0"/></to>
    </wire>
    <wire loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x106be2dc0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x106cd02e8"/></to>
    </wire>
    <wire loc="15:ChaseTestAppC.nc">
      <from><interface-ref name="floodTimer" scoped="" ref="0x108072490"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x107349a60"/></to>
    </wire>
    <wire loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x107349a60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x1073367d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="16:ChaseTestAppC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x108073a38"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x1074eb350"/></to>
    </wire>
    <wire loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x1074eb350"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x1074e8160"/></to>
    </wire>
    <wire loc="17:ChaseTestAppC.nc">
      <from><interface-ref name="ChaseFlood" scoped="" ref="0x108074418"/></from>
      <to><interface-ref name="ChaseFlood" scoped="" ref="0x1074cfc40"/></to>
    </wire>
    <wire loc="33:../../net/ChaseC.nc">
      <from><interface-ref name="ChaseFlood" scoped="" ref="0x1074cfc40"/></from>
      <to><interface-ref name="ChaseFlood" scoped="" ref="0x107ec8378"/></to>
    </wire>
    <wire loc="18:ChaseTestAppC.nc">
      <from><interface-ref name="ChaseControl" scoped="" ref="0x108074bb8"/></from>
      <to><interface-ref name="ChaseControl" scoped="" ref="0x1075122b8"/></to>
    </wire>
    <wire loc="35:../../net/ChaseC.nc">
      <from><interface-ref name="ChaseControl" scoped="" ref="0x1075122b8"/></from>
      <to><interface-ref name="ChaseControl" scoped="" ref="0x107ec72e8"/></to>
    </wire>
    <wire loc="19:ChaseTestAppC.nc">
      <from><interface-ref name="ChasePacket" scoped="" ref="0x108073460"/></from>
      <to><interface-ref name="ChasePacket" scoped="" ref="0x107511b10"/></to>
    </wire>
    <wire loc="36:../../net/ChaseC.nc">
      <from><interface-ref name="ChasePacket" scoped="" ref="0x107511b10"/></from>
      <to><interface-ref name="ChasePacket" scoped="" ref="0x107ec7a78"/></to>
    </wire>
    <wire loc="20:ChaseTestAppC.nc">
      <from><interface-ref name="ChaseDelay" scoped="" ref="0x108067d30"/></from>
      <to><interface-ref name="ChaseDelay" scoped="" ref="0x10750f568"/></to>
    </wire>
    <wire loc="37:../../net/ChaseC.nc">
      <from><interface-ref name="ChaseDelay" scoped="" ref="0x10750f568"/></from>
      <to><interface-ref name="ChaseDelay" scoped="" ref="0x107ec60c0"/></to>
    </wire>
    <wire loc="21:ChaseTestAppC.nc">
      <from><interface-ref name="ChaseEnergy" scoped="" ref="0x108067730"/></from>
      <to><interface-ref name="ChaseEnergy" scoped="" ref="0x10750d830"/></to>
    </wire>
    <wire loc="38:../../net/ChaseC.nc">
      <from><interface-ref name="ChaseEnergy" scoped="" ref="0x10750d830"/></from>
      <to><interface-ref name="ChaseEnergy" scoped="" ref="0x107ec6850"/></to>
    </wire>
    <wire loc="22:ChaseTestAppC.nc">
      <from><interface-ref name="dcTimer" scoped="" ref="0x10806c780"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1074b2020"/></to>
    </wire>
    <wire loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x1074b2020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x1073367d8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="25:ChaseTestAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x1080664d8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x1071c8ba8"/></to>
    </wire>
    <wire loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x1071c8ba8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x1071e35e8"/></to>
    </wire>
    <wire loc="35:ChaseTestAppC.nc">
      <from><interface-ref name="floodSerialSend" scoped="" ref="0x108065b28"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x10812d020"/></to>
    </wire>
    <wire loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x10812d020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x108b30188"/></to>
    </wire>
    <wire loc="36:ChaseTestAppC.nc">
      <from><interface-ref name="floodSerialPkt" scoped="" ref="0x108062500"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x10812dbd8"/></to>
    </wire>
    <wire loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x10812dbd8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x106c459f8"/></to>
    </wire>
    <wire loc="37:ChaseTestAppC.nc">
      <from><interface-ref name="delaySerialSend" scoped="" ref="0x108064828"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x10811a7b0"/></to>
    </wire>
    <wire loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x10811a7b0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x108b19958"/></to>
    </wire>
    <wire loc="38:ChaseTestAppC.nc">
      <from><interface-ref name="delaySerialPkt" scoped="" ref="0x1080601f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x1081193f0"/></to>
    </wire>
    <wire loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x1081193f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x106c459f8"/></to>
    </wire>
    <wire loc="39:ChaseTestAppC.nc">
      <from><interface-ref name="energySerialSend" scoped="" ref="0x1080636a0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x108113060"/></to>
    </wire>
    <wire loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x108113060"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x108b03e68"/></to>
    </wire>
    <wire loc="40:ChaseTestAppC.nc">
      <from><interface-ref name="energySerialPkt" scoped="" ref="0x10805f020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x108113c18"/></to>
    </wire>
    <wire loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x108113c18"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x106c459f8"/></to>
    </wire>
    <wire loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x106a1bd68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10812f678"/></to>
    </wire>
    <wire loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x106a1bd68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1080dd5a8"/></to>
    </wire>
    <wire loc="69:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x106a1bd68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x107d0c4a0"/></to>
    </wire>
    <wire loc="64:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x106a1bd68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x107c647d0"/></to>
    </wire>
    <wire loc="65:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x106a1bd68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10761e8e8"/></to>
    </wire>
    <wire loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x106a1bd68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1088fb828"/></to>
    </wire>
    <wire loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x106a1bd68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1078935d8"/></to>
    </wire>
    <wire loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x106a1bd68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x107591080"/></to>
    </wire>
    <wire loc="39:../../net/ChaseC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x106a1bd68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x107ec6e18"/></to>
    </wire>
    <wire loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x106a1bd68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1074ee840"/></to>
    </wire>
    <wire loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x106a1bd68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1073700f0"/></to>
    </wire>
    <wire loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x106a1bd68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1086ad080"/></to>
    </wire>
    <wire loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x106a1bd68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x106cd3bb0"/></to>
    </wire>
    <wire loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x106bc2308"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x10659e390"/></to>
    </wire>
    <wire loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x10659e390"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x1069db0c0"/></to>
    </wire>
    <wire loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x106bc2ce0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x106a1acb0"/></to>
    </wire>
    <wire loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x106a1acb0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x106a16e58"/></to>
    </wire>
    <wire loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x106bd9418"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x106a1bd68"/></to>
    </wire>
    <wire loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x106a13568"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x106a14458"/></to>
    </wire>
    <wire loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x106a14458"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x106a312e8"/></to>
    </wire>
    <wire loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x106a13c08"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x106a15bf8"/></to>
    </wire>
    <wire loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x106a12370"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1071f8460"/></to>
    </wire>
    <wire loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x106a312e8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x106a548f0"/></to>
    </wire>
    <wire loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x106a455c0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x106a53020"/></to>
    </wire>
    <wire loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x1067cc020"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x106a52188"/></to>
    </wire>
    <wire loc="113:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x106a91d30"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x106b58c80"/></to>
    </wire>
    <wire loc="126:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x106a9ad30"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x106b51c80"/></to>
    </wire>
    <wire loc="108:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x106aa2558"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x106b3cc58"/></to>
    </wire>
    <wire loc="149:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x106aa6020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x106b5ac58"/></to>
    </wire>
    <wire loc="107:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x106a88e60"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x106b3c020"/></to>
    </wire>
    <wire loc="148:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x106aad6e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x106b5a020"/></to>
    </wire>
    <wire loc="170:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x106ac3020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x106b89c58"/></to>
    </wire>
    <wire loc="154:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x106ab3060"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x106b77c80"/></to>
    </wire>
    <wire loc="99:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x106a8b4d0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x106b01c80"/></to>
    </wire>
    <wire loc="135:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x106aa8020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x106b69c58"/></to>
    </wire>
    <wire loc="134:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x106aafa70"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x106b69020"/></to>
    </wire>
    <wire loc="133:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x106a98120"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x106b49c80"/></to>
    </wire>
    <wire loc="115:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x106aa1558"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x106b56c58"/></to>
    </wire>
    <wire loc="156:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x106aa5020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x106b75c58"/></to>
    </wire>
    <wire loc="140:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x106a97710"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x106b64c80"/></to>
    </wire>
    <wire loc="114:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x106a87bb8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x106b56020"/></to>
    </wire>
    <wire loc="93:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x106a7c060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x106aef798"/></to>
    </wire>
    <wire loc="155:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x106aac558"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x106b75020"/></to>
    </wire>
    <wire loc="106:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x106a92898"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x106b3ec80"/></to>
    </wire>
    <wire loc="161:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x106ab2400"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x106b6fc80"/></to>
    </wire>
    <wire loc="101:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x106a9c668"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x106b43c58"/></to>
    </wire>
    <wire loc="142:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x106aa7020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x106b62c58"/></to>
    </wire>
    <wire loc="100:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x106a88140"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x106b43020"/></to>
    </wire>
    <wire loc="141:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x106aae868"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x106b62020"/></to>
    </wire>
    <wire loc="163:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x106ac4020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x106b6dc58"/></to>
    </wire>
    <wire loc="147:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x106a96ba8"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x106b5cc80"/></to>
    </wire>
    <wire loc="120:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x106a9b520"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x106ae71e8"/></to>
    </wire>
    <wire loc="162:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x106aab3d0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x106b6d020"/></to>
    </wire>
    <wire loc="128:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x106aa9060"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x106b4fc58"/></to>
    </wire>
    <wire loc="169:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x106aaa120"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x106b89020"/></to>
    </wire>
    <wire loc="127:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x106ab0d00"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x106b4f020"/></to>
    </wire>
    <wire loc="168:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x106ab1898"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x106b8bc80"/></to>
    </wire>
    <wire loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x106aed658"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x106aed020"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x106aedc70"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x106b82520"/></to>
    </wire>
    <wire loc="96:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x106aec2e8"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x106b82c68"/></to>
    </wire>
    <wire loc="102:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x106b42a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x106aef798"/></to>
    </wire>
    <wire loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x106b40100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x106aed020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x106b3ba90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x106aef798"/></to>
    </wire>
    <wire loc="110:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x106b38100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x106aed020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x106b55a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x106aef798"/></to>
    </wire>
    <wire loc="117:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x106b53100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x106aed020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x106ae5020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x106ae68a0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x106ae5638"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x106b80418"/></to>
    </wire>
    <wire loc="123:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x106ae5c50"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x106b80b60"/></to>
    </wire>
    <wire loc="129:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x106b4ea90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x106ae71e8"/></to>
    </wire>
    <wire loc="130:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x106b4c100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x106ae68a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x106b68a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x106ae71e8"/></to>
    </wire>
    <wire loc="137:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x106b66100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x106ae68a0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x106b61a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x106ae71e8"/></to>
    </wire>
    <wire loc="144:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x106b5f100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x106ae68a0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x106b7ba90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x106ae71e8"/></to>
    </wire>
    <wire loc="151:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x106b79100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x106ae68a0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x106b74a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x106ae71e8"/></to>
    </wire>
    <wire loc="158:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x106b72100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x106ae68a0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x106b6ca90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x106ae71e8"/></to>
    </wire>
    <wire loc="165:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x106b8d100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x106ae68a0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x106b88a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x106ae71e8"/></to>
    </wire>
    <wire loc="172:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x106b86100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x106ae68a0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x1065a5ca0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1069d9020"/></to>
    </wire>
    <wire loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x1069d64e0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x1066193e0"/></to>
    </wire>
    <wire loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x106cd02e8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x106cc0d50"/></to>
    </wire>
    <wire loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x106c2c9d0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x106c6eb60"/></to>
    </wire>
    <wire loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x106c459f8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x106caf578"/></to>
    </wire>
    <wire loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x106c2a5e0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x106cb19a8"/></to>
    </wire>
    <wire loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x106c540d0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x106cae268"/></to>
    </wire>
    <wire loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x106c5a190"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x106cb0020"/></to>
    </wire>
    <wire loc="69:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x106cd3bb0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x106cc0738"/></to>
    </wire>
    <wire loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x106ccc5a8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x106c46020"/></to>
    </wire>
    <wire loc="69:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x106caebb0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x106ccece8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x106cad8c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x106cce270"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x106cc8ba8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x107315060"/></to>
    </wire>
    <wire loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x106ccece8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x106de8020"/></to>
    </wire>
    <wire loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x106cce270"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x106de9868"/></to>
    </wire>
    <wire loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x106de8db8"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x106cc8ba8"/></to>
    </wire>
    <wire loc="70:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x106ce0d18"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x106ccc5a8"/></to>
    </wire>
    <wire loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x106e12a50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x106ccc5a8"/></to>
    </wire>
    <wire loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x106e09420"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x106ccc5a8"/></to>
    </wire>
    <wire loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x106e136c8"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x106cdeba8"/></to>
    </wire>
    <wire loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x106e12020"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x106ce2918"/></to>
    </wire>
    <wire loc="77:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x106cd8da8"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x106e0eb48"/></to>
    </wire>
    <wire loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x106cd4b00"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x106e0d7f8"/></to>
    </wire>
    <wire loc="17:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x106e0d7f8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x10732cda8"/></to>
    </wire>
    <wire loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x106dfd448"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x106e40020"/></to>
    </wire>
    <wire loc="13:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x106e40020"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x1072ee880"/></to>
    </wire>
    <wire loc="332:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x106d29dd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1065a5ca0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x106d0a8e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1065a5ca0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x106d2b590"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1065a5ca0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x106d4e020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1065a5ca0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x106e10100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1065a5ca0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x106e108a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1065a5ca0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="14:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x106e39210"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x10732e8c8"/></to>
    </wire>
    <wire loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x10732e8c8"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x106e94b00"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x1072ee880"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x106e95570"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x10732d060"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x107329640"/></to>
    </wire>
    <wire loc="19:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x107329c70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1072ef4e0"/></to>
    </wire>
    <wire loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x1072ef4e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x106e9abc8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x1072ee120"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x108321dc8"/></to>
    </wire>
    <wire loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x108321dc8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x1072321c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x106e8fb68"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x10732d060"/></to>
    </wire>
    <wire loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x10831bb90"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x106e92888"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x106e908b8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x1083211d0"/></to>
    </wire>
    <wire loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x1083211d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x107234e70"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x106e8d030"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x10831b430"/></to>
    </wire>
    <wire loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x10831b430"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x1072341c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x106e92888"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x106f2a060"/></to>
    </wire>
    <wire loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x106e94b00"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x106f299e8"/></to>
    </wire>
    <wire loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x106e95570"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x106f2a900"/></to>
    </wire>
    <wire loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x106e9abc8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x106f2b2e8"/></to>
    </wire>
    <wire loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x106f27180"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x106e8fb68"/></to>
    </wire>
    <wire loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x106f28408"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x106e908b8"/></to>
    </wire>
    <wire loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x106f220c8"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x106e8d030"/></to>
    </wire>
    <wire loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x106f277b8"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x106f45ce0"/></to>
    </wire>
    <wire loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x106f45ce0"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x106f3e098"/></to>
    </wire>
    <wire loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x106f22a58"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x1071c5020"/></to>
    </wire>
    <wire loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x1071c5020"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x1071c3e00"/></to>
    </wire>
    <wire loc="70:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x106f1fa30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x1071c8ba8"/></to>
    </wire>
    <wire loc="89:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x106f42528"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x106f3aa68"/></to>
    </wire>
    <wire loc="87:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x106f454f0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x106f417e0"/></to>
    </wire>
    <wire loc="91:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x106f60ad8"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x10704c560"/></to>
    </wire>
    <wire loc="539:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x10704c560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1071253d8"/></to>
    </wire>
    <wire loc="92:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x106f37968"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x10704a560"/></to>
    </wire>
    <wire loc="540:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x10704a560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x107121ca0"/></to>
    </wire>
    <wire loc="93:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x106f5e7e0"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x107048560"/></to>
    </wire>
    <wire loc="541:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x107048560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10711b3d8"/></to>
    </wire>
    <wire loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x106f5c658"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x107044560"/></to>
    </wire>
    <wire loc="543:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x107044560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1070e23d8"/></to>
    </wire>
    <wire loc="95:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x106f59558"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x107046560"/></to>
    </wire>
    <wire loc="542:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x107046560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1070e7ca0"/></to>
    </wire>
    <wire loc="442:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x106fe37f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x107092ca0"/></to>
    </wire>
    <wire loc="455:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x106fcf568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1070d4ca0"/></to>
    </wire>
    <wire loc="531:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x1070247d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1070c63d8"/></to>
    </wire>
    <wire loc="551:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x107035558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10715dca0"/></to>
    </wire>
    <wire loc="532:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x107022660"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1070c2ca0"/></to>
    </wire>
    <wire loc="460:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x106fcb568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1070cbca0"/></to>
    </wire>
    <wire loc="473:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x106fea568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10710dca0"/></to>
    </wire>
    <wire loc="486:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x10700b568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x107117ca0"/></to>
    </wire>
    <wire loc="497:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x107030568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x107166ca0"/></to>
    </wire>
    <wire loc="535:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x10701c560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1070f0ca0"/></to>
    </wire>
    <wire loc="545:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x107042558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10713fca0"/></to>
    </wire>
    <wire loc="557:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x107063560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1071583d8"/></to>
    </wire>
    <wire loc="445:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x106fdd568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1070bc3d8"/></to>
    </wire>
    <wire loc="536:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x10701a560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1070eb3d8"/></to>
    </wire>
    <wire loc="450:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x106fd9568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1070b33d8"/></to>
    </wire>
    <wire loc="463:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x106ff8568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1070f43d8"/></to>
    </wire>
    <wire loc="476:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x106fe4568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1070fe3d8"/></to>
    </wire>
    <wire loc="489:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x107005568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1071433d8"/></to>
    </wire>
    <wire loc="500:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x10702a568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1071583d8"/></to>
    </wire>
    <wire loc="440:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x106fb3b00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10709cca0"/></to>
    </wire>
    <wire loc="453:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x106fd3568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1070a5d08"/></to>
    </wire>
    <wire loc="466:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x106ff2568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1070e7ca0"/></to>
    </wire>
    <wire loc="530:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x107026970"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1070c63d8"/></to>
    </wire>
    <wire loc="548:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x10703b558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1071303d8"/></to>
    </wire>
    <wire loc="555:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x107065558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1071583d8"/></to>
    </wire>
    <wire loc="471:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x106fee568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1070dedd8"/></to>
    </wire>
    <wire loc="484:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x10700f568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x107121ca0"/></to>
    </wire>
    <wire loc="495:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x106ffe568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x107135ca0"/></to>
    </wire>
    <wire loc="549:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x107039558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x107166ca0"/></to>
    </wire>
    <wire loc="538:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x10704e558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10712aca0"/></to>
    </wire>
    <wire loc="443:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x106fe1668"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10708d3d8"/></to>
    </wire>
    <wire loc="456:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x106fcd568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1070cf3d8"/></to>
    </wire>
    <wire loc="493:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x107003568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10713fca0"/></to>
    </wire>
    <wire loc="461:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x106ffd568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1070c63d8"/></to>
    </wire>
    <wire loc="474:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x106fe8568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1071073d8"/></to>
    </wire>
    <wire loc="487:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x107009568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1071123d8"/></to>
    </wire>
    <wire loc="498:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x10702e568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1071613d8"/></to>
    </wire>
    <wire loc="438:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x106fb9d48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10705de18"/></to>
    </wire>
    <wire loc="451:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x106fd7568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1070afca0"/></to>
    </wire>
    <wire loc="464:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x106ff6568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1070f0ca0"/></to>
    </wire>
    <wire loc="477:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x107017568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1070faca0"/></to>
    </wire>
    <wire loc="546:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x107040558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10713a3d8"/></to>
    </wire>
    <wire loc="552:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x107069558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1071583d8"/></to>
    </wire>
    <wire loc="482:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x107013568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10712aca0"/></to>
    </wire>
    <wire loc="441:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x106fb1978"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1070973d8"/></to>
    </wire>
    <wire loc="454:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x106fd1568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1070d83d8"/></to>
    </wire>
    <wire loc="467:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x106ff0568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1070e23d8"/></to>
    </wire>
    <wire loc="550:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x107037558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1071613d8"/></to>
    </wire>
    <wire loc="472:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x106fec668"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1070d9478"/></to>
    </wire>
    <wire loc="485:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x10700d568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10711b3d8"/></to>
    </wire>
    <wire loc="496:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x107032568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1071303d8"/></to>
    </wire>
    <wire loc="444:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x106fdf568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x107089ca0"/></to>
    </wire>
    <wire loc="494:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x107001568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10713a3d8"/></to>
    </wire>
    <wire loc="449:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x106fdb568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1070b8ca0"/></to>
    </wire>
    <wire loc="462:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x106ffb568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1070c2ca0"/></to>
    </wire>
    <wire loc="475:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x106fe6568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x107103ca0"/></to>
    </wire>
    <wire loc="488:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x107007568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x107148ca0"/></to>
    </wire>
    <wire loc="499:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x10702c568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10715dca0"/></to>
    </wire>
    <wire loc="439:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x106fb5c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1070a0478"/></to>
    </wire>
    <wire loc="452:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x106fd5568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1070aa3d8"/></to>
    </wire>
    <wire loc="465:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x106ff4568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1070eb3d8"/></to>
    </wire>
    <wire loc="478:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x107015568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1070f53d8"/></to>
    </wire>
    <wire loc="534:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x10701e548"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1070f43d8"/></to>
    </wire>
    <wire loc="547:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x10703e558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x107135ca0"/></to>
    </wire>
    <wire loc="533:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x107020560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1070f43d8"/></to>
    </wire>
    <wire loc="483:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x107011568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1071253d8"/></to>
    </wire>
    <wire loc="554:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x107067558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10715dca0"/></to>
    </wire>
    <wire loc="558:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x107061568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1071433d8"/></to>
    </wire>
    <wire loc="529:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x1070285b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1070cbca0"/></to>
    </wire>
    <wire loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x1071c3e00"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x1071bb330"/></to>
    </wire>
    <wire loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x1071eb2a0"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x106a9b520"/></to>
    </wire>
    <wire loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x1071f8460"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1071e3020"/></to>
    </wire>
    <wire loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x1071db7c8"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x1071fb020"/></to>
    </wire>
    <wire loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x1071fb020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x1071f54e0"/></to>
    </wire>
    <wire loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x1071e1958"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x1071fa1b0"/></to>
    </wire>
    <wire loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x1071fa1b0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x10721fcd0"/></to>
    </wire>
    <wire loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x1071e0ae0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x1071f9378"/></to>
    </wire>
    <wire loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x1071f9378"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x10721a448"/></to>
    </wire>
    <wire loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x1072225f8"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x10700b568"/></to>
    </wire>
    <wire loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x10721ee20"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x107009568"/></to>
    </wire>
    <wire loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x1072195f8"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x107007568"/></to>
    </wire>
    <wire loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x108320ce0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x106f45ce0"/></to>
    </wire>
    <wire loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x108320580"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x107232998"/></to>
    </wire>
    <wire loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x107232998"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x1072df0e0"/></to>
    </wire>
    <wire loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x10726e6c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x10831bb90"/></to>
    </wire>
    <wire loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x1072321c8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x1072e1d18"/></to>
    </wire>
    <wire loc="106:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x1072e1d18"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x1086a9388"/></to>
    </wire>
    <wire loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x1072341c8"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x10726cb20"/></to>
    </wire>
    <wire loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x107234e70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1072e1020"/></to>
    </wire>
    <wire loc="105:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x1072e1020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1086aa668"/></to>
    </wire>
    <wire loc="108:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x1072df0e0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x1086a8700"/></to>
    </wire>
    <wire loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x10726bbc8"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x106f42528"/></to>
    </wire>
    <wire loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x1072df960"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x10726e6c0"/></to>
    </wire>
    <wire loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x107259a48"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x1072df0e0"/></to>
    </wire>
    <wire loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x107305268"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x1072e04a8"/></to>
    </wire>
    <wire loc="107:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x1072e04a8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x1086a9ac8"/></to>
    </wire>
    <wire loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x1072da478"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x106f454f0"/></to>
    </wire>
    <wire loc="109:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x1086a7020"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x1072df960"/></to>
    </wire>
    <wire loc="111:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x1086a77a0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x1086ad658"/></to>
    </wire>
    <wire loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x1086a5908"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1065a5ca0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x108706600"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x1072da478"/></to>
    </wire>
    <wire loc="82:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x108706d20"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x1072dab98"/></to>
    </wire>
    <wire loc="84:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x1087052e8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x107305268"/></to>
    </wire>
    <wire loc="85:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x108704020"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x107305e20"/></to>
    </wire>
    <wire loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x1073367d8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x107370de8"/></to>
    </wire>
    <wire loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x107370de8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x107490020"/></to>
    </wire>
    <wire loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x1073700f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x107434418"/></to>
    </wire>
    <wire loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x107366ae8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x1074cac38"/></to>
    </wire>
    <wire loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x107434418"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1086f67d8"/></to>
    </wire>
    <wire loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x10748a208"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10742dd88"/></to>
    </wire>
    <wire loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x10744a020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x107434c00"/></to>
    </wire>
    <wire loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x107434c00"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x1086ef020"/></to>
    </wire>
    <wire loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x1074c9e48"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x1073c7be0"/></to>
    </wire>
    <wire loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x1073c7be0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x1073eac50"/></to>
    </wire>
    <wire loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x1086f67d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10876dbd8"/></to>
    </wire>
    <wire loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x1086e9450"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x1086f5020"/></to>
    </wire>
    <wire loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x1086f5020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x10876b4f8"/></to>
    </wire>
    <wire loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x1086ec1a8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x1073c7be0"/></to>
    </wire>
    <wire loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x108768568"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x108772b88"/></to>
    </wire>
    <wire loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x108772b88"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x10738a858"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x108767bd8"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x1087702a8"/></to>
    </wire>
    <wire loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x1087702a8"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x1073884d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x108765020"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x10876f5b8"/></to>
    </wire>
    <wire loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x10876f5b8"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x107387cb8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10738a858"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x106a9b520"/></to>
    </wire>
    <wire loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x1073884d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x106a9ad30"/></to>
    </wire>
    <wire loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x107387cb8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x106ab0d00"/></to>
    </wire>
    <wire loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10738a858"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x106a9b520"/></to>
    </wire>
    <wire loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x1073884d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x106a97710"/></to>
    </wire>
    <wire loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x107387cb8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x106aae868"/></to>
    </wire>
    <wire loc="70:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10738a858"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x106a9b520"/></to>
    </wire>
    <wire loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x1073884d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x106a96ba8"/></to>
    </wire>
    <wire loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x107387cb8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x106aad6e0"/></to>
    </wire>
    <wire loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10738a858"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x106a9b520"/></to>
    </wire>
    <wire loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x1073884d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x106ab3060"/></to>
    </wire>
    <wire loc="76:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x107387cb8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x106aac558"/></to>
    </wire>
    <wire loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10738a858"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x106a9b520"/></to>
    </wire>
    <wire loc="79:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x1073884d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x106ab2400"/></to>
    </wire>
    <wire loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x107387cb8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x106aab3d0"/></to>
    </wire>
    <wire loc="82:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10738a858"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x106a9b520"/></to>
    </wire>
    <wire loc="83:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x1073884d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x106ab1898"/></to>
    </wire>
    <wire loc="84:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x107387cb8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x106aaa120"/></to>
    </wire>
    <wire loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x1073e8e20"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x1071c3e00"/></to>
    </wire>
    <wire loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x107446020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1065a5ca0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x107485478"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1065a5ca0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x1074efd00"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x1074e9118"/></to>
    </wire>
    <wire loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x1074aa020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1074ee840"/></to>
    </wire>
    <wire loc="34:../../net/ChaseC.nc">
      <from><interface-ref name="ChaseListen" scoped="" ref="0x1074cd5c0"/></from>
      <to><interface-ref name="ChaseListen" scoped="" ref="0x107ec8b08"/></to>
    </wire>
    <wire loc="41:../../net/ChaseC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x107ec39c8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x107502cf0"/></to>
    </wire>
    <wire loc="55:../../chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x107502cf0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x1074fe860"/></to>
    </wire>
    <wire loc="42:../../net/ChaseC.nc">
      <from><interface-ref name="subReceive" scoped="" ref="0x107ec4580"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x107d12de8"/></to>
    </wire>
    <wire loc="64:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x107d12de8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x107d0bc60"/></to>
    </wire>
    <wire loc="43:../../net/ChaseC.nc">
      <from><interface-ref name="subSend" scoped="" ref="0x107ec4c30"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x107c06870"/></to>
    </wire>
    <wire loc="57:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x107c06870"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x107c626b8"/></to>
    </wire>
    <wire loc="44:../../net/ChaseC.nc">
      <from><interface-ref name="DisableRx" scoped="" ref="0x107ec25d8"/></from>
      <to><interface-ref name="DisableRx" scoped="" ref="0x107c660d0"/></to>
    </wire>
    <wire loc="61:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="DisableRx" scoped="" ref="0x107c660d0"/></from>
      <to><interface-ref name="DisableRx" scoped="" ref="0x107c9cbb8"/></to>
    </wire>
    <wire loc="45:../../net/ChaseC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x107ec2e78"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x107d11578"/></to>
    </wire>
    <wire loc="65:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x107d11578"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x107d74428"/></to>
    </wire>
    <wire loc="46:../../net/ChaseC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x107ec15c0"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x107c69280"/></to>
    </wire>
    <wire loc="59:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x107c69280"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x107c60428"/></to>
    </wire>
    <wire loc="47:../../net/ChaseC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x107ec1d28"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x107672378"/></to>
    </wire>
    <wire loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x107672378"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x1076b1b18"/></to>
    </wire>
    <wire loc="48:../../net/ChaseC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x107ec0e10"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x1079f07f0"/></to>
    </wire>
    <wire loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x1079f07f0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x107a45700"/></to>
    </wire>
    <wire loc="49:../../net/ChaseC.nc">
      <from><interface-ref name="delayTimer" scoped="" ref="0x107f2f7a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x107ea95e8"/></to>
    </wire>
    <wire loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x107ea95e8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x1073367d8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:../../net/ChaseC.nc">
      <from><interface-ref name="sleepTimer" scoped="" ref="0x107f2a8e8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x107eaf0a0"/></to>
    </wire>
    <wire loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x107eaf0a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x1073367d8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:../../net/ChaseC.nc">
      <from><interface-ref name="randTimer" scoped="" ref="0x107f25ad0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x107ea2aa0"/></to>
    </wire>
    <wire loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x107ea2aa0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x1073367d8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../net/ChaseC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x107f20a60"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x1074eb350"/></to>
    </wire>
    <wire loc="54:../../net/ChaseC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x107f1f430"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x107366ae8"/></to>
    </wire>
    <wire loc="55:../../net/ChaseC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x107f1e428"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x1071c8ba8"/></to>
    </wire>
    <wire loc="59:../../net/ChaseC.nc">
      <from><interface-ref name="TailSend" scoped="" ref="0x107f1db08"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x108089550"/></to>
    </wire>
    <wire loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x108089550"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x108a54530"/></to>
    </wire>
    <wire loc="60:../../net/ChaseC.nc">
      <from><interface-ref name="TailPacket" scoped="" ref="0x107f1c7e8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x108088268"/></to>
    </wire>
    <wire loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x108088268"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x106c459f8"/></to>
    </wire>
    <wire loc="54:../../chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x1074f8d88"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x1074f3140"/></to>
    </wire>
    <wire loc="56:../../chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x1075017f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x1074f5460"/></to>
    </wire>
    <wire loc="68:../../chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x107500478"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x107d12de8"/></to>
    </wire>
    <wire loc="59:../../chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x1074f2020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x107560e18"/></to>
    </wire>
    <wire loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x107560e18"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1075916b0"/></to>
    </wire>
    <wire loc="60:../../chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x107533320"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x1075a58b0"/></to>
    </wire>
    <wire loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x1075a58b0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x10758e318"/></to>
    </wire>
    <wire loc="63:../../chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x1074f1540"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x107c060c0"/></to>
    </wire>
    <wire loc="69:../../chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x1074f1540"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x107d15ba0"/></to>
    </wire>
    <wire loc="62:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x107d15ba0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x107d0cae0"/></to>
    </wire>
    <wire loc="56:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x107c060c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x107c64e10"/></to>
    </wire>
    <wire loc="64:../../chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x10752cd48"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x107c06870"/></to>
    </wire>
    <wire loc="65:../../chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x107539aa8"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x107c6d5f8"/></to>
    </wire>
    <wire loc="58:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x107c6d5f8"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x107c614b0"/></to>
    </wire>
    <wire loc="72:../../chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x107521888"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x107dc48b0"/></to>
    </wire>
    <wire loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x107dc48b0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x107db1160"/></to>
    </wire>
    <wire loc="73:../../chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x10751cb68"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x107dc0310"/></to>
    </wire>
    <wire loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x107dc0310"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x107db0970"/></to>
    </wire>
    <wire loc="76:../../chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x107532908"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x1074eb350"/></to>
    </wire>
    <wire loc="79:../../chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x107520110"/></from>
      <to><interface-ref name="State" scoped="" ref="0x107eb7268"/></to>
    </wire>
    <wire loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x107eb7268"/></from>
      <to><interface-ref name="State" scoped="" ref="0x10789b868"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x10752b0c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x1071c8ba8"/></to>
    </wire>
    <wire loc="76:../../chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x10755c800"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1065a5ca0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x10755e9a8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1065a5ca0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x107515ab8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1065a5ca0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x10759aaf8"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x1075904b0"/></to>
    </wire>
    <wire loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x107595d28"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x10758d658"/></to>
    </wire>
    <wire loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x10758a370"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x1076682a0"/></to>
    </wire>
    <wire loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x1076682a0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x10767a4f8"/></to>
    </wire>
    <wire loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x1075854f8"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x1076731a0"/></to>
    </wire>
    <wire loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x1076731a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x1076b5280"/></to>
    </wire>
    <wire loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x107584688"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x107670698"/></to>
    </wire>
    <wire loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x107670698"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x1076a7b18"/></to>
    </wire>
    <wire loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x1075cf810"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x10766d998"/></to>
    </wire>
    <wire loc="77:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x10766d998"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x10769eb18"/></to>
    </wire>
    <wire loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x1075cae80"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x1076db140"/></to>
    </wire>
    <wire loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x1076db140"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x1077b5b58"/></to>
    </wire>
    <wire loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x1075b8550"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x107add7d0"/></to>
    </wire>
    <wire loc="126:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x107add7d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x107810020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x1075b7768"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x107b3c020"/></to>
    </wire>
    <wire loc="132:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x107b3c020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x1075b7e40"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x107b3b2e8"/></to>
    </wire>
    <wire loc="135:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x107b3b2e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x1075b9e40"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x107b3e3a0"/></to>
    </wire>
    <wire loc="130:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x107b3e3a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x1075b9560"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x107b3b900"/></to>
    </wire>
    <wire loc="136:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x107b3b900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x1075bd1d0"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x107b33e10"/></to>
    </wire>
    <wire loc="154:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x107b33e10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x1075bda40"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x107b30d60"/></to>
    </wire>
    <wire loc="158:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x107b30d60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x1075c43b8"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x107b2f528"/></to>
    </wire>
    <wire loc="159:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x107b2f528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x1075c4c40"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x107b36470"/></to>
    </wire>
    <wire loc="147:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x107b36470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x1075bc558"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x107b36c10"/></to>
    </wire>
    <wire loc="148:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x107b36c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x1075c0c18"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x107b227c0"/></to>
    </wire>
    <wire loc="184:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x107b227c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10780c020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x1075c02e0"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x107b22020"/></to>
    </wire>
    <wire loc="183:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x107b22020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10780c020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x1075bcdd0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x107b33470"/></to>
    </wire>
    <wire loc="153:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x107b33470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x1075bb680"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x107b35470"/></to>
    </wire>
    <wire loc="149:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x107b35470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x1075ba020"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x107b34470"/></to>
    </wire>
    <wire loc="151:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x107b34470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x1075b5140"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x107b11e60"/></to>
    </wire>
    <wire loc="126:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x107b11e60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x107810020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x1075b63c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x107b47558"/></to>
    </wire>
    <wire loc="126:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x107b47558"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x107810020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x1075c5338"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x107b7b690"/></to>
    </wire>
    <wire loc="100:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x107588998"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x107b7dce0"/></to>
    </wire>
    <wire loc="23:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x107b7dce0"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x107bc5190"/></to>
    </wire>
    <wire loc="126:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x1075aa720"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1065a5ca0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x1075ac8d8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1065a5ca0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x10761e8e8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x107663b78"/></to>
    </wire>
    <wire loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x107663b78"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x108800538"/></to>
    </wire>
    <wire loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x10767a4f8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x108800d20"/></to>
    </wire>
    <wire loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x108800538"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1087f90c0"/></to>
    </wire>
    <wire loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x108800d20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x1087f3830"/></to>
    </wire>
    <wire loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x1087f90c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1087de7a8"/></to>
    </wire>
    <wire loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x1087edce8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x1087f98a8"/></to>
    </wire>
    <wire loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x1087f98a8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x1087dd020"/></to>
    </wire>
    <wire loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x1087f0ad0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x10764c520"/></to>
    </wire>
    <wire loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x10764c520"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x107648e40"/></to>
    </wire>
    <wire loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x1087da020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x1087e47d8"/></to>
    </wire>
    <wire loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x1087e47d8"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x10738a858"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x1087d95b8"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x1087e3d60"/></to>
    </wire>
    <wire loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x1087e3d60"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x1073884d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x1087d78c8"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x1087e0020"/></to>
    </wire>
    <wire loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x1087e0020"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x107387cb8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x107643060"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x1071c3e00"/></to>
    </wire>
    <wire loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x107671508"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x1076ac280"/></to>
    </wire>
    <wire loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x107674020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x10766bad0"/></to>
    </wire>
    <wire loc="76:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x10766e810"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x1076a2280"/></to>
    </wire>
    <wire loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x10766ac18"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x106fe37f0"/></to>
    </wire>
    <wire loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x1076b4470"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x106fea568"/></to>
    </wire>
    <wire loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x1076b0c18"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x106fb1978"/></to>
    </wire>
    <wire loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x1076ab470"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x106fb9d48"/></to>
    </wire>
    <wire loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x1076a6c18"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x107017568"/></to>
    </wire>
    <wire loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x1076a1470"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x106fec668"/></to>
    </wire>
    <wire loc="69:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x10769dc18"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x106fe4568"/></to>
    </wire>
    <wire loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x1076d7518"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x1076d4100"/></to>
    </wire>
    <wire loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x1076dbd08"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x1077f9a78"/></to>
    </wire>
    <wire loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x1076d4b70"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x106a98120"/></to>
    </wire>
    <wire loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x1076c2020"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x106aa8020"/></to>
    </wire>
    <wire loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x1076c2de0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x106fec668"/></to>
    </wire>
    <wire loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x1077b4780"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x107702878"/></to>
    </wire>
    <wire loc="70:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x107702878"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x1076ef568"/></to>
    </wire>
    <wire loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x1077f85f8"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x1077058e0"/></to>
    </wire>
    <wire loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x1077058e0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x1076f35c8"/></to>
    </wire>
    <wire loc="82:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x1076f8878"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x1076e4568"/></to>
    </wire>
    <wire loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x1076ff878"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x1076ec568"/></to>
    </wire>
    <wire loc="77:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x1076fd878"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x1076e9568"/></to>
    </wire>
    <wire loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x107704878"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x1076f1568"/></to>
    </wire>
    <wire loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x1076fa878"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x1076e6568"/></to>
    </wire>
    <wire loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x107701878"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x1076ee568"/></to>
    </wire>
    <wire loc="83:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x1076f7878"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x1076e3568"/></to>
    </wire>
    <wire loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x1076fc878"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x1076e8568"/></to>
    </wire>
    <wire loc="69:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x107703878"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x1076f0568"/></to>
    </wire>
    <wire loc="81:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x1076f9878"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x1076e5568"/></to>
    </wire>
    <wire loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x107700878"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x1076ed568"/></to>
    </wire>
    <wire loc="76:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x1076fe878"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x1076ea568"/></to>
    </wire>
    <wire loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x107709878"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x1076f2568"/></to>
    </wire>
    <wire loc="79:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x1076fb878"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x1076e7568"/></to>
    </wire>
    <wire loc="131:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x107b3e9b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x107b32d98"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x107b29470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x107b305c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x107b1e7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10780c020"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x107b207c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10780c020"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x107b3cc50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x107b26c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x107b217c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10780c020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x107b2cc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x107b2d470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x107b3f430"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x107810cb0"/></to>
    </wire>
    <wire loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x107810cb0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x10780ae00"/></to>
    </wire>
    <wire loc="138:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x107b3a638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x107b3ac50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x107b24060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x107b393a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x107b20020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10780c020"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x107b26470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x107b35c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x107b27470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x107b29c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x107b27c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x107b1e020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10780c020"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x107b1f020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10780c020"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x107b2dc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x107b28470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x107b21020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10780c020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x107b2fcc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x107b1d020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x10780fc00"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x107b3fd58"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x107b38c50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x107b34c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x107b2b470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x107b2bc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x107b325f8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x107b399b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x107b38638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x107b3a020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x107b24800"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x107b1f7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10780c020"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x107b2c470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x107b28c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x107b3c638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x107b2e4f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x107b38020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x107b2ec90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x107b25470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x107b1dc58"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x10780fc00"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x10780fc00"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x107806e50"/></to>
    </wire>
    <wire loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x10780c020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x107859040"/></to>
    </wire>
    <wire loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x10780cd60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x107859d40"/></to>
    </wire>
    <wire loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x107810020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x107807c48"/></to>
    </wire>
    <wire loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x107858a98"/></to>
    </wire>
    <wire loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x107854838"/></from>
      <to><interface-ref name="State" scoped="" ref="0x10789d100"/></to>
    </wire>
    <wire loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x10789d100"/></from>
      <to><interface-ref name="State" scoped="" ref="0x10789b868"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x1078571e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1078d3cf0"/></to>
    </wire>
    <wire loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x1078d3cf0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1088d77d0"/></to>
    </wire>
    <wire loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x107856d20"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x1078d2948"/></to>
    </wire>
    <wire loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x1078d2948"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x1088d6b90"/></to>
    </wire>
    <wire loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x107854020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x107b01020"/></to>
    </wire>
    <wire loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x107b01020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x1088d5d18"/></to>
    </wire>
    <wire loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x107852730"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x1071c8ba8"/></to>
    </wire>
    <wire loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x1078475d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1065a5ca0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x10789b868"/></from>
      <to><interface-ref name="State" scoped="" ref="0x1078921c8"/></to>
    </wire>
    <wire loc="110:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x1088d5d18"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x1078bd4d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x1088d6b90"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x1078c0e68"/></to>
    </wire>
    <wire loc="105:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x1088d77d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1078c14e8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x1088d6430"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x1088cc8c8"/></to>
    </wire>
    <wire loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x1088cc8c8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x1079f0020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x1078c0e68"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x107916020"/></to>
    </wire>
    <wire loc="108:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x1088d52a8"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x1078bf4e0"/></to>
    </wire>
    <wire loc="92:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x1078bf4e0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x1079165f8"/></to>
    </wire>
    <wire loc="111:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x1078bb498"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x1088d34b0"/></to>
    </wire>
    <wire loc="115:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x1088bf8c8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x1078c06c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x1078bc270"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x1088cdb38"/></to>
    </wire>
    <wire loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x1088cdb38"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1079f3ce8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x1078bbc40"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x1088c6020"/></to>
    </wire>
    <wire loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x1088c6020"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x1079f42b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x1078c06c0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x107917860"/></to>
    </wire>
    <wire loc="93:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x1078bd4d0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x1079151e0"/></to>
    </wire>
    <wire loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x1078c14e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x107918ae8"/></to>
    </wire>
    <wire loc="90:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x107913860"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x1078bb498"/></to>
    </wire>
    <wire loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x107915ac0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x1078bc270"/></to>
    </wire>
    <wire loc="95:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x10790e780"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x1078bbc40"/></to>
    </wire>
    <wire loc="98:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x107912020"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x107961be0"/></to>
    </wire>
    <wire loc="85:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x107961be0"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x107956350"/></to>
    </wire>
    <wire loc="101:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x10790d020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x1071c8ba8"/></to>
    </wire>
    <wire loc="102:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x10790c5f8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1065a5ca0"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x10795ad68"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x1079515d8"/></to>
    </wire>
    <wire loc="86:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x10795a528"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x107952bf0"/></to>
    </wire>
    <wire loc="90:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x10797f6e0"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x107026970"/></to>
    </wire>
    <wire loc="91:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x10797c658"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x107022660"/></to>
    </wire>
    <wire loc="92:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x10797a558"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x107020560"/></to>
    </wire>
    <wire loc="93:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x107978558"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x10701a560"/></to>
    </wire>
    <wire loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x107976558"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x10701c560"/></to>
    </wire>
    <wire loc="14:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x107984a48"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x107a314e8"/></to>
    </wire>
    <wire loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x1088c6780"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x1079f31c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x1088c6d58"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x107a3db48"/></to>
    </wire>
    <wire loc="11:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x107a3db48"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x107a314e8"/></to>
    </wire>
    <wire loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x1088cb7c0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x107961be0"/></to>
    </wire>
    <wire loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x1088cb060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x1079f07f0"/></to>
    </wire>
    <wire loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x1079ef570"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x1088bf8c8"/></to>
    </wire>
    <wire loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x1079f0020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x107a46388"/></to>
    </wire>
    <wire loc="106:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x107a46388"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x1088f8b48"/></to>
    </wire>
    <wire loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x1079f42b0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x1079eeb70"/></to>
    </wire>
    <wire loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x1079f3ce8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x107a47558"/></to>
    </wire>
    <wire loc="105:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x107a47558"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1088f9e20"/></to>
    </wire>
    <wire loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x1079f31c8"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x1079ed590"/></to>
    </wire>
    <wire loc="108:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x107a45700"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x1088f6020"/></to>
    </wire>
    <wire loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x107a44020"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x1079ef570"/></to>
    </wire>
    <wire loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x1079eca48"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x107a45700"/></to>
    </wire>
    <wire loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x1079edbc8"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x10795a528"/></to>
    </wire>
    <wire loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x1079ec470"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x10795ad68"/></to>
    </wire>
    <wire loc="107:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x107a46ac8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x1088f73f0"/></to>
    </wire>
    <wire loc="109:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x1088f68c0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x107a44020"/></to>
    </wire>
    <wire loc="111:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x1088f40a0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x1088fbe00"/></to>
    </wire>
    <wire loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x1088f2100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1065a5ca0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x107a2a060"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x107956350"/></to>
    </wire>
    <wire loc="18:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x107a26868"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x107026970"/></to>
    </wire>
    <wire loc="19:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x107a247e0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x107020560"/></to>
    </wire>
    <wire loc="153:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x107b66a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x107b70100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x107b6aa88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x107b64470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x107b5dc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x107b64c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x107b502e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10780c020"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x107b532e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10780c020"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x107b6f3a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x107b58470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x107b542e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10780c020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x107b69a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x107b68a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x107b5e470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x107b61c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x107b63470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x107b10a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x107810cb0"/></to>
    </wire>
    <wire loc="138:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x107b6ec50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x107b6c2e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x107b57a38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x107b6ca00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x107b54a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10780c020"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x107b6e020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x107b59c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x107b682e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x107b692e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x107b0fa88"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x107b5bc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x107b5c470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x107b59470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x107b51a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10780c020"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x107b53a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10780c020"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x107b5f470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x107b5cc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x107b55a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10780c020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x107b62470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x107b50a88"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x10780fc00"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x107b0f470"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x107b6a2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x107b662e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x107b5ec10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x107b63c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x107b5d470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x107b65470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x107b70718"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x107b65c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x107b6b060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x107b6bc90"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x107b552e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10780c020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x107b56a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10780c020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x107b6e638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x107b562e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x107b512e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10780c020"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x107b5fc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x107b5b470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x107b70d30"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x107b6f9b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x107b62c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x107b6b678"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x107b61470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x107b58c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x107b4f780"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x10780fc00"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x107b9c470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x107b45900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x107b9f470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x107b9bd98"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x107b92470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x107b995c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x107b877c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10780c020"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x107b897c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10780c020"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x107b43c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x107b8fc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x107b8a7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10780c020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x107b9e470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x107b9d470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x107b95c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x107b96470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x107b99d60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x107b462a8"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x107810cb0"/></to>
    </wire>
    <wire loc="138:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x107b41638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x107b41c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x107b8d060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x107b403a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x107b89020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10780c020"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x107b42900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x107b8f470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x107b9ec10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x107b9fc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x107b452e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x107b90470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x107b92c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x107b90c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x107b87020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10780c020"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x107b88020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10780c020"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x107b96c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x107b91470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x107b8a020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10780c020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x107b98cc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x107b86020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x10780fc00"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x107b46bd0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x107ba1c50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x107b9dc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x107b94470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x107b98528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x107b94c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x107b9ce10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x107b43020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x107b9b5f8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x107b409b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x107ba1638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x107b8b7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10780c020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x107b8b020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10780c020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x107b41020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x107b8d800"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x107b887c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10780c020"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x107b95470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x107b91c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x107b43638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x107b422e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x107b974f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x107ba1020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x107b97c90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x107b8e470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x107b86c58"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x10780fc00"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x107bc2648"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x107bc9ad8"/></to>
    </wire>
    <wire loc="20:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x107bc9ad8"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x107bb3b08"/></to>
    </wire>
    <wire loc="16:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x107bad3f8"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x107bb6bb0"/></to>
    </wire>
    <wire loc="21:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x107bb6bb0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x107bfe108"/></to>
    </wire>
    <wire loc="17:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x107badc40"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x107c15588"/></to>
    </wire>
    <wire loc="18:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x107c02530"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x107c03828"/></to>
    </wire>
    <wire loc="11:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x107c03828"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x107c1aae8"/></to>
    </wire>
    <wire loc="18:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x107bf9748"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x107c00b88"/></to>
    </wire>
    <wire loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x107c00b88"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x107bd6020"/></to>
    </wire>
    <wire loc="19:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x107bfe968"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x107c02530"/></to>
    </wire>
    <wire loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x107c2d410"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x107c27790"/></to>
    </wire>
    <wire loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x107c27790"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x107c23e08"/></to>
    </wire>
    <wire loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x107c21de8"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x106a7c060"/></to>
    </wire>
    <wire loc="9:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x107c19c18"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x106fd3568"/></to>
    </wire>
    <wire loc="60:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x107c69988"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x107c60b70"/></to>
    </wire>
    <wire loc="68:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x107c5f648"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x1076682a0"/></to>
    </wire>
    <wire loc="71:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x107c4c800"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x107674020"/></to>
    </wire>
    <wire loc="72:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x107c47b10"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x1076731a0"/></to>
    </wire>
    <wire loc="73:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x107c45c98"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x10766e810"/></to>
    </wire>
    <wire loc="76:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x107c4dba8"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x1076d7518"/></to>
    </wire>
    <wire loc="79:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x107c44e68"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x107cddda0"/></to>
    </wire>
    <wire loc="126:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x107cddda0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x107810020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x107c43b28"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x107cdca18"/></to>
    </wire>
    <wire loc="125:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x107cdca18"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x107810cb0"/></to>
    </wire>
    <wire loc="81:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x107c40520"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x107cdb470"/></to>
    </wire>
    <wire loc="129:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x107cdb470"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x107c40bf0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x107cdad30"/></to>
    </wire>
    <wire loc="133:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x107cdad30"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x107c3fa90"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x107cd83a0"/></to>
    </wire>
    <wire loc="134:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x107cd83a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x107c3e1d8"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x107cd7c50"/></to>
    </wire>
    <wire loc="138:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x107cd7c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x107c41c20"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x107d3aa88"/></to>
    </wire>
    <wire loc="151:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x107d3aa88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x107c42528"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x107d22780"/></to>
    </wire>
    <wire loc="196:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x107d22780"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x10780fc00"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x107c413b0"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x107d262e8"/></to>
    </wire>
    <wire loc="186:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x107d262e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10780c020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x107c3ead8"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x107d3b2e8"/></to>
    </wire>
    <wire loc="148:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x107d3b2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x107c3daa8"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x107d38c10"/></to>
    </wire>
    <wire loc="155:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x107d38c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x107c3c3d0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x107d37470"/></to>
    </wire>
    <wire loc="156:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x107d37470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x107c3d3a8"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x107d3e678"/></to>
    </wire>
    <wire loc="142:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x107d3e678"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x107c3bd48"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x107d24a88"/></to>
    </wire>
    <wire loc="191:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x107d24a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10780c020"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="93:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x107c3cc00"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x107d252e8"/></to>
    </wire>
    <wire loc="188:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x107d252e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10780c020"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x107c3b500"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x107d25a88"/></to>
    </wire>
    <wire loc="189:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x107d25a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10780c020"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="96:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x107c9fe78"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x107cd7638"/></to>
    </wire>
    <wire loc="137:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x107cd7638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x107c9c580"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x107cd89b8"/></to>
    </wire>
    <wire loc="135:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x107cd89b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x107c3f3a0"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x107cda718"/></to>
    </wire>
    <wire loc="132:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x107cda718"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="101:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x107c9de10"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x107d124b8"/></to>
    </wire>
    <wire loc="63:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x107d124b8"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x107d0b330"/></to>
    </wire>
    <wire loc="104:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x107c5b628"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x107dc48b0"/></to>
    </wire>
    <wire loc="105:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x107c5a4d8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x107dc0310"/></to>
    </wire>
    <wire loc="106:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x107c58150"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x107dbbd80"/></to>
    </wire>
    <wire loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x107dbbd80"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x107dafd08"/></to>
    </wire>
    <wire loc="107:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x107c4d020"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x107db6870"/></to>
    </wire>
    <wire loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x107db6870"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x107e136c8"/></to>
    </wire>
    <wire loc="110:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x107ca0770"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x1071c8ba8"/></to>
    </wire>
    <wire loc="153:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x107d39a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x107cda100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x107d3ca88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x107d30c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x107d37c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x107d232e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10780c020"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x107d2b470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x107d3ba88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x107d31470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x107d33c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x107d35470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x107d3f2e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x107d2aa38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x107d3fa00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x107d26a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10780c020"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x107cd7020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x107d2cc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x107d3a2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x107cdba88"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x107d2dc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x107d2e470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x107d2c470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x107d32470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x107d2ec10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x107d27a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10780c020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x107d34470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x107d23a88"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x10780fc00"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x107d3c2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x107d392e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x107d31c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x107d35c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x107d30470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x107d38470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x107d3e060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x107d3ec90"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x107d272e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10780c020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x107d29a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10780c020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x107d292e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x107d242e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10780c020"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x107d32c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x107d2d470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x107d34c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x107d33470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x107d2bc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="DisableFifoP" scoped="" ref="0x107d0ed80"/></from>
      <to><interface-ref name="DisableFifoP" scoped="" ref="0x107d74a80"/></to>
    </wire>
    <wire loc="60:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x107d5fa98"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x1071c8ba8"/></to>
    </wire>
    <wire loc="71:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x107d73368"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x1076731a0"/></to>
    </wire>
    <wire loc="72:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x107d72500"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x107672378"/></to>
    </wire>
    <wire loc="73:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x107d71690"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x107671508"/></to>
    </wire>
    <wire loc="74:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x107d708a8"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x1076dbd08"/></to>
    </wire>
    <wire loc="75:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x107d6e538"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x107e22c60"/></to>
    </wire>
    <wire loc="126:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x107e22c60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x107810020"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x107d6d390"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x107e6da88"/></to>
    </wire>
    <wire loc="195:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x107e6da88"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x10780fc00"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x107d6c8e0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x107e1c638"/></to>
    </wire>
    <wire loc="137:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x107e1c638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x107d6c0f0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x107e1b2e8"/></to>
    </wire>
    <wire loc="139:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x107e1b2e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x107d6b020"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x107dc48b0"/></to>
    </wire>
    <wire loc="80:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x107d6be48"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x107dc0310"/></to>
    </wire>
    <wire loc="81:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x107d68870"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x107dbbd80"/></to>
    </wire>
    <wire loc="82:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x107d6a7d8"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x10759aaf8"/></to>
    </wire>
    <wire loc="84:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x107d64b48"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x107e82c10"/></to>
    </wire>
    <wire loc="155:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x107e82c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x107d63558"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x107e81470"/></to>
    </wire>
    <wire loc="156:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x107e81470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x107d64448"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x107e1a060"/></to>
    </wire>
    <wire loc="141:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x107e1a060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x107d61020"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x107e6d2e8"/></to>
    </wire>
    <wire loc="192:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x107e6d2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10780c020"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x107d63d88"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x107e6f2e8"/></to>
    </wire>
    <wire loc="188:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x107e6f2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10780c020"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x107d62650"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x107e6fa88"/></to>
    </wire>
    <wire loc="189:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x107e6fa88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10780c020"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x107d61888"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x107e70a88"/></to>
    </wire>
    <wire loc="187:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x107e70a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10780c020"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x107d60398"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x107e202e8"/></to>
    </wire>
    <wire loc="129:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x107e202e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="ChaseListen" scoped="" ref="0x107d609e0"/></from>
      <to><interface-ref name="ChaseListen" scoped="" ref="0x1074cd5c0"/></to>
    </wire>
    <wire loc="98:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="DisableRx" scoped="" ref="0x107d5f308"/></from>
      <to><interface-ref name="DisableRx" scoped="" ref="0x107c660d0"/></to>
    </wire>
    <wire loc="156:../../chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x107d523f8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1065a5ca0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x107dbb398"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x107daf320"/></to>
    </wire>
    <wire loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x107dbac58"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x107dabbf0"/></to>
    </wire>
    <wire loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x107dc1850"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x107db0020"/></to>
    </wire>
    <wire loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x107e2e230"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x10764c520"/></to>
    </wire>
    <wire loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x107e111d8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x107e2f020"/></to>
    </wire>
    <wire loc="69:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x107e10438"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x107366ae8"/></to>
    </wire>
    <wire loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x107e29020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x1073367d8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x107e83a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x107e1f020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x107e19a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x107e7ac10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x107e81c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x107e1e2e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x107e75470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x107e702e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10780c020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x107e17a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x107e16a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x107e7b470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x107e7dc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x107e80470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x107e218c8"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x107810cb0"/></to>
    </wire>
    <wire loc="138:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x107e1cc50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x107e74a38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x107e1ba00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x107e1c020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x107e76c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x107e162e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x107e172e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x107e20900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x107e77c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x107e79470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x107e76470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x107e6ea88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10780c020"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x107e7c470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x107e79c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x107e72a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10780c020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x107e7e470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x107e192e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x107e832e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x107e7bc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x107e80c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x107e7a470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x107e82470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x107e1f638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x107e1ac90"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x107e722e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10780c020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x107e73a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10780c020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x107e732e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x107e6e2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10780c020"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x107e7cc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x107e77470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x107e1fc50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x107e1e900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x107e7ec10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x107e1a678"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x107e7d470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x107e75c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10780cd60"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x107e6c780"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x10780fc00"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="103:../../net/ChaseP.nc">
      <from><interface-ref name="cc2420_begin_rec" scoped="" ref="0x107f0b020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1065a5ca0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="113:../../net/ChaseP.nc">
      <from><interface-ref name="radio_stop" scoped="" ref="0x107f063f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1065a5ca0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="102:../../net/ChaseP.nc">
      <from><interface-ref name="pkt_resend" scoped="" ref="0x107f0c100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1065a5ca0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="96:../../net/ChaseP.nc">
      <from><interface-ref name="signal_classify" scoped="" ref="0x107f10298"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1065a5ca0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="104:../../net/ChaseP.nc">
      <from><interface-ref name="start_rand_ippi" scoped="" ref="0x107f0be60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1065a5ca0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="112:../../net/ChaseP.nc">
      <from><interface-ref name="radio_start" scoped="" ref="0x107f075a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1065a5ca0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../net/ChaseP.nc">
      <from><interface-ref name="signal_detect" scoped="" ref="0x107f11298"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1065a5ca0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="100:../../net/ChaseP.nc">
      <from><interface-ref name="pkt_send_init" scoped="" ref="0x107f0f350"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1065a5ca0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="101:../../net/ChaseP.nc">
      <from><interface-ref name="pkt_send" scoped="" ref="0x107f0d298"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1065a5ca0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x108088e20"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x106c5a190"/></to>
    </wire>
    <wire loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x108086430"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x106c540d0"/></to>
    </wire>
    <wire loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x108a532c8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x107ff2020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x108a53e80"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x106c5a190"/></to>
    </wire>
    <wire loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x107ff2020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x1080202c8"/></to>
    </wire>
    <wire loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x10801f060"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x106c2c9d0"/></to>
    </wire>
    <wire loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x10801fc38"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x106c5a190"/></to>
    </wire>
    <wire loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x10801d268"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x106c459f8"/></to>
    </wire>
    <wire loc="169:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x10801c020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1065a5ca0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x10801c7c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1065a5ca0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x1080dc4e8"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x108108c28"/></to>
    </wire>
    <wire loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x1080d7cc8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x1080951d0"/></to>
    </wire>
    <wire loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x1080951d0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x108ab3d00"/></to>
    </wire>
    <wire loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x1080d5948"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x108095d88"/></to>
    </wire>
    <wire loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x108095d88"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x106c459f8"/></to>
    </wire>
    <wire loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x108130400"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x1080dac10"/></to>
    </wire>
    <wire loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x10810c9d8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x106c5a190"/></to>
    </wire>
    <wire loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x10810a0a0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x106c540d0"/></to>
    </wire>
    <wire loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x108ab2968"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x107ff2020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x108ab1578"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x106c5a190"/></to>
    </wire>
    <wire loc="114:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/PrintfP.nc">
      <from><interface-ref name="retrySend" scoped="" ref="0x1081499a8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1065a5ca0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x10812fc98"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x108130400"/></to>
    </wire>
    <wire loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/SerialStartC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x108127358"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x106a19940"/></to>
    </wire>
    <wire loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/SerialStartC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x108127a38"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x106be2dc0"/></to>
    </wire>
    <wire loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x10811e888"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x106c5a190"/></to>
    </wire>
    <wire loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x10811c020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x106c540d0"/></to>
    </wire>
    <wire loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x108b30da0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x107ff2020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x108b2f9d8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x106c5a190"/></to>
    </wire>
    <wire loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x108118020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x106c5a190"/></to>
    </wire>
    <wire loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x1081175b8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x106c540d0"/></to>
    </wire>
    <wire loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x108b185d8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x107ff2020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x108b17268"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x106c5a190"/></to>
    </wire>
    <wire loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x108112888"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x106c5a190"/></to>
    </wire>
    <wire loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x108110020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x106c540d0"/></to>
    </wire>
    <wire loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x108b00ab0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x107ff2020"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x108aff700"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x106c5a190"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/MainC.nc">
      <documentation loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="41(Msp430Uart1P.UartP):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e87150"/>
            <typename><typedef-ref name="T32khz" ref="0x106e874a8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ChaseTestAppC.floodTimer" loc="44(ChaseTestAppC.floodTimer):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliP.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e87150"/>
            <typename><typedef-ref name="T32khz" ref="0x106e874a8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e88990"/>
            <typename><typedef-ref name="TMilli" ref="0x106e88ce8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10631d020"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e87150"/>
            <typename><typedef-ref name="T32khz" ref="0x106e874a8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10631d020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e88990"/>
            <typename><typedef-ref name="TMilli" ref="0x106e88ce8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10631d020"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e87150"/>
            <typename><typedef-ref name="T32khz" ref="0x106e874a8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e88990"/>
            <typename><typedef-ref name="TMilli" ref="0x106e88ce8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e88990"/>
            <typename><typedef-ref name="TMilli" ref="0x106e88ce8"/></typename>
          </type-tag>
          <value cst="I:6">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e88990"/>
            <typename><typedef-ref name="TMilli" ref="0x106e88ce8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ChaseTestAppC.dcTimer" loc="44(ChaseTestAppC.dcTimer):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard&#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard&#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative&#10;  linear congruential generator,&#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1)&#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt&#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ChaseC" loc="6:../../net/ChaseC.nc">
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:../../chips/cc2420/csma/CC2420CsmaC.nc">
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:../../chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e87150"/>
            <typename><typedef-ref name="T32khz" ref="0x106e874a8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e87150"/>
            <typename><typedef-ref name="T32khz" ref="0x106e874a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10631d020"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e87150"/>
            <typename><typedef-ref name="T32khz" ref="0x106e874a8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e87150"/>
            <typename><typedef-ref name="T32khz" ref="0x106e874a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10631d020"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e87150"/>
            <typename><typedef-ref name="T32khz" ref="0x106e874a8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="38(HplCC2420InterruptsC.CaptureSFDC):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/StateC.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/StateImplC.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/StateImplP.nc" safe="">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <documentation loc="31:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.8 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e878b8"/>
            <typename><typedef-ref name="TMicro" ref="0x106e87c10"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e878b8"/>
            <typename><typedef-ref name="TMicro" ref="0x106e87c10"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e87150"/>
            <typename><typedef-ref name="T32khz" ref="0x106e874a8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/StateC.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ChaseC.sleepTimer" loc="44(ChaseC.sleepTimer):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ChaseC.delayTimer" loc="44(ChaseC.delayTimer):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ChaseC.randTimer" loc="44(ChaseC.randTimer):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ChaseP" loc="11:../../net/ChaseP.nc">
      <module/>
    </component>
    <component qname="ChaseC.TailSend" loc="47(ChaseC.TailSend):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:99">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ChaseC.TailSend.AMQueueEntryP" loc="43(ChaseC.TailSend.AMQueueEntryP):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x106bce3b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ChaseTestC" loc="5:ChaseTestC.nc">
      <module/>
    </component>
    <component qname="PrintfC.SerialAMSenderC" loc="47(PrintfC.SerialAMSenderC):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:100">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PrintfC.SerialAMSenderC.AMQueueEntryP" loc="43(PrintfC.SerialAMSenderC.AMQueueEntryP):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x106bce3b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfC.QueueC" loc="42(PrintfC.QueueC):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/QueueC.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
          </type-int>
          <value cst="I:250">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfP" loc="87:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/PrintfP.nc" safe="">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PutcharC" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/PutcharC.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/PutcharP.nc">
      <documentation loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/PutcharP.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialStartP" loc="37:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/SerialStartP.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/SerialStartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Thomas Schmid&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ChaseTestAppC.floodSerialSend" loc="47(ChaseTestAppC.floodSerialSend):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:22">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ChaseTestAppC.floodSerialSend.AMQueueEntryP" loc="43(ChaseTestAppC.floodSerialSend.AMQueueEntryP):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x106bce3b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ChaseTestAppC.delaySerialSend" loc="47(ChaseTestAppC.delaySerialSend):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:44">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ChaseTestAppC.delaySerialSend.AMQueueEntryP" loc="43(ChaseTestAppC.delaySerialSend.AMQueueEntryP):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x106bce3b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ChaseTestAppC.energySerialSend" loc="47(ChaseTestAppC.energySerialSend):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:77">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ChaseTestAppC.energySerialSend.AMQueueEntryP" loc="43(ChaseTestAppC.energySerialSend.AMQueueEntryP):/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x106bce3b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerP" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x106abf898" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x106abfc10" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x106abe020" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x106abe378" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x106abe6d0" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x106abea20" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x106abed88" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x106abc150" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x106abc500" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x106b03950" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x106b03d00" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x10705c998" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x10705cd20" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x10705b108" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x10705b490" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x10705b7e0" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x1071bdd38" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x1071bdd38"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x1072545a0" loc="89:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x107285170" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x1072acaa0" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x1073b1a38" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x1073b1a38"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x1073be550" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x1073be550"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x1073becb8" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x1073becb8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x1073bd0a8" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x1073bd0a8"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x1073bd820" loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x1073bd820"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x1073bdbc8" loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x1073bc380" loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x1073bc380"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x1073e1020" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x1073e1020"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x1073e1788" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x1073e1788"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x1073e1b50" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x1073e1b50"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x1073df348" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x1073df348"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x1073df6f0" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x10742c068" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x10742c068"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x1074424e0" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x1074424e0"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x1074427f0" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x1074c8510" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x1074c8510"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="GpioCaptureC" loc="38:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/StateC.nc" abstract="">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <documentation loc="31:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x107bd8d00" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x107bd8d00"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x107bd5460" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x107bd5460"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMSenderC" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x108012780" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x106bce3b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x108008250" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x106bce3b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x107fee2a8" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/QueueC.nc" abstract="">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x108106270" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x108106270"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x1081065c8" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x106a1bd68" loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x106a1bd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x106a1a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x106a19940" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x106a19940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x106a19c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x106a1acb0" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x106a1acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x106a160a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x106a13c08" loc="6:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x106a13c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x106a12020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x106a16e58" loc="4:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x106a16e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x106a131e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x106a13568" loc="5:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x106a13568"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x106a138b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x106a12370" loc="7:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x106a12370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x106a126c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x106a15bf8" loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x106a15bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x106a2a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x106a14458" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x106a14458"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x106a147a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x106a455c0" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x106a455c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x106a2d4b8"/>
        <function-ref name="initTimerB" scoped="" ref="0x106a45a98"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x106a45c20"/>
        <function-ref name="initTimerA" scoped="" ref="0x106a45da8"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x106a45910"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x106a2d020"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x106a2d1a8"/>
        <function-ref name="initClocks" scoped="" ref="0x106a2d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x106a312e8" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x106a312e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x106a31638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x106a53020" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x106a53020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x106a53e28"/>
        <function-ref name="initTimerB" scoped="" ref="0x106a534f8"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x106a53680"/>
        <function-ref name="initTimerA" scoped="" ref="0x106a53808"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x106a53370"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x106a53990"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x106a53b18"/>
        <function-ref name="initClocks" scoped="" ref="0x106a53ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x106a52188" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x106a52188"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x106a524d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x106a548f0" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x106a548f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x106a54c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x106a91d30" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x106a91d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x106a8a0d8"/>
        <function-ref name="getControl" scoped="" ref="0x106a8a260"/>
        <function-ref name="enableEvents" scoped="" ref="0x106a8a3e8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x106a8a570"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x106a8a6f8"/>
        <function-ref name="disableEvents" scoped="" ref="0x106a8a880"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x106a8aa08"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x106a8ab90"/>
        <function-ref name="setControl" scoped="" ref="0x106a8ad18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x106a9ad30" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x106a9ad30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x106a990d8"/>
        <function-ref name="getControl" scoped="" ref="0x106a99260"/>
        <function-ref name="enableEvents" scoped="" ref="0x106a993e8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x106a99570"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x106a996f8"/>
        <function-ref name="disableEvents" scoped="" ref="0x106a99880"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x106a99a08"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x106a99b90"/>
        <function-ref name="setControl" scoped="" ref="0x106a99d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x106aa2558" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x106aa2558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x106aa28a8"/>
        <function-ref name="setSynchronous" scoped="" ref="0x106aa2a30"/>
        <function-ref name="captured" scoped="" ref="0x106aa2bb8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x106aa2d40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x106aa1020"/>
        <function-ref name="setEdge" scoped="" ref="0x106aa11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x106aa6020" loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x106aa6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x106aa6370"/>
        <function-ref name="setSynchronous" scoped="" ref="0x106aa64f8"/>
        <function-ref name="captured" scoped="" ref="0x106aa6680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x106aa6808"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x106aa6990"/>
        <function-ref name="setEdge" scoped="" ref="0x106aa6b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x106a88e60" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x106a88e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x106a871e8"/>
        <function-ref name="setEvent" scoped="" ref="0x106a87370"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x106a874f8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x106a87680"/>
        <function-ref name="fired" scoped="" ref="0x106a87808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x106aad6e0" loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x106aad6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x106aada30"/>
        <function-ref name="setEvent" scoped="" ref="0x106aadbb8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x106aadd40"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x106aac020"/>
        <function-ref name="fired" scoped="" ref="0x106aac1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x106ac3020" loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x106ac3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x106ac3370"/>
        <function-ref name="setSynchronous" scoped="" ref="0x106ac34f8"/>
        <function-ref name="captured" scoped="" ref="0x106ac3680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x106ac3808"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x106ac3990"/>
        <function-ref name="setEdge" scoped="" ref="0x106ac3b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x106ab3060" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x106ab3060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x106ab33b0"/>
        <function-ref name="getControl" scoped="" ref="0x106ab3538"/>
        <function-ref name="enableEvents" scoped="" ref="0x106ab36c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x106ab3848"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x106ab39d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x106ab3b58"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x106ab3ce0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x106ab3e68"/>
        <function-ref name="setControl" scoped="" ref="0x106ab2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x106a8b4d0" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x106a8b4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x106a8b820"/>
        <function-ref name="getControl" scoped="" ref="0x106a8b9a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x106a8bb30"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x106a8bcb8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x106a8be40"/>
        <function-ref name="disableEvents" scoped="" ref="0x106a92020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x106a921a8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x106a92330"/>
        <function-ref name="setControl" scoped="" ref="0x106a924b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x106aa8020" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x106aa8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x106aa8370"/>
        <function-ref name="setSynchronous" scoped="" ref="0x106aa84f8"/>
        <function-ref name="captured" scoped="" ref="0x106aa8680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x106aa8808"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x106aa8990"/>
        <function-ref name="setEdge" scoped="" ref="0x106aa8b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x106aafa70" loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x106aafa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x106aafdc0"/>
        <function-ref name="setEvent" scoped="" ref="0x106aae020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x106aae1a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x106aae330"/>
        <function-ref name="fired" scoped="" ref="0x106aae4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x106a98120" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x106a98120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x106a98570"/>
        <function-ref name="getControl" scoped="" ref="0x106a986f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x106a98880"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x106a98a08"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x106a98b90"/>
        <function-ref name="disableEvents" scoped="" ref="0x106a98d18"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x106a97020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x106a971a8"/>
        <function-ref name="setControl" scoped="" ref="0x106a97330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x106aa1558" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x106aa1558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x106aa18a8"/>
        <function-ref name="setSynchronous" scoped="" ref="0x106aa1a30"/>
        <function-ref name="captured" scoped="" ref="0x106aa1bb8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x106aa1d40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x106a9b020"/>
        <function-ref name="setEdge" scoped="" ref="0x106a9b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x106aa5020" loc="69:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x106aa5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x106aa5370"/>
        <function-ref name="setSynchronous" scoped="" ref="0x106aa54f8"/>
        <function-ref name="captured" scoped="" ref="0x106aa5680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x106aa5808"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x106aa5990"/>
        <function-ref name="setEdge" scoped="" ref="0x106aa5b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x106a97710" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x106a97710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x106a97a60"/>
        <function-ref name="getControl" scoped="" ref="0x106a97be8"/>
        <function-ref name="enableEvents" scoped="" ref="0x106a97d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x106a96020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x106a961a8"/>
        <function-ref name="disableEvents" scoped="" ref="0x106a96330"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x106a964b8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x106a96640"/>
        <function-ref name="setControl" scoped="" ref="0x106a967c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x106a87bb8" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x106a87bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x106aa3020"/>
        <function-ref name="setEvent" scoped="" ref="0x106aa31a8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x106aa3330"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x106aa34b8"/>
        <function-ref name="fired" scoped="" ref="0x106aa3640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x106a7c060" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x106a7c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x106a7c3b0"/>
        <function-ref name="setClockSource" scoped="" ref="0x106a7c538"/>
        <function-ref name="enableEvents" scoped="" ref="0x106a7c6c0"/>
        <function-ref name="get" scoped="" ref="0x106a7c848"/>
        <function-ref name="disableEvents" scoped="" ref="0x106a7c9d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x106a7cb58"/>
        <function-ref name="getMode" scoped="" ref="0x106a7cce0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x106a7ce68"/>
        <function-ref name="overflow" scoped="" ref="0x106a7b020"/>
        <function-ref name="setMode" scoped="" ref="0x106a7b1a8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x106a7b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x106aac558" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x106aac558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x106aac8a8"/>
        <function-ref name="setEvent" scoped="" ref="0x106aaca30"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x106aacbb8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x106aacd40"/>
        <function-ref name="fired" scoped="" ref="0x106aab020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x106a92898" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x106a92898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x106a92be8"/>
        <function-ref name="getControl" scoped="" ref="0x106a92d70"/>
        <function-ref name="enableEvents" scoped="" ref="0x106a91020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x106a911a8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x106a91330"/>
        <function-ref name="disableEvents" scoped="" ref="0x106a914b8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x106a91640"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x106a917c8"/>
        <function-ref name="setControl" scoped="" ref="0x106a91950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x106ab2400" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x106ab2400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x106ab2750"/>
        <function-ref name="getControl" scoped="" ref="0x106ab28d8"/>
        <function-ref name="enableEvents" scoped="" ref="0x106ab2a60"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x106ab2be8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x106ab2d70"/>
        <function-ref name="disableEvents" scoped="" ref="0x106ab1020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x106ab11a8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x106ab1330"/>
        <function-ref name="setControl" scoped="" ref="0x106ab14b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x106a9c668" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x106a9c668"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x106a9c9b8"/>
        <function-ref name="setSynchronous" scoped="" ref="0x106a9cb40"/>
        <function-ref name="captured" scoped="" ref="0x106a9ccc8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x106a9ce50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x106aa2020"/>
        <function-ref name="setEdge" scoped="" ref="0x106aa21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x106aa7020" loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x106aa7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x106aa7370"/>
        <function-ref name="setSynchronous" scoped="" ref="0x106aa74f8"/>
        <function-ref name="captured" scoped="" ref="0x106aa7680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x106aa7808"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x106aa7990"/>
        <function-ref name="setEdge" scoped="" ref="0x106aa7b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x106a88140" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x106a88140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x106a88490"/>
        <function-ref name="setEvent" scoped="" ref="0x106a88618"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x106a887a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x106a88928"/>
        <function-ref name="fired" scoped="" ref="0x106a88ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x106aae868" loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x106aae868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x106aaebb8"/>
        <function-ref name="setEvent" scoped="" ref="0x106aaed40"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x106aad020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x106aad1a8"/>
        <function-ref name="fired" scoped="" ref="0x106aad330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x106ac4020" loc="70:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x106ac4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x106ac4370"/>
        <function-ref name="setSynchronous" scoped="" ref="0x106ac44f8"/>
        <function-ref name="captured" scoped="" ref="0x106ac4680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x106ac4808"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x106ac4990"/>
        <function-ref name="setEdge" scoped="" ref="0x106ac4b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x106a96ba8" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x106a96ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x106ab4020"/>
        <function-ref name="getControl" scoped="" ref="0x106ab41a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x106ab4330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x106ab44b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x106ab4640"/>
        <function-ref name="disableEvents" scoped="" ref="0x106ab47c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x106ab4950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x106ab4ad8"/>
        <function-ref name="setControl" scoped="" ref="0x106ab4c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x106a9b520" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x106a9b520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x106a9b870"/>
        <function-ref name="setClockSource" scoped="" ref="0x106a9b9f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x106a9bb80"/>
        <function-ref name="get" scoped="" ref="0x106a9bd08"/>
        <function-ref name="disableEvents" scoped="" ref="0x106a9a020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x106a9a1a8"/>
        <function-ref name="getMode" scoped="" ref="0x106a9a330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x106a9a4b8"/>
        <function-ref name="overflow" scoped="" ref="0x106a9a640"/>
        <function-ref name="setMode" scoped="" ref="0x106a9a7c8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x106a9a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x106aab3d0" loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x106aab3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x106aab720"/>
        <function-ref name="setEvent" scoped="" ref="0x106aab8a8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x106aaba30"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x106aabbb8"/>
        <function-ref name="fired" scoped="" ref="0x106aabd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x106aa9060" loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x106aa9060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x106aa93b0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x106aa9538"/>
        <function-ref name="captured" scoped="" ref="0x106aa96c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x106aa9848"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x106aa99d0"/>
        <function-ref name="setEdge" scoped="" ref="0x106aa9b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x106aaa120" loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x106aaa120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x106aaa670"/>
        <function-ref name="setEvent" scoped="" ref="0x106aaa7f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x106aaa980"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x106aaab08"/>
        <function-ref name="fired" scoped="" ref="0x106aaac90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x106ab0d00" loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x106ab0d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x106aaf0a0"/>
        <function-ref name="setEvent" scoped="" ref="0x106aaf228"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x106aaf3b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x106aaf538"/>
        <function-ref name="fired" scoped="" ref="0x106aaf6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x106ab1898" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x106ab1898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x106ab1be8"/>
        <function-ref name="getControl" scoped="" ref="0x106ab1d70"/>
        <function-ref name="enableEvents" scoped="" ref="0x106ab0020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x106ab01a8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x106ab0330"/>
        <function-ref name="disableEvents" scoped="" ref="0x106ab04b8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x106ab0640"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x106ab07c8"/>
        <function-ref name="setControl" scoped="" ref="0x106ab0950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x106aedc70" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x106aedc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x106aec020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x106aed658" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x106aed658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x106aed9a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x106aec2e8" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x106aec2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x106aec638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x106aed020" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x106aed020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x106aed390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x106aef798" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x106aef798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x106aefae8"/>
        <function-ref name="setClockSource" scoped="" ref="0x106aefc70"/>
        <function-ref name="enableEvents" scoped="" ref="0x106aefdf8"/>
        <function-ref name="get" scoped="" ref="0x106aee020"/>
        <function-ref name="disableEvents" scoped="" ref="0x106aee1a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x106aee330"/>
        <function-ref name="getMode" scoped="" ref="0x106aee4b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x106aee640"/>
        <function-ref name="overflow" scoped="" ref="0x106aee7c8"/>
        <function-ref name="setMode" scoped="" ref="0x106aee950"/>
        <function-ref name="setInputDivider" scoped="" ref="0x106aeead8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x106ae5638" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x106ae5638"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x106ae5988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x106ae5020" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x106ae5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x106ae5370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x106ae5c50" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x106ae5c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x106b04020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x106ae68a0" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x106ae68a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x106ae6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x106ae71e8" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x106ae71e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x106ae7538"/>
        <function-ref name="setClockSource" scoped="" ref="0x106ae76c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x106ae7848"/>
        <function-ref name="get" scoped="" ref="0x106ae79d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x106ae7b58"/>
        <function-ref name="clearOverflow" scoped="" ref="0x106ae7ce0"/>
        <function-ref name="getMode" scoped="" ref="0x106ae7e68"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x106ae6020"/>
        <function-ref name="overflow" scoped="" ref="0x106ae61a8"/>
        <function-ref name="setMode" scoped="" ref="0x106ae6330"/>
        <function-ref name="setInputDivider" scoped="" ref="0x106ae64b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x106b43c58" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x106b43c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x106b42020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x106b421a8"/>
        <function-ref name="captured" scoped="" ref="0x106b42330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x106b424b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x106b42640"/>
        <function-ref name="setEdge" scoped="" ref="0x106b427c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x106b01c80" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x106b01c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x106b44020"/>
        <function-ref name="getControl" scoped="" ref="0x106b441a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x106b44330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x106b444b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x106b44640"/>
        <function-ref name="disableEvents" scoped="" ref="0x106b447c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x106b44950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x106b44ad8"/>
        <function-ref name="setControl" scoped="" ref="0x106b44c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x106b40100" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x106b40100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x106b40450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x106b43020" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x106b43020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x106b43370"/>
        <function-ref name="setEvent" scoped="" ref="0x106b434f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x106b43680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x106b43808"/>
        <function-ref name="fired" scoped="" ref="0x106b43990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x106b42a90" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x106b42a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x106b42de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x106b41020"/>
        <function-ref name="enableEvents" scoped="" ref="0x106b411a8"/>
        <function-ref name="get" scoped="" ref="0x106b41330"/>
        <function-ref name="disableEvents" scoped="" ref="0x106b414b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x106b41640"/>
        <function-ref name="getMode" scoped="" ref="0x106b417c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x106b41950"/>
        <function-ref name="overflow" scoped="" ref="0x106b41ad8"/>
        <function-ref name="setMode" scoped="" ref="0x106b41c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x106b41de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x106b3cc58" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x106b3cc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x106b3b020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x106b3b1a8"/>
        <function-ref name="captured" scoped="" ref="0x106b3b330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x106b3b4b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x106b3b640"/>
        <function-ref name="setEdge" scoped="" ref="0x106b3b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x106b3ec80" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x106b3ec80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x106b3d020"/>
        <function-ref name="getControl" scoped="" ref="0x106b3d1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x106b3d330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x106b3d4b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x106b3d640"/>
        <function-ref name="disableEvents" scoped="" ref="0x106b3d7c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x106b3d950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x106b3dad8"/>
        <function-ref name="setControl" scoped="" ref="0x106b3dc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x106b38100" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x106b38100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x106b38450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x106b3c020" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x106b3c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x106b3c370"/>
        <function-ref name="setEvent" scoped="" ref="0x106b3c4f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x106b3c680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x106b3c808"/>
        <function-ref name="fired" scoped="" ref="0x106b3c990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x106b3ba90" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x106b3ba90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x106b3bde0"/>
        <function-ref name="setClockSource" scoped="" ref="0x106b39020"/>
        <function-ref name="enableEvents" scoped="" ref="0x106b391a8"/>
        <function-ref name="get" scoped="" ref="0x106b39330"/>
        <function-ref name="disableEvents" scoped="" ref="0x106b394b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x106b39640"/>
        <function-ref name="getMode" scoped="" ref="0x106b397c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x106b39950"/>
        <function-ref name="overflow" scoped="" ref="0x106b39ad8"/>
        <function-ref name="setMode" scoped="" ref="0x106b39c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x106b39de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x106b56c58" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x106b56c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x106b55020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x106b551a8"/>
        <function-ref name="captured" scoped="" ref="0x106b55330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x106b554b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x106b55640"/>
        <function-ref name="setEdge" scoped="" ref="0x106b557c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x106b58c80" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x106b58c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x106b57020"/>
        <function-ref name="getControl" scoped="" ref="0x106b571a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x106b57330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x106b574b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x106b57640"/>
        <function-ref name="disableEvents" scoped="" ref="0x106b577c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x106b57950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x106b57ad8"/>
        <function-ref name="setControl" scoped="" ref="0x106b57c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x106b53100" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x106b53100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x106b53450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x106b56020" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x106b56020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x106b56370"/>
        <function-ref name="setEvent" scoped="" ref="0x106b564f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x106b56680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x106b56808"/>
        <function-ref name="fired" scoped="" ref="0x106b56990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x106b55a90" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x106b55a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x106b55de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x106b54020"/>
        <function-ref name="enableEvents" scoped="" ref="0x106b541a8"/>
        <function-ref name="get" scoped="" ref="0x106b54330"/>
        <function-ref name="disableEvents" scoped="" ref="0x106b544b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x106b54640"/>
        <function-ref name="getMode" scoped="" ref="0x106b547c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x106b54950"/>
        <function-ref name="overflow" scoped="" ref="0x106b54ad8"/>
        <function-ref name="setMode" scoped="" ref="0x106b54c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x106b54de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x106b4fc58" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x106b4fc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x106b4e020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x106b4e1a8"/>
        <function-ref name="captured" scoped="" ref="0x106b4e330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x106b4e4b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x106b4e640"/>
        <function-ref name="setEdge" scoped="" ref="0x106b4e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x106b51c80" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x106b51c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x106b50020"/>
        <function-ref name="getControl" scoped="" ref="0x106b501a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x106b50330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x106b504b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x106b50640"/>
        <function-ref name="disableEvents" scoped="" ref="0x106b507c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x106b50950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x106b50ad8"/>
        <function-ref name="setControl" scoped="" ref="0x106b50c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x106b4c100" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x106b4c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x106b4c450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x106b4f020" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x106b4f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x106b4f370"/>
        <function-ref name="setEvent" scoped="" ref="0x106b4f4f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x106b4f680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x106b4f808"/>
        <function-ref name="fired" scoped="" ref="0x106b4f990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x106b4ea90" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x106b4ea90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x106b4ede0"/>
        <function-ref name="setClockSource" scoped="" ref="0x106b4d020"/>
        <function-ref name="enableEvents" scoped="" ref="0x106b4d1a8"/>
        <function-ref name="get" scoped="" ref="0x106b4d330"/>
        <function-ref name="disableEvents" scoped="" ref="0x106b4d4b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x106b4d640"/>
        <function-ref name="getMode" scoped="" ref="0x106b4d7c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x106b4d950"/>
        <function-ref name="overflow" scoped="" ref="0x106b4dad8"/>
        <function-ref name="setMode" scoped="" ref="0x106b4dc60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x106b4dde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x106b69c58" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x106b69c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x106b68020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x106b681a8"/>
        <function-ref name="captured" scoped="" ref="0x106b68330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x106b684b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x106b68640"/>
        <function-ref name="setEdge" scoped="" ref="0x106b687c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x106b49c80" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x106b49c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x106b6a020"/>
        <function-ref name="getControl" scoped="" ref="0x106b6a1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x106b6a330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x106b6a4b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x106b6a640"/>
        <function-ref name="disableEvents" scoped="" ref="0x106b6a7c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x106b6a950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x106b6aad8"/>
        <function-ref name="setControl" scoped="" ref="0x106b6ac60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x106b66100" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x106b66100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x106b66450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x106b69020" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x106b69020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x106b69370"/>
        <function-ref name="setEvent" scoped="" ref="0x106b694f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x106b69680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x106b69808"/>
        <function-ref name="fired" scoped="" ref="0x106b69990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x106b68a90" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x106b68a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x106b68de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x106b67020"/>
        <function-ref name="enableEvents" scoped="" ref="0x106b671a8"/>
        <function-ref name="get" scoped="" ref="0x106b67330"/>
        <function-ref name="disableEvents" scoped="" ref="0x106b674b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x106b67640"/>
        <function-ref name="getMode" scoped="" ref="0x106b677c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x106b67950"/>
        <function-ref name="overflow" scoped="" ref="0x106b67ad8"/>
        <function-ref name="setMode" scoped="" ref="0x106b67c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x106b67de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x106b62c58" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x106b62c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x106b61020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x106b611a8"/>
        <function-ref name="captured" scoped="" ref="0x106b61330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x106b614b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x106b61640"/>
        <function-ref name="setEdge" scoped="" ref="0x106b617c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x106b64c80" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x106b64c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x106b63020"/>
        <function-ref name="getControl" scoped="" ref="0x106b631a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x106b63330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x106b634b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x106b63640"/>
        <function-ref name="disableEvents" scoped="" ref="0x106b637c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x106b63950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x106b63ad8"/>
        <function-ref name="setControl" scoped="" ref="0x106b63c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x106b5f100" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x106b5f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x106b5f450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x106b62020" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x106b62020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x106b62370"/>
        <function-ref name="setEvent" scoped="" ref="0x106b624f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x106b62680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x106b62808"/>
        <function-ref name="fired" scoped="" ref="0x106b62990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x106b61a90" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x106b61a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x106b61de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x106b60020"/>
        <function-ref name="enableEvents" scoped="" ref="0x106b601a8"/>
        <function-ref name="get" scoped="" ref="0x106b60330"/>
        <function-ref name="disableEvents" scoped="" ref="0x106b604b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x106b60640"/>
        <function-ref name="getMode" scoped="" ref="0x106b607c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x106b60950"/>
        <function-ref name="overflow" scoped="" ref="0x106b60ad8"/>
        <function-ref name="setMode" scoped="" ref="0x106b60c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x106b60de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x106b5ac58" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x106b5ac58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x106b7b020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x106b7b1a8"/>
        <function-ref name="captured" scoped="" ref="0x106b7b330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x106b7b4b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x106b7b640"/>
        <function-ref name="setEdge" scoped="" ref="0x106b7b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x106b5cc80" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x106b5cc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x106b5b020"/>
        <function-ref name="getControl" scoped="" ref="0x106b5b1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x106b5b330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x106b5b4b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x106b5b640"/>
        <function-ref name="disableEvents" scoped="" ref="0x106b5b7c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x106b5b950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x106b5bad8"/>
        <function-ref name="setControl" scoped="" ref="0x106b5bc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x106b79100" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x106b79100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x106b79450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x106b5a020" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x106b5a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x106b5a370"/>
        <function-ref name="setEvent" scoped="" ref="0x106b5a4f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x106b5a680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x106b5a808"/>
        <function-ref name="fired" scoped="" ref="0x106b5a990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x106b7ba90" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x106b7ba90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x106b7bde0"/>
        <function-ref name="setClockSource" scoped="" ref="0x106b7a020"/>
        <function-ref name="enableEvents" scoped="" ref="0x106b7a1a8"/>
        <function-ref name="get" scoped="" ref="0x106b7a330"/>
        <function-ref name="disableEvents" scoped="" ref="0x106b7a4b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x106b7a640"/>
        <function-ref name="getMode" scoped="" ref="0x106b7a7c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x106b7a950"/>
        <function-ref name="overflow" scoped="" ref="0x106b7aad8"/>
        <function-ref name="setMode" scoped="" ref="0x106b7ac60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x106b7ade8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x106b75c58" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x106b75c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x106b74020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x106b741a8"/>
        <function-ref name="captured" scoped="" ref="0x106b74330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x106b744b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x106b74640"/>
        <function-ref name="setEdge" scoped="" ref="0x106b747c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x106b77c80" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x106b77c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x106b76020"/>
        <function-ref name="getControl" scoped="" ref="0x106b761a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x106b76330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x106b764b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x106b76640"/>
        <function-ref name="disableEvents" scoped="" ref="0x106b767c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x106b76950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x106b76ad8"/>
        <function-ref name="setControl" scoped="" ref="0x106b76c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x106b72100" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x106b72100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x106b72450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x106b75020" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x106b75020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x106b75370"/>
        <function-ref name="setEvent" scoped="" ref="0x106b754f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x106b75680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x106b75808"/>
        <function-ref name="fired" scoped="" ref="0x106b75990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x106b74a90" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x106b74a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x106b74de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x106b73020"/>
        <function-ref name="enableEvents" scoped="" ref="0x106b731a8"/>
        <function-ref name="get" scoped="" ref="0x106b73330"/>
        <function-ref name="disableEvents" scoped="" ref="0x106b734b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x106b73640"/>
        <function-ref name="getMode" scoped="" ref="0x106b737c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x106b73950"/>
        <function-ref name="overflow" scoped="" ref="0x106b73ad8"/>
        <function-ref name="setMode" scoped="" ref="0x106b73c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x106b73de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x106b6dc58" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x106b6dc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x106b6c020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x106b6c1a8"/>
        <function-ref name="captured" scoped="" ref="0x106b6c330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x106b6c4b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x106b6c640"/>
        <function-ref name="setEdge" scoped="" ref="0x106b6c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x106b6fc80" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x106b6fc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x106b6e020"/>
        <function-ref name="getControl" scoped="" ref="0x106b6e1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x106b6e330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x106b6e4b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x106b6e640"/>
        <function-ref name="disableEvents" scoped="" ref="0x106b6e7c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x106b6e950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x106b6ead8"/>
        <function-ref name="setControl" scoped="" ref="0x106b6ec60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x106b8d100" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x106b8d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x106b8d450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x106b6d020" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x106b6d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x106b6d370"/>
        <function-ref name="setEvent" scoped="" ref="0x106b6d4f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x106b6d680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x106b6d808"/>
        <function-ref name="fired" scoped="" ref="0x106b6d990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x106b6ca90" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x106b6ca90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x106b6cde0"/>
        <function-ref name="setClockSource" scoped="" ref="0x106b6b020"/>
        <function-ref name="enableEvents" scoped="" ref="0x106b6b1a8"/>
        <function-ref name="get" scoped="" ref="0x106b6b330"/>
        <function-ref name="disableEvents" scoped="" ref="0x106b6b4b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x106b6b640"/>
        <function-ref name="getMode" scoped="" ref="0x106b6b7c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x106b6b950"/>
        <function-ref name="overflow" scoped="" ref="0x106b6bad8"/>
        <function-ref name="setMode" scoped="" ref="0x106b6bc60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x106b6bde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x106b89c58" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x106b89c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x106b88020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x106b881a8"/>
        <function-ref name="captured" scoped="" ref="0x106b88330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x106b884b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x106b88640"/>
        <function-ref name="setEdge" scoped="" ref="0x106b887c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x106b8bc80" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x106b8bc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x106b8a020"/>
        <function-ref name="getControl" scoped="" ref="0x106b8a1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x106b8a330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x106b8a4b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x106b8a640"/>
        <function-ref name="disableEvents" scoped="" ref="0x106b8a7c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x106b8a950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x106b8aad8"/>
        <function-ref name="setControl" scoped="" ref="0x106b8ac60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x106b86100" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x106b86100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x106b86450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x106b89020" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x106b89020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x106b89370"/>
        <function-ref name="setEvent" scoped="" ref="0x106b894f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x106b89680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x106b89808"/>
        <function-ref name="fired" scoped="" ref="0x106b89990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x106b88a90" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x106b88a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x106b88de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x106b87020"/>
        <function-ref name="enableEvents" scoped="" ref="0x106b871a8"/>
        <function-ref name="get" scoped="" ref="0x106b87330"/>
        <function-ref name="disableEvents" scoped="" ref="0x106b874b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x106b87640"/>
        <function-ref name="getMode" scoped="" ref="0x106b877c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x106b87950"/>
        <function-ref name="overflow" scoped="" ref="0x106b87ad8"/>
        <function-ref name="setMode" scoped="" ref="0x106b87c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x106b87de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x106b80b60" loc="7:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x106b80b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x106b7f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x106b82520" loc="4:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x106b82520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x106b82870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x106b82c68" loc="5:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x106b82c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x106b80020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x106b80418" loc="6:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x106b80418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x106b80768"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x1067cc020" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x1067cc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x1067cc370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x1066193e0" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x1066193e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x106619730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x106898838" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x106898838"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x106898b88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x106a30ab8" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x106a30ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x106bc1950"/>
        <function-ref name="initTimerB" scoped="" ref="0x106bc1020"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x106bc11a8"/>
        <function-ref name="initTimerA" scoped="" ref="0x106bc1330"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x106a30e08"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x106bc14b8"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x106bc1640"/>
        <function-ref name="initClocks" scoped="" ref="0x106bc17c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x106bd9418" loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x106bd9418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x106bd9768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x106a18c50" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x106a18c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x106bc2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x106bc2ce0" loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x106bc2ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x106bd90a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x106bc2308" loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x106bc2308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x106bc2658"/>
        <function-ref name="taskLoop" scoped="" ref="0x106bc27e0"/>
        <function-ref name="runNextTask" scoped="" ref="0x106bc2968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x1065a5ca0" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x1065a5ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x106564020"/>
        <function-ref name="runTask" scoped="" ref="0x1065641a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x10659e390" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x10659e390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10659e6e0"/>
        <function-ref name="taskLoop" scoped="" ref="0x10659e868"/>
        <function-ref name="runNextTask" scoped="" ref="0x10659e9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x1069d9020" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x1069d9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1069d9370"/>
        <function-ref name="runTask" scoped="" ref="0x1069d94f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x1069d64e0" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x1069d64e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x1069d6830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x1069db0c0" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x1069db0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1069db410"/>
        <function-ref name="taskLoop" scoped="" ref="0x1069db598"/>
        <function-ref name="runNextTask" scoped="" ref="0x1069db720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x106be2dc0" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x106be2dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x106be5170"/>
        <function-ref name="stopDone" scoped="" ref="0x106be52f8"/>
        <function-ref name="start" scoped="" ref="0x106be5480"/>
        <function-ref name="stop" scoped="" ref="0x106be5608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x106c2c9d0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x106c2c9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x106bce3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x106c2cd20"/>
        <function-ref name="getPayload" scoped="" ref="0x106be4020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x106be41a8"/>
        <function-ref name="cancel" scoped="" ref="0x106be4330"/>
        <function-ref name="sendDone" scoped="" ref="0x106be44b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x106c459f8" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x106c459f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x106c45d48"/>
        <function-ref name="payloadLength" scoped="" ref="0x106be1020"/>
        <function-ref name="getPayload" scoped="" ref="0x106be11a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x106be1330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x106be14b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x106c2a5e0" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x106c2a5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x106bce3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x106c2a930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x106c46020" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x106c46020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x106c46370"/>
        <function-ref name="led0Toggle" scoped="" ref="0x106c464f8"/>
        <function-ref name="led1On" scoped="" ref="0x106c46680"/>
        <function-ref name="led1Toggle" scoped="" ref="0x106c46808"/>
        <function-ref name="led2Toggle" scoped="" ref="0x106c46990"/>
        <function-ref name="get" scoped="" ref="0x106c46b18"/>
        <function-ref name="led1Off" scoped="" ref="0x106c46ca0"/>
        <function-ref name="led2Off" scoped="" ref="0x106c59330"/>
        <function-ref name="set" scoped="" ref="0x106c46e28"/>
        <function-ref name="led0On" scoped="" ref="0x106c59020"/>
        <function-ref name="led2On" scoped="" ref="0x106c591a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x106c540d0" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x106c540d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x106c54420"/>
        <function-ref name="noAck" scoped="" ref="0x106c545a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x106c54730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x106c5a190" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x106c5a190"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x106c5a4e0"/>
        <function-ref name="source" scoped="" ref="0x106c5a668"/>
        <function-ref name="address" scoped="" ref="0x106c5a7f0"/>
        <function-ref name="destination" scoped="" ref="0x106c5a978"/>
        <function-ref name="setSource" scoped="" ref="0x106c5ab00"/>
        <function-ref name="setDestination" scoped="" ref="0x106c5ac88"/>
        <function-ref name="type" scoped="" ref="0x106c5ae10"/>
        <function-ref name="setType" scoped="" ref="0x106c2e020"/>
        <function-ref name="isForMe" scoped="" ref="0x106c2e1a8"/>
        <function-ref name="setGroup" scoped="" ref="0x106c2e330"/>
        <function-ref name="localGroup" scoped="" ref="0x106c2e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x106caebb0" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x106caebb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x106cad020"/>
        <function-ref name="getPayload" scoped="" ref="0x106cad1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x106cad330"/>
        <function-ref name="cancel" scoped="" ref="0x106cad4b8"/>
        <function-ref name="sendDone" scoped="" ref="0x106cad640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x106cad8c8" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x106cad8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x106cadc18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x106c6eb60" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x106c6eb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x106bce3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x106cb1020"/>
        <function-ref name="getPayload" scoped="" ref="0x106cb11a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x106cb1330"/>
        <function-ref name="cancel" scoped="" ref="0x106cb14b8"/>
        <function-ref name="sendDone" scoped="" ref="0x106cb1640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x106caf578" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x106caf578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x106caf8c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x106cafa50"/>
        <function-ref name="getPayload" scoped="" ref="0x106cafbd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x106cafd60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x106cae020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x106cb19a8" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x106cb19a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x106bce3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x106cb1d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x106cae268" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x106cae268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x106cae5b8"/>
        <function-ref name="noAck" scoped="" ref="0x106cae740"/>
        <function-ref name="wasAcked" scoped="" ref="0x106cae8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x106cb0020" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x106cb0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x106cb0370"/>
        <function-ref name="source" scoped="" ref="0x106cb04f8"/>
        <function-ref name="address" scoped="" ref="0x106cb0680"/>
        <function-ref name="destination" scoped="" ref="0x106cb0808"/>
        <function-ref name="setSource" scoped="" ref="0x106cb0990"/>
        <function-ref name="setDestination" scoped="" ref="0x106cb0b18"/>
        <function-ref name="type" scoped="" ref="0x106cb0ca0"/>
        <function-ref name="setType" scoped="" ref="0x106cb0e28"/>
        <function-ref name="isForMe" scoped="" ref="0x106caf020"/>
        <function-ref name="setGroup" scoped="" ref="0x106caf1a8"/>
        <function-ref name="localGroup" scoped="" ref="0x106caf330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x106cd02e8" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x106cd02e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x106cd0638"/>
        <function-ref name="stopDone" scoped="" ref="0x106cd07c0"/>
        <function-ref name="start" scoped="" ref="0x106cd0948"/>
        <function-ref name="stop" scoped="" ref="0x106cd0ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x106ccece8" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x106ccece8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x106bcddb0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x106ccd0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x106ccd228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x106ccd3b0"/>
        <function-ref name="cancel" scoped="" ref="0x106ccd538"/>
        <function-ref name="sendDone" scoped="" ref="0x106ccd6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x106cd3bb0" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x106cd3bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x106cd0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x106cce270" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x106cce270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x106bcddb0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x106cce5c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x106ccc5a8" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x106ccc5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x106ccc8f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x106ccca80"/>
        <function-ref name="led1On" scoped="" ref="0x106cccc08"/>
        <function-ref name="led1Toggle" scoped="" ref="0x106cccd90"/>
        <function-ref name="led2Toggle" scoped="" ref="0x106ccb020"/>
        <function-ref name="get" scoped="" ref="0x106ccb1a8"/>
        <function-ref name="led1Off" scoped="" ref="0x106ccb330"/>
        <function-ref name="led2Off" scoped="" ref="0x106ccb950"/>
        <function-ref name="set" scoped="" ref="0x106ccb4b8"/>
        <function-ref name="led0On" scoped="" ref="0x106ccb640"/>
        <function-ref name="led2On" scoped="" ref="0x106ccb7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x106cc8ba8" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x106cc8ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x106bcddb0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x106ccc020"/>
        <function-ref name="offset" scoped="" ref="0x106ccc1a8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x106ccc330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x106cc0d50" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x106cc0d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x106ce70d8"/>
        <function-ref name="stopDone" scoped="" ref="0x106ce7260"/>
        <function-ref name="start" scoped="" ref="0x106ce73e8"/>
        <function-ref name="stop" scoped="" ref="0x106ce7570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x106d29dd0" loc="332:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x106d29dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x106d28170"/>
        <function-ref name="runTask" scoped="" ref="0x106d282f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x106cd4b00" loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x106cd4b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x106cd4e50"/>
        <function-ref name="stop" scoped="" ref="0x106cd6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x106d0a8e0" loc="191:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x106d0a8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x106d0ac30"/>
        <function-ref name="runTask" scoped="" ref="0x106d0adb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x106cc0738" loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x106cc0738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x106cc0a88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x106cf9608" loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x106cf9608"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x106cf9958"/>
        <function-ref name="flush" scoped="" ref="0x106cf9ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x106d2b590" loc="322:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x106d2b590"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x106d2b8e0"/>
        <function-ref name="runTask" scoped="" ref="0x106d2ba68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x106cd8da8" loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x106cd8da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x106ce0170"/>
        <function-ref name="resetSend" scoped="" ref="0x106ce02f8"/>
        <function-ref name="dataReceived" scoped="" ref="0x106ce0480"/>
        <function-ref name="resetReceive" scoped="" ref="0x106ce0608"/>
        <function-ref name="putData" scoped="" ref="0x106ce0790"/>
        <function-ref name="putDone" scoped="" ref="0x106ce0918"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x106ce0aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x106ce0d18" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x106ce0d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x106cdd0a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x106cdd228"/>
        <function-ref name="led1On" scoped="" ref="0x106cdd3b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x106cdd538"/>
        <function-ref name="led2Toggle" scoped="" ref="0x106cdd6c0"/>
        <function-ref name="get" scoped="" ref="0x106cdd848"/>
        <function-ref name="led1Off" scoped="" ref="0x106cdd9d0"/>
        <function-ref name="led2Off" scoped="" ref="0x106cd7020"/>
        <function-ref name="set" scoped="" ref="0x106cddb58"/>
        <function-ref name="led0On" scoped="" ref="0x106cddce0"/>
        <function-ref name="led2On" scoped="" ref="0x106cdde68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x106d4e020" loc="341:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x106d4e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x106d4e370"/>
        <function-ref name="runTask" scoped="" ref="0x106d4e4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x106ce2918" loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x106ce2918"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x106ce2c68"/>
        <function-ref name="nextByte" scoped="" ref="0x106ce2df0"/>
        <function-ref name="startSend" scoped="" ref="0x106ce6020"/>
        <function-ref name="sendCompleted" scoped="" ref="0x106ce61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x106cdeba8" loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x106cdeba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x106ce5020"/>
        <function-ref name="byteReceived" scoped="" ref="0x106ce51a8"/>
        <function-ref name="endPacket" scoped="" ref="0x106ce5330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x106e10100" loc="275:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x106e10100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x106e10450"/>
        <function-ref name="runTask" scoped="" ref="0x106e105d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x106de8020" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x106de8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x106bcddb0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x106de8390"/>
        <function-ref name="getPayload" scoped="" ref="0x106de8518"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x106de86a0"/>
        <function-ref name="cancel" scoped="" ref="0x106de8828"/>
        <function-ref name="sendDone" scoped="" ref="0x106de89b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x106e108a0" loc="158:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x106e108a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x106e10bf0"/>
        <function-ref name="runTask" scoped="" ref="0x106e10d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x106de9868" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x106de9868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x106bcddb0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x106de9bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x106de8db8" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x106de8db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x106bcddb0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x106e13170"/>
        <function-ref name="offset" scoped="" ref="0x106e132f8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x106e13480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x106e12a50" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x106e12a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x106e12da0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x106e11020"/>
        <function-ref name="led1On" scoped="" ref="0x106e111a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x106e11330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x106e114b8"/>
        <function-ref name="get" scoped="" ref="0x106e11640"/>
        <function-ref name="led1Off" scoped="" ref="0x106e117c8"/>
        <function-ref name="led2On" scoped="" ref="0x106e11de8"/>
        <function-ref name="set" scoped="" ref="0x106e11ad8"/>
        <function-ref name="led2Off" scoped="" ref="0x106e11950"/>
        <function-ref name="led0On" scoped="" ref="0x106e11c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x106e12020" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x106e12020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x106e12370"/>
        <function-ref name="nextByte" scoped="" ref="0x106e124f8"/>
        <function-ref name="startSend" scoped="" ref="0x106e12680"/>
        <function-ref name="sendCompleted" scoped="" ref="0x106e12808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x106e136c8" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x106e136c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x106e13a18"/>
        <function-ref name="byteReceived" scoped="" ref="0x106e13ba0"/>
        <function-ref name="endPacket" scoped="" ref="0x106e13d28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x106dfd448" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x106dfd448"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x106dfd798"/>
        <function-ref name="receivedByte" scoped="" ref="0x106dfd920"/>
        <function-ref name="receive" scoped="" ref="0x106dfdaa8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x106dfdc30"/>
        <function-ref name="receiveDone" scoped="" ref="0x106dfddb8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x106e09020"/>
        <function-ref name="sendDone" scoped="" ref="0x106e091a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x106e0eb48" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x106e0eb48"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x106e0a020"/>
        <function-ref name="resetSend" scoped="" ref="0x106e0a1a8"/>
        <function-ref name="dataReceived" scoped="" ref="0x106e0a330"/>
        <function-ref name="resetReceive" scoped="" ref="0x106e0a4b8"/>
        <function-ref name="putData" scoped="" ref="0x106e0a640"/>
        <function-ref name="putDone" scoped="" ref="0x106e0a7c8"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x106e0a950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x106e09420" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x106e09420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x106e09770"/>
        <function-ref name="led0Toggle" scoped="" ref="0x106e098f8"/>
        <function-ref name="led1On" scoped="" ref="0x106e09a80"/>
        <function-ref name="led1Toggle" scoped="" ref="0x106e09c08"/>
        <function-ref name="led2Toggle" scoped="" ref="0x106e09d90"/>
        <function-ref name="get" scoped="" ref="0x106e08020"/>
        <function-ref name="led1Off" scoped="" ref="0x106e081a8"/>
        <function-ref name="led2Off" scoped="" ref="0x106e087c8"/>
        <function-ref name="set" scoped="" ref="0x106e08330"/>
        <function-ref name="led0On" scoped="" ref="0x106e084b8"/>
        <function-ref name="led2On" scoped="" ref="0x106e08640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x106e39210" loc="6:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x106e39210"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x106e39560"/>
        <function-ref name="receive" scoped="" ref="0x106e396e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x106e40020" loc="5:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x106e40020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x106e40370"/>
        <function-ref name="receivedByte" scoped="" ref="0x106e404f8"/>
        <function-ref name="receive" scoped="" ref="0x106e40680"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x106e40808"/>
        <function-ref name="receiveDone" scoped="" ref="0x106e40990"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x106e40b18"/>
        <function-ref name="sendDone" scoped="" ref="0x106e40ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x106e0d7f8" loc="4:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x106e0d7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x106e0db48"/>
        <function-ref name="stop" scoped="" ref="0x106e0dcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x1072ee120" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x1072ee120"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x1072ee470"/>
        <function-ref name="immediateRequested" scoped="" ref="0x1072ee5f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x10732e8c8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x10732e8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10732ec18"/>
        <function-ref name="receive" scoped="" ref="0x10732eda0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x10732d060" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x10732d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x10732d3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x1072ee880" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x1072ee880"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1072eebd0"/>
        <function-ref name="receivedByte" scoped="" ref="0x1072eed58"/>
        <function-ref name="receive" scoped="" ref="0x10732e020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x10732e1a8"/>
        <function-ref name="receiveDone" scoped="" ref="0x10732e330"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x10732e4b8"/>
        <function-ref name="sendDone" scoped="" ref="0x10732e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1072ef4e0" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x1072ef4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1072ef830"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1072ef9b8"/>
        <function-ref name="request" scoped="" ref="0x1072efb40"/>
        <function-ref name="granted" scoped="" ref="0x1072efcc8"/>
        <function-ref name="isOwner" scoped="" ref="0x1072efe50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x106e92888" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x106e92888"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x106e92bd8"/>
        <function-ref name="configure" scoped="" ref="0x106e92d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x106e94b00" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x106e94b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x106e94e50"/>
        <function-ref name="receive" scoped="" ref="0x106e90020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x106e8fb68" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x106e8fb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x106e8e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x106e95570" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x106e95570"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x106e958c0"/>
        <function-ref name="receivedByte" scoped="" ref="0x106e95a48"/>
        <function-ref name="receive" scoped="" ref="0x106e95bd0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x106e95d58"/>
        <function-ref name="receiveDone" scoped="" ref="0x106e94020"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x106e941a8"/>
        <function-ref name="sendDone" scoped="" ref="0x106e94330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x106e908b8" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x106e908b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x106e90c08"/>
        <function-ref name="immediateRequest" scoped="" ref="0x106e90d90"/>
        <function-ref name="request" scoped="" ref="0x106e8f020"/>
        <function-ref name="granted" scoped="" ref="0x106e8f1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x106e8f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x106e9abc8" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x106e9abc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x106e96020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x106e961a8"/>
        <function-ref name="request" scoped="" ref="0x106e96330"/>
        <function-ref name="granted" scoped="" ref="0x106e964b8"/>
        <function-ref name="isOwner" scoped="" ref="0x106e96640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x106e8d030" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x106e8d030"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x106e8d380"/>
        <function-ref name="txDone" scoped="" ref="0x106e8d508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x106f2a060" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x106f2a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x106f2a3d0"/>
        <function-ref name="configure" scoped="" ref="0x106f2a558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x106f299e8" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x106f299e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x106f29d58"/>
        <function-ref name="receive" scoped="" ref="0x106f28020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x106f27180" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x106f27180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x106f274f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x106f277b8" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x106f277b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x106f27b08"/>
        <function-ref name="enableUartRx" scoped="" ref="0x106f27c90"/>
        <function-ref name="setUctl" scoped="" ref="0x106f27e18"/>
        <function-ref name="enableUart" scoped="" ref="0x106f26020"/>
        <function-ref name="setUrctl" scoped="" ref="0x106f261a8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x106f26330"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x106f264b8"/>
        <function-ref name="getUtctl" scoped="" ref="0x106f26640"/>
        <function-ref name="getUrctl" scoped="" ref="0x106f267c8"/>
        <function-ref name="resetUsart" scoped="" ref="0x106f26950"/>
        <function-ref name="getUmctl" scoped="" ref="0x106f26ad8"/>
        <function-ref name="disableIntr" scoped="" ref="0x106f26c60"/>
        <function-ref name="setUtctl" scoped="" ref="0x106f26de8"/>
        <function-ref name="getUbr" scoped="" ref="0x106f25120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x106f252a8"/>
        <function-ref name="setUmctl" scoped="" ref="0x106f25430"/>
        <function-ref name="isUartRx" scoped="" ref="0x106f255b8"/>
        <function-ref name="isUart" scoped="" ref="0x106f25740"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x106f258c8"/>
        <function-ref name="isSpi" scoped="" ref="0x106f25a50"/>
        <function-ref name="enableUartTx" scoped="" ref="0x106f25bd8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x106f25d60"/>
        <function-ref name="disableUartRx" scoped="" ref="0x106f24020"/>
        <function-ref name="enableIntr" scoped="" ref="0x106f241a8"/>
        <function-ref name="getMode" scoped="" ref="0x106f24330"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x106f246b8"/>
        <function-ref name="clrIntr" scoped="" ref="0x106f24840"/>
        <function-ref name="setUbr" scoped="" ref="0x106f249c8"/>
        <function-ref name="tx" scoped="" ref="0x106f24b50"/>
        <function-ref name="getUctl" scoped="" ref="0x106f24cd8"/>
        <function-ref name="disableUart" scoped="" ref="0x106f24e60"/>
        <function-ref name="enableSpi" scoped="" ref="0x106f23020"/>
        <function-ref name="setModeUart" scoped="" ref="0x106f231a8"/>
        <function-ref name="setModeSpi" scoped="" ref="0x106f23330"/>
        <function-ref name="rx" scoped="" ref="0x106f234b8"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x106f23640"/>
        <function-ref name="isUartTx" scoped="" ref="0x106f237c8"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x106f23950"/>
        <function-ref name="disableSpi" scoped="" ref="0x106f23ad8"/>
        <function-ref name="disableUartTx" scoped="" ref="0x106f23c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x106f2a900" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x106f2a900"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x106f2ac70"/>
        <function-ref name="receivedByte" scoped="" ref="0x106f2adf8"/>
        <function-ref name="receive" scoped="" ref="0x106f29020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x106f291a8"/>
        <function-ref name="receiveDone" scoped="" ref="0x106f29330"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x106f294b8"/>
        <function-ref name="sendDone" scoped="" ref="0x106f29640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x106f22a58" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x106f22a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e87150"/>
            <typename><typedef-ref name="T32khz" ref="0x106e874a8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x106f21828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x106f1f190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x106f21cb0"/>
        <function-ref name="overflow" scoped="" ref="0x106f1f618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x106f28408" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x106f28408"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x106f28778"/>
        <function-ref name="immediateRequest" scoped="" ref="0x106f28900"/>
        <function-ref name="request" scoped="" ref="0x106f28a88"/>
        <function-ref name="granted" scoped="" ref="0x106f28c10"/>
        <function-ref name="isOwner" scoped="" ref="0x106f28d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x106f2b2e8" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x106f2b2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x106f2b658"/>
        <function-ref name="immediateRequest" scoped="" ref="0x106f2b7e0"/>
        <function-ref name="request" scoped="" ref="0x106f2b968"/>
        <function-ref name="granted" scoped="" ref="0x106f2baf0"/>
        <function-ref name="isOwner" scoped="" ref="0x106f2bc78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x106f220c8" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x106f220c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x106f22438"/>
        <function-ref name="txDone" scoped="" ref="0x106f225c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x106f1fa30" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x106f1fa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x106f1fd80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x106f1e020"/>
        <function-ref name="led1On" scoped="" ref="0x106f1e1a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x106f1e330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x106f1e4b8"/>
        <function-ref name="get" scoped="" ref="0x106f1e640"/>
        <function-ref name="led1Off" scoped="" ref="0x106f1e7c8"/>
        <function-ref name="led2On" scoped="" ref="0x106f1ede8"/>
        <function-ref name="set" scoped="" ref="0x106f1ead8"/>
        <function-ref name="led2Off" scoped="" ref="0x106f1e950"/>
        <function-ref name="led0On" scoped="" ref="0x106f1ec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x106f42528" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x106f42528"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x106f42878"/>
        <function-ref name="txDone" scoped="" ref="0x106f42a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x106f454f0" loc="76:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x106f454f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x106f45840"/>
        <function-ref name="stop" scoped="" ref="0x106f459c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x106f45ce0" loc="77:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x106f45ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x106f480a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x106f48228"/>
        <function-ref name="setUctl" scoped="" ref="0x106f483b0"/>
        <function-ref name="enableUart" scoped="" ref="0x106f48538"/>
        <function-ref name="setUrctl" scoped="" ref="0x106f486c0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x106f48848"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x106f489d0"/>
        <function-ref name="getUtctl" scoped="" ref="0x106f48b58"/>
        <function-ref name="getUrctl" scoped="" ref="0x106f48ce0"/>
        <function-ref name="resetUsart" scoped="" ref="0x106f48e68"/>
        <function-ref name="getUmctl" scoped="" ref="0x106f47020"/>
        <function-ref name="disableIntr" scoped="" ref="0x106f471a8"/>
        <function-ref name="setUtctl" scoped="" ref="0x106f47330"/>
        <function-ref name="getUbr" scoped="" ref="0x106f475b8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x106f47740"/>
        <function-ref name="setUmctl" scoped="" ref="0x106f478c8"/>
        <function-ref name="isUartRx" scoped="" ref="0x106f47a50"/>
        <function-ref name="isUart" scoped="" ref="0x106f47bd8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x106f47d60"/>
        <function-ref name="isSpi" scoped="" ref="0x106f44020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x106f441a8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x106f44330"/>
        <function-ref name="disableUartRx" scoped="" ref="0x106f444b8"/>
        <function-ref name="enableIntr" scoped="" ref="0x106f44640"/>
        <function-ref name="getMode" scoped="" ref="0x106f447c8"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x106f44b50"/>
        <function-ref name="clrIntr" scoped="" ref="0x106f44cd8"/>
        <function-ref name="setUbr" scoped="" ref="0x106f44e60"/>
        <function-ref name="tx" scoped="" ref="0x106f43020"/>
        <function-ref name="getUctl" scoped="" ref="0x106f431a8"/>
        <function-ref name="disableUart" scoped="" ref="0x106f43330"/>
        <function-ref name="enableSpi" scoped="" ref="0x106f434b8"/>
        <function-ref name="setModeUart" scoped="" ref="0x106f43640"/>
        <function-ref name="setModeSpi" scoped="" ref="0x106f437c8"/>
        <function-ref name="rx" scoped="" ref="0x106f43950"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x106f43ad8"/>
        <function-ref name="isUartTx" scoped="" ref="0x106f43c60"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x106f43de8"/>
        <function-ref name="disableSpi" scoped="" ref="0x106f42020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x106f421a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x106f5e7e0" loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x106f5e7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x106f5eb30"/>
        <function-ref name="isInput" scoped="" ref="0x106f5ecb8"/>
        <function-ref name="setResistor" scoped="" ref="0x106f5ee40"/>
        <function-ref name="toggle" scoped="" ref="0x106f5d020"/>
        <function-ref name="isOutput" scoped="" ref="0x106f5d1a8"/>
        <function-ref name="getResistor" scoped="" ref="0x106f5d330"/>
        <function-ref name="makeOutput" scoped="" ref="0x106f5d4b8"/>
        <function-ref name="get" scoped="" ref="0x106f5d640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x106f5d7c8"/>
        <function-ref name="getRaw" scoped="" ref="0x106f5d950"/>
        <function-ref name="set" scoped="" ref="0x106f5dad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x106f5dc60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x106f5dde8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x106f5c120"/>
        <function-ref name="clr" scoped="" ref="0x106f5c2a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x106f3aa68" loc="76:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x106f3aa68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x106f3adb8"/>
        <function-ref name="txDone" scoped="" ref="0x106f39020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x106f5c658" loc="81:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x106f5c658"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x106f5c9a8"/>
        <function-ref name="isInput" scoped="" ref="0x106f5cb30"/>
        <function-ref name="setResistor" scoped="" ref="0x106f5ccb8"/>
        <function-ref name="toggle" scoped="" ref="0x106f5ce40"/>
        <function-ref name="isOutput" scoped="" ref="0x106f5a020"/>
        <function-ref name="getResistor" scoped="" ref="0x106f5a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x106f5a330"/>
        <function-ref name="get" scoped="" ref="0x106f5a4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x106f5a640"/>
        <function-ref name="getRaw" scoped="" ref="0x106f5a7c8"/>
        <function-ref name="set" scoped="" ref="0x106f5a950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x106f5aad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x106f5ac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x106f59020"/>
        <function-ref name="clr" scoped="" ref="0x106f591a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x106f59558" loc="82:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x106f59558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x106f598a8"/>
        <function-ref name="isInput" scoped="" ref="0x106f59a30"/>
        <function-ref name="setResistor" scoped="" ref="0x106f59bb8"/>
        <function-ref name="toggle" scoped="" ref="0x106f59d40"/>
        <function-ref name="isOutput" scoped="" ref="0x106f58020"/>
        <function-ref name="getResistor" scoped="" ref="0x106f581a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x106f58330"/>
        <function-ref name="get" scoped="" ref="0x106f584b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x106f58640"/>
        <function-ref name="getRaw" scoped="" ref="0x106f587c8"/>
        <function-ref name="set" scoped="" ref="0x106f58950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x106f58ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x106f58c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x106f57020"/>
        <function-ref name="clr" scoped="" ref="0x106f571a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x106f3e098" loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x106f3e098"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x106f3e3e8"/>
        <function-ref name="enableUartRx" scoped="" ref="0x106f3e570"/>
        <function-ref name="setUctl" scoped="" ref="0x106f3e6f8"/>
        <function-ref name="enableUart" scoped="" ref="0x106f3e880"/>
        <function-ref name="setUrctl" scoped="" ref="0x106f3ea08"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x106f3eb90"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x106f3ed18"/>
        <function-ref name="getUtctl" scoped="" ref="0x106f3d020"/>
        <function-ref name="getUrctl" scoped="" ref="0x106f3d1a8"/>
        <function-ref name="resetUsart" scoped="" ref="0x106f3d330"/>
        <function-ref name="getUmctl" scoped="" ref="0x106f3d4b8"/>
        <function-ref name="disableIntr" scoped="" ref="0x106f3d640"/>
        <function-ref name="setUtctl" scoped="" ref="0x106f3d7c8"/>
        <function-ref name="getUbr" scoped="" ref="0x106f3da50"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x106f3dbd8"/>
        <function-ref name="setUmctl" scoped="" ref="0x106f3dd60"/>
        <function-ref name="isUartRx" scoped="" ref="0x106f3c020"/>
        <function-ref name="isUart" scoped="" ref="0x106f3c1a8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x106f3c330"/>
        <function-ref name="isSpi" scoped="" ref="0x106f3c4b8"/>
        <function-ref name="enableUartTx" scoped="" ref="0x106f3c640"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x106f3c7c8"/>
        <function-ref name="disableUartRx" scoped="" ref="0x106f3c950"/>
        <function-ref name="enableIntr" scoped="" ref="0x106f3cad8"/>
        <function-ref name="getMode" scoped="" ref="0x106f3cc60"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x106f3b020"/>
        <function-ref name="clrIntr" scoped="" ref="0x106f3b1a8"/>
        <function-ref name="setUbr" scoped="" ref="0x106f3b330"/>
        <function-ref name="tx" scoped="" ref="0x106f3b4b8"/>
        <function-ref name="getUctl" scoped="" ref="0x106f3b640"/>
        <function-ref name="disableUart" scoped="" ref="0x106f3b7c8"/>
        <function-ref name="enableSpi" scoped="" ref="0x106f3b950"/>
        <function-ref name="setModeUart" scoped="" ref="0x106f3bad8"/>
        <function-ref name="setModeSpi" scoped="" ref="0x106f3bc60"/>
        <function-ref name="rx" scoped="" ref="0x106f3bde8"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x106f3a020"/>
        <function-ref name="isUartTx" scoped="" ref="0x106f3a1a8"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x106f3a330"/>
        <function-ref name="disableSpi" scoped="" ref="0x106f3a4b8"/>
        <function-ref name="disableUartTx" scoped="" ref="0x106f3a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x106f417e0" loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x106f417e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x106f41b30"/>
        <function-ref name="stop" scoped="" ref="0x106f41cb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x106f37968" loc="79:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x106f37968"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x106f37cb8"/>
        <function-ref name="isInput" scoped="" ref="0x106f37e40"/>
        <function-ref name="setResistor" scoped="" ref="0x106f5f020"/>
        <function-ref name="toggle" scoped="" ref="0x106f5f1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x106f5f330"/>
        <function-ref name="getResistor" scoped="" ref="0x106f5f4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x106f5f640"/>
        <function-ref name="get" scoped="" ref="0x106f5f7c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x106f5f950"/>
        <function-ref name="getRaw" scoped="" ref="0x106f5fad8"/>
        <function-ref name="set" scoped="" ref="0x106f5fc60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x106f5fde8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x106f5e020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x106f5e2a8"/>
        <function-ref name="clr" scoped="" ref="0x106f5e430"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x106f60ad8" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x106f60ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x106f60e28"/>
        <function-ref name="isInput" scoped="" ref="0x106f38020"/>
        <function-ref name="setResistor" scoped="" ref="0x106f381a8"/>
        <function-ref name="toggle" scoped="" ref="0x106f38330"/>
        <function-ref name="isOutput" scoped="" ref="0x106f384b8"/>
        <function-ref name="getResistor" scoped="" ref="0x106f38640"/>
        <function-ref name="makeOutput" scoped="" ref="0x106f387c8"/>
        <function-ref name="get" scoped="" ref="0x106f38950"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x106f38ad8"/>
        <function-ref name="getRaw" scoped="" ref="0x106f38c60"/>
        <function-ref name="set" scoped="" ref="0x106f38de8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x106f37020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x106f371a8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x106f37430"/>
        <function-ref name="clr" scoped="" ref="0x106f375b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x106fe37f0" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x106fe37f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x106fe3b40"/>
        <function-ref name="isInput" scoped="" ref="0x106fe3cc8"/>
        <function-ref name="setResistor" scoped="" ref="0x106fe3e50"/>
        <function-ref name="toggle" scoped="" ref="0x106fe2020"/>
        <function-ref name="isOutput" scoped="" ref="0x106fe21a8"/>
        <function-ref name="getResistor" scoped="" ref="0x106fe2330"/>
        <function-ref name="makeOutput" scoped="" ref="0x106fe24b8"/>
        <function-ref name="get" scoped="" ref="0x106fe2640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x106fe27c8"/>
        <function-ref name="getRaw" scoped="" ref="0x106fe2950"/>
        <function-ref name="set" scoped="" ref="0x106fe2ad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x106fe2c60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x106fe2de8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x106fe1120"/>
        <function-ref name="clr" scoped="" ref="0x106fe12a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x106fcf568" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x106fcf568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x106fcf8b8"/>
        <function-ref name="isInput" scoped="" ref="0x106fcfa40"/>
        <function-ref name="setResistor" scoped="" ref="0x106fcfbc8"/>
        <function-ref name="toggle" scoped="" ref="0x106fcfd50"/>
        <function-ref name="isOutput" scoped="" ref="0x106fce020"/>
        <function-ref name="getResistor" scoped="" ref="0x106fce1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x106fce330"/>
        <function-ref name="get" scoped="" ref="0x106fce4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x106fce640"/>
        <function-ref name="getRaw" scoped="" ref="0x106fce7c8"/>
        <function-ref name="set" scoped="" ref="0x106fce950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x106fcead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x106fcec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x106fcd020"/>
        <function-ref name="clr" scoped="" ref="0x106fcd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x1070247d0" loc="145:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x1070247d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x107024b20"/>
        <function-ref name="isInput" scoped="" ref="0x107024ca8"/>
        <function-ref name="setResistor" scoped="" ref="0x107024e30"/>
        <function-ref name="toggle" scoped="" ref="0x107023020"/>
        <function-ref name="isOutput" scoped="" ref="0x1070231a8"/>
        <function-ref name="getResistor" scoped="" ref="0x107023330"/>
        <function-ref name="makeOutput" scoped="" ref="0x1070234b8"/>
        <function-ref name="get" scoped="" ref="0x107023640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1070237c8"/>
        <function-ref name="getRaw" scoped="" ref="0x107023950"/>
        <function-ref name="set" scoped="" ref="0x107023ad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x107023c60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x107023de8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x107022120"/>
        <function-ref name="clr" scoped="" ref="0x1070222a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x107035558" loc="165:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x107035558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1070358a8"/>
        <function-ref name="isInput" scoped="" ref="0x107035a30"/>
        <function-ref name="setResistor" scoped="" ref="0x107035bb8"/>
        <function-ref name="toggle" scoped="" ref="0x107035d40"/>
        <function-ref name="isOutput" scoped="" ref="0x107034020"/>
        <function-ref name="getResistor" scoped="" ref="0x1070341a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x107034330"/>
        <function-ref name="get" scoped="" ref="0x1070344b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x107034640"/>
        <function-ref name="getRaw" scoped="" ref="0x1070347c8"/>
        <function-ref name="set" scoped="" ref="0x107034950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x107034ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x107034c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x107069020"/>
        <function-ref name="clr" scoped="" ref="0x1070691a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x107022660" loc="146:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x107022660"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1070229b0"/>
        <function-ref name="isInput" scoped="" ref="0x107022b38"/>
        <function-ref name="setResistor" scoped="" ref="0x107022cc0"/>
        <function-ref name="toggle" scoped="" ref="0x107022e48"/>
        <function-ref name="isOutput" scoped="" ref="0x107021020"/>
        <function-ref name="getResistor" scoped="" ref="0x1070211a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x107021330"/>
        <function-ref name="get" scoped="" ref="0x1070214b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x107021640"/>
        <function-ref name="getRaw" scoped="" ref="0x1070217c8"/>
        <function-ref name="set" scoped="" ref="0x107021950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x107021ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x107021c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x107020020"/>
        <function-ref name="clr" scoped="" ref="0x1070201a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x106fcb568" loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x106fcb568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x106fcb8b8"/>
        <function-ref name="isInput" scoped="" ref="0x106fcba40"/>
        <function-ref name="setResistor" scoped="" ref="0x106fcbbc8"/>
        <function-ref name="toggle" scoped="" ref="0x106fcbd50"/>
        <function-ref name="isOutput" scoped="" ref="0x106fca020"/>
        <function-ref name="getResistor" scoped="" ref="0x106fca1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x106fca330"/>
        <function-ref name="get" scoped="" ref="0x106fca4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x106fca640"/>
        <function-ref name="getRaw" scoped="" ref="0x106fca7c8"/>
        <function-ref name="set" scoped="" ref="0x106fca950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x106fcaad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x106fcac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x106ffd020"/>
        <function-ref name="clr" scoped="" ref="0x106ffd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x106fea568" loc="84:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x106fea568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x106fea8b8"/>
        <function-ref name="isInput" scoped="" ref="0x106feaa40"/>
        <function-ref name="setResistor" scoped="" ref="0x106feabc8"/>
        <function-ref name="toggle" scoped="" ref="0x106fead50"/>
        <function-ref name="isOutput" scoped="" ref="0x106fe9020"/>
        <function-ref name="getResistor" scoped="" ref="0x106fe91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x106fe9330"/>
        <function-ref name="get" scoped="" ref="0x106fe94b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x106fe9640"/>
        <function-ref name="getRaw" scoped="" ref="0x106fe97c8"/>
        <function-ref name="set" scoped="" ref="0x106fe9950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x106fe9ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x106fe9c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x106fe8020"/>
        <function-ref name="clr" scoped="" ref="0x106fe81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x10700b568" loc="97:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x10700b568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10700b8b8"/>
        <function-ref name="isInput" scoped="" ref="0x10700ba40"/>
        <function-ref name="setResistor" scoped="" ref="0x10700bbc8"/>
        <function-ref name="toggle" scoped="" ref="0x10700bd50"/>
        <function-ref name="isOutput" scoped="" ref="0x10700a020"/>
        <function-ref name="getResistor" scoped="" ref="0x10700a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10700a330"/>
        <function-ref name="get" scoped="" ref="0x10700a4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10700a640"/>
        <function-ref name="getRaw" scoped="" ref="0x10700a7c8"/>
        <function-ref name="set" scoped="" ref="0x10700a950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10700aad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10700ac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x107009020"/>
        <function-ref name="clr" scoped="" ref="0x1070091a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x107030568" loc="108:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x107030568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1070308b8"/>
        <function-ref name="isInput" scoped="" ref="0x107030a40"/>
        <function-ref name="setResistor" scoped="" ref="0x107030bc8"/>
        <function-ref name="toggle" scoped="" ref="0x107030d50"/>
        <function-ref name="isOutput" scoped="" ref="0x10702f020"/>
        <function-ref name="getResistor" scoped="" ref="0x10702f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10702f330"/>
        <function-ref name="get" scoped="" ref="0x10702f4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10702f640"/>
        <function-ref name="getRaw" scoped="" ref="0x10702f7c8"/>
        <function-ref name="set" scoped="" ref="0x10702f950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10702fad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10702fc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10702e020"/>
        <function-ref name="clr" scoped="" ref="0x10702e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x10701c560" loc="149:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x10701c560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10701c8b0"/>
        <function-ref name="isInput" scoped="" ref="0x10701ca38"/>
        <function-ref name="setResistor" scoped="" ref="0x10701cbc0"/>
        <function-ref name="toggle" scoped="" ref="0x10701cd48"/>
        <function-ref name="isOutput" scoped="" ref="0x10701b020"/>
        <function-ref name="getResistor" scoped="" ref="0x10701b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10701b330"/>
        <function-ref name="get" scoped="" ref="0x10701b4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10701b640"/>
        <function-ref name="getRaw" scoped="" ref="0x10701b7c8"/>
        <function-ref name="set" scoped="" ref="0x10701b950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10701bad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10701bc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10701a020"/>
        <function-ref name="clr" scoped="" ref="0x10701a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x107042558" loc="159:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x107042558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1070428a8"/>
        <function-ref name="isInput" scoped="" ref="0x107042a30"/>
        <function-ref name="setResistor" scoped="" ref="0x107042bb8"/>
        <function-ref name="toggle" scoped="" ref="0x107042d40"/>
        <function-ref name="isOutput" scoped="" ref="0x107041020"/>
        <function-ref name="getResistor" scoped="" ref="0x1070411a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x107041330"/>
        <function-ref name="get" scoped="" ref="0x1070414b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x107041640"/>
        <function-ref name="getRaw" scoped="" ref="0x1070417c8"/>
        <function-ref name="set" scoped="" ref="0x107041950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x107041ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x107041c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x107040020"/>
        <function-ref name="clr" scoped="" ref="0x1070401a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x107063560" loc="171:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x107063560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1070638b0"/>
        <function-ref name="isInput" scoped="" ref="0x107063a38"/>
        <function-ref name="setResistor" scoped="" ref="0x107063bc0"/>
        <function-ref name="toggle" scoped="" ref="0x107063d48"/>
        <function-ref name="isOutput" scoped="" ref="0x107062020"/>
        <function-ref name="getResistor" scoped="" ref="0x1070621a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x107062330"/>
        <function-ref name="get" scoped="" ref="0x1070624b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x107062640"/>
        <function-ref name="getRaw" scoped="" ref="0x1070627c8"/>
        <function-ref name="set" scoped="" ref="0x107062950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x107062ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x107062c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x107061020"/>
        <function-ref name="clr" scoped="" ref="0x1070611a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x106fdd568" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x106fdd568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x106fdd8b8"/>
        <function-ref name="isInput" scoped="" ref="0x106fdda40"/>
        <function-ref name="setResistor" scoped="" ref="0x106fddbc8"/>
        <function-ref name="toggle" scoped="" ref="0x106fddd50"/>
        <function-ref name="isOutput" scoped="" ref="0x106fdc020"/>
        <function-ref name="getResistor" scoped="" ref="0x106fdc1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x106fdc330"/>
        <function-ref name="get" scoped="" ref="0x106fdc4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x106fdc640"/>
        <function-ref name="getRaw" scoped="" ref="0x106fdc7c8"/>
        <function-ref name="set" scoped="" ref="0x106fdc950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x106fdcad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x106fdcc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x106fdb020"/>
        <function-ref name="clr" scoped="" ref="0x106fdb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x10701a560" loc="150:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x10701a560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10701a8b0"/>
        <function-ref name="isInput" scoped="" ref="0x10701aa38"/>
        <function-ref name="setResistor" scoped="" ref="0x10701abc0"/>
        <function-ref name="toggle" scoped="" ref="0x10701ad48"/>
        <function-ref name="isOutput" scoped="" ref="0x107019020"/>
        <function-ref name="getResistor" scoped="" ref="0x1070191a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x107019330"/>
        <function-ref name="get" scoped="" ref="0x1070194b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x107019640"/>
        <function-ref name="getRaw" scoped="" ref="0x1070197c8"/>
        <function-ref name="set" scoped="" ref="0x107019950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x107019ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x107019c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10704e020"/>
        <function-ref name="clr" scoped="" ref="0x10704e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x106fd9568" loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x106fd9568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x106fd98b8"/>
        <function-ref name="isInput" scoped="" ref="0x106fd9a40"/>
        <function-ref name="setResistor" scoped="" ref="0x106fd9bc8"/>
        <function-ref name="toggle" scoped="" ref="0x106fd9d50"/>
        <function-ref name="isOutput" scoped="" ref="0x106fd8020"/>
        <function-ref name="getResistor" scoped="" ref="0x106fd81a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x106fd8330"/>
        <function-ref name="get" scoped="" ref="0x106fd84b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x106fd8640"/>
        <function-ref name="getRaw" scoped="" ref="0x106fd87c8"/>
        <function-ref name="set" scoped="" ref="0x106fd8950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x106fd8ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x106fd8c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x106fd7020"/>
        <function-ref name="clr" scoped="" ref="0x106fd71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x106ff8568" loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x106ff8568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x106ff88b8"/>
        <function-ref name="isInput" scoped="" ref="0x106ff8a40"/>
        <function-ref name="setResistor" scoped="" ref="0x106ff8bc8"/>
        <function-ref name="toggle" scoped="" ref="0x106ff8d50"/>
        <function-ref name="isOutput" scoped="" ref="0x106ff7020"/>
        <function-ref name="getResistor" scoped="" ref="0x106ff71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x106ff7330"/>
        <function-ref name="get" scoped="" ref="0x106ff74b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x106ff7640"/>
        <function-ref name="getRaw" scoped="" ref="0x106ff77c8"/>
        <function-ref name="set" scoped="" ref="0x106ff7950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x106ff7ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x106ff7c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x106ff6020"/>
        <function-ref name="clr" scoped="" ref="0x106ff61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x106fe4568" loc="87:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x106fe4568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x106fe48b8"/>
        <function-ref name="isInput" scoped="" ref="0x106fe4a40"/>
        <function-ref name="setResistor" scoped="" ref="0x106fe4bc8"/>
        <function-ref name="toggle" scoped="" ref="0x106fe4d50"/>
        <function-ref name="isOutput" scoped="" ref="0x107018020"/>
        <function-ref name="getResistor" scoped="" ref="0x1070181a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x107018330"/>
        <function-ref name="get" scoped="" ref="0x1070184b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x107018640"/>
        <function-ref name="getRaw" scoped="" ref="0x1070187c8"/>
        <function-ref name="set" scoped="" ref="0x107018950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x107018ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x107018c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x107017020"/>
        <function-ref name="clr" scoped="" ref="0x1070171a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x107005568" loc="100:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x107005568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1070058b8"/>
        <function-ref name="isInput" scoped="" ref="0x107005a40"/>
        <function-ref name="setResistor" scoped="" ref="0x107005bc8"/>
        <function-ref name="toggle" scoped="" ref="0x107005d50"/>
        <function-ref name="isOutput" scoped="" ref="0x107004020"/>
        <function-ref name="getResistor" scoped="" ref="0x1070041a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x107004330"/>
        <function-ref name="get" scoped="" ref="0x1070044b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x107004640"/>
        <function-ref name="getRaw" scoped="" ref="0x1070047c8"/>
        <function-ref name="set" scoped="" ref="0x107004950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x107004ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x107004c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x107003020"/>
        <function-ref name="clr" scoped="" ref="0x1070031a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x10702a568" loc="111:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x10702a568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10702a8b8"/>
        <function-ref name="isInput" scoped="" ref="0x10702aa40"/>
        <function-ref name="setResistor" scoped="" ref="0x10702abc8"/>
        <function-ref name="toggle" scoped="" ref="0x10702ad50"/>
        <function-ref name="isOutput" scoped="" ref="0x107029020"/>
        <function-ref name="getResistor" scoped="" ref="0x1070291a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x107029330"/>
        <function-ref name="get" scoped="" ref="0x1070294b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x107029640"/>
        <function-ref name="getRaw" scoped="" ref="0x1070297c8"/>
        <function-ref name="set" scoped="" ref="0x107029950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x107029ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x107029c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x107028020"/>
        <function-ref name="clr" scoped="" ref="0x1070281a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x106fb3b00" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x106fb3b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x106fb3e50"/>
        <function-ref name="isInput" scoped="" ref="0x106fb2020"/>
        <function-ref name="setResistor" scoped="" ref="0x106fb21a8"/>
        <function-ref name="toggle" scoped="" ref="0x106fb2330"/>
        <function-ref name="isOutput" scoped="" ref="0x106fb24b8"/>
        <function-ref name="getResistor" scoped="" ref="0x106fb2640"/>
        <function-ref name="makeOutput" scoped="" ref="0x106fb27c8"/>
        <function-ref name="get" scoped="" ref="0x106fb2950"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x106fb2ad8"/>
        <function-ref name="getRaw" scoped="" ref="0x106fb2c60"/>
        <function-ref name="set" scoped="" ref="0x106fb2de8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x106fb1020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x106fb11a8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x106fb1430"/>
        <function-ref name="clr" scoped="" ref="0x106fb15b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x106fd3568" loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x106fd3568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x106fd39b8"/>
        <function-ref name="isInput" scoped="" ref="0x106fd3b40"/>
        <function-ref name="setResistor" scoped="" ref="0x106fd3cc8"/>
        <function-ref name="toggle" scoped="" ref="0x106fd3e50"/>
        <function-ref name="isOutput" scoped="" ref="0x106fd2020"/>
        <function-ref name="getResistor" scoped="" ref="0x106fd21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x106fd2330"/>
        <function-ref name="get" scoped="" ref="0x106fd24b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x106fd2640"/>
        <function-ref name="getRaw" scoped="" ref="0x106fd27c8"/>
        <function-ref name="set" scoped="" ref="0x106fd2950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x106fd2ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x106fd2c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x106fd1020"/>
        <function-ref name="clr" scoped="" ref="0x106fd11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x106ff2568" loc="77:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x106ff2568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x106ff28b8"/>
        <function-ref name="isInput" scoped="" ref="0x106ff2a40"/>
        <function-ref name="setResistor" scoped="" ref="0x106ff2bc8"/>
        <function-ref name="toggle" scoped="" ref="0x106ff2d50"/>
        <function-ref name="isOutput" scoped="" ref="0x106ff1020"/>
        <function-ref name="getResistor" scoped="" ref="0x106ff11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x106ff1330"/>
        <function-ref name="get" scoped="" ref="0x106ff14b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x106ff1640"/>
        <function-ref name="getRaw" scoped="" ref="0x106ff17c8"/>
        <function-ref name="set" scoped="" ref="0x106ff1950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x106ff1ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x106ff1c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x106ff0020"/>
        <function-ref name="clr" scoped="" ref="0x106ff01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x107026970" loc="144:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x107026970"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x107026cc0"/>
        <function-ref name="isInput" scoped="" ref="0x107026e48"/>
        <function-ref name="setResistor" scoped="" ref="0x107025020"/>
        <function-ref name="toggle" scoped="" ref="0x1070251a8"/>
        <function-ref name="isOutput" scoped="" ref="0x107025330"/>
        <function-ref name="getResistor" scoped="" ref="0x1070254b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x107025640"/>
        <function-ref name="get" scoped="" ref="0x1070257c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x107025950"/>
        <function-ref name="getRaw" scoped="" ref="0x107025ad8"/>
        <function-ref name="set" scoped="" ref="0x107025c60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x107025de8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x107024020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1070242a8"/>
        <function-ref name="clr" scoped="" ref="0x107024430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x10703b558" loc="162:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x10703b558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10703b8a8"/>
        <function-ref name="isInput" scoped="" ref="0x10703ba30"/>
        <function-ref name="setResistor" scoped="" ref="0x10703bbb8"/>
        <function-ref name="toggle" scoped="" ref="0x10703bd40"/>
        <function-ref name="isOutput" scoped="" ref="0x10703a020"/>
        <function-ref name="getResistor" scoped="" ref="0x10703a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10703a330"/>
        <function-ref name="get" scoped="" ref="0x10703a4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10703a640"/>
        <function-ref name="getRaw" scoped="" ref="0x10703a7c8"/>
        <function-ref name="set" scoped="" ref="0x10703a950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10703aad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10703ac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x107039020"/>
        <function-ref name="clr" scoped="" ref="0x1070391a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x107065558" loc="169:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x107065558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1070658a8"/>
        <function-ref name="isInput" scoped="" ref="0x107065a30"/>
        <function-ref name="setResistor" scoped="" ref="0x107065bb8"/>
        <function-ref name="toggle" scoped="" ref="0x107065d40"/>
        <function-ref name="isOutput" scoped="" ref="0x107064020"/>
        <function-ref name="getResistor" scoped="" ref="0x1070641a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x107064330"/>
        <function-ref name="get" scoped="" ref="0x1070644b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x107064640"/>
        <function-ref name="getRaw" scoped="" ref="0x1070647c8"/>
        <function-ref name="set" scoped="" ref="0x107064950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x107064ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x107064c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x107063020"/>
        <function-ref name="clr" scoped="" ref="0x1070631a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x107048560" loc="155:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x107048560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1070488b0"/>
        <function-ref name="isInput" scoped="" ref="0x107048a38"/>
        <function-ref name="setResistor" scoped="" ref="0x107048bc0"/>
        <function-ref name="toggle" scoped="" ref="0x107048d48"/>
        <function-ref name="isOutput" scoped="" ref="0x107047020"/>
        <function-ref name="getResistor" scoped="" ref="0x1070471a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x107047330"/>
        <function-ref name="get" scoped="" ref="0x1070474b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x107047640"/>
        <function-ref name="getRaw" scoped="" ref="0x1070477c8"/>
        <function-ref name="set" scoped="" ref="0x107047950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x107047ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x107047c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x107046020"/>
        <function-ref name="clr" scoped="" ref="0x1070461a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x106fee568" loc="82:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x106fee568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x106feeab8"/>
        <function-ref name="isInput" scoped="" ref="0x106feec40"/>
        <function-ref name="setResistor" scoped="" ref="0x106feedc8"/>
        <function-ref name="toggle" scoped="" ref="0x106fed020"/>
        <function-ref name="isOutput" scoped="" ref="0x106fed1a8"/>
        <function-ref name="getResistor" scoped="" ref="0x106fed330"/>
        <function-ref name="makeOutput" scoped="" ref="0x106fed4b8"/>
        <function-ref name="get" scoped="" ref="0x106fed640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x106fed7c8"/>
        <function-ref name="getRaw" scoped="" ref="0x106fed950"/>
        <function-ref name="set" scoped="" ref="0x106fedad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x106fedc60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x106fedde8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x106fec120"/>
        <function-ref name="clr" scoped="" ref="0x106fec2a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x10700f568" loc="95:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x10700f568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10700f8b8"/>
        <function-ref name="isInput" scoped="" ref="0x10700fa40"/>
        <function-ref name="setResistor" scoped="" ref="0x10700fbc8"/>
        <function-ref name="toggle" scoped="" ref="0x10700fd50"/>
        <function-ref name="isOutput" scoped="" ref="0x10700e020"/>
        <function-ref name="getResistor" scoped="" ref="0x10700e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10700e330"/>
        <function-ref name="get" scoped="" ref="0x10700e4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10700e640"/>
        <function-ref name="getRaw" scoped="" ref="0x10700e7c8"/>
        <function-ref name="set" scoped="" ref="0x10700e950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10700ead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10700ec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10700d020"/>
        <function-ref name="clr" scoped="" ref="0x10700d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x106ffe568" loc="106:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x106ffe568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x106ffe8b8"/>
        <function-ref name="isInput" scoped="" ref="0x106ffea40"/>
        <function-ref name="setResistor" scoped="" ref="0x106ffebc8"/>
        <function-ref name="toggle" scoped="" ref="0x106ffed50"/>
        <function-ref name="isOutput" scoped="" ref="0x107033020"/>
        <function-ref name="getResistor" scoped="" ref="0x1070331a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x107033330"/>
        <function-ref name="get" scoped="" ref="0x1070334b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x107033640"/>
        <function-ref name="getRaw" scoped="" ref="0x1070337c8"/>
        <function-ref name="set" scoped="" ref="0x107033950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x107033ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x107033c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x107032020"/>
        <function-ref name="clr" scoped="" ref="0x1070321a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x107039558" loc="163:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x107039558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1070398a8"/>
        <function-ref name="isInput" scoped="" ref="0x107039a30"/>
        <function-ref name="setResistor" scoped="" ref="0x107039bb8"/>
        <function-ref name="toggle" scoped="" ref="0x107039d40"/>
        <function-ref name="isOutput" scoped="" ref="0x107038020"/>
        <function-ref name="getResistor" scoped="" ref="0x1070381a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x107038330"/>
        <function-ref name="get" scoped="" ref="0x1070384b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x107038640"/>
        <function-ref name="getRaw" scoped="" ref="0x1070387c8"/>
        <function-ref name="set" scoped="" ref="0x107038950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x107038ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x107038c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x107037020"/>
        <function-ref name="clr" scoped="" ref="0x1070371a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x10704e558" loc="152:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x10704e558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10704e8a8"/>
        <function-ref name="isInput" scoped="" ref="0x10704ea30"/>
        <function-ref name="setResistor" scoped="" ref="0x10704ebb8"/>
        <function-ref name="toggle" scoped="" ref="0x10704ed40"/>
        <function-ref name="isOutput" scoped="" ref="0x10704d020"/>
        <function-ref name="getResistor" scoped="" ref="0x10704d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10704d330"/>
        <function-ref name="get" scoped="" ref="0x10704d4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10704d640"/>
        <function-ref name="getRaw" scoped="" ref="0x10704d7c8"/>
        <function-ref name="set" scoped="" ref="0x10704d950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10704dad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10704dc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10704c020"/>
        <function-ref name="clr" scoped="" ref="0x10704c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x106fe1668" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x106fe1668"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x106fe19b8"/>
        <function-ref name="isInput" scoped="" ref="0x106fe1b40"/>
        <function-ref name="setResistor" scoped="" ref="0x106fe1cc8"/>
        <function-ref name="toggle" scoped="" ref="0x106fe1e50"/>
        <function-ref name="isOutput" scoped="" ref="0x106fe0020"/>
        <function-ref name="getResistor" scoped="" ref="0x106fe01a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x106fe0330"/>
        <function-ref name="get" scoped="" ref="0x106fe04b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x106fe0640"/>
        <function-ref name="getRaw" scoped="" ref="0x106fe07c8"/>
        <function-ref name="set" scoped="" ref="0x106fe0950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x106fe0ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x106fe0c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x106fdf020"/>
        <function-ref name="clr" scoped="" ref="0x106fdf1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x106fcd568" loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x106fcd568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x106fcd8b8"/>
        <function-ref name="isInput" scoped="" ref="0x106fcda40"/>
        <function-ref name="setResistor" scoped="" ref="0x106fcdbc8"/>
        <function-ref name="toggle" scoped="" ref="0x106fcdd50"/>
        <function-ref name="isOutput" scoped="" ref="0x106fcc020"/>
        <function-ref name="getResistor" scoped="" ref="0x106fcc1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x106fcc330"/>
        <function-ref name="get" scoped="" ref="0x106fcc4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x106fcc640"/>
        <function-ref name="getRaw" scoped="" ref="0x106fcc7c8"/>
        <function-ref name="set" scoped="" ref="0x106fcc950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x106fccad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x106fccc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x106fcb020"/>
        <function-ref name="clr" scoped="" ref="0x106fcb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x107003568" loc="104:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x107003568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1070038b8"/>
        <function-ref name="isInput" scoped="" ref="0x107003a40"/>
        <function-ref name="setResistor" scoped="" ref="0x107003bc8"/>
        <function-ref name="toggle" scoped="" ref="0x107003d50"/>
        <function-ref name="isOutput" scoped="" ref="0x107002020"/>
        <function-ref name="getResistor" scoped="" ref="0x1070021a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x107002330"/>
        <function-ref name="get" scoped="" ref="0x1070024b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x107002640"/>
        <function-ref name="getRaw" scoped="" ref="0x1070027c8"/>
        <function-ref name="set" scoped="" ref="0x107002950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x107002ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x107002c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x107001020"/>
        <function-ref name="clr" scoped="" ref="0x1070011a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x106ffd568" loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x106ffd568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x106ffd8b8"/>
        <function-ref name="isInput" scoped="" ref="0x106ffda40"/>
        <function-ref name="setResistor" scoped="" ref="0x106ffdbc8"/>
        <function-ref name="toggle" scoped="" ref="0x106ffdd50"/>
        <function-ref name="isOutput" scoped="" ref="0x106ffc020"/>
        <function-ref name="getResistor" scoped="" ref="0x106ffc1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x106ffc330"/>
        <function-ref name="get" scoped="" ref="0x106ffc4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x106ffc640"/>
        <function-ref name="getRaw" scoped="" ref="0x106ffc7c8"/>
        <function-ref name="set" scoped="" ref="0x106ffc950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x106ffcad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x106ffcc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x106ffb020"/>
        <function-ref name="clr" scoped="" ref="0x106ffb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x106fe8568" loc="85:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x106fe8568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x106fe88b8"/>
        <function-ref name="isInput" scoped="" ref="0x106fe8a40"/>
        <function-ref name="setResistor" scoped="" ref="0x106fe8bc8"/>
        <function-ref name="toggle" scoped="" ref="0x106fe8d50"/>
        <function-ref name="isOutput" scoped="" ref="0x106fe7020"/>
        <function-ref name="getResistor" scoped="" ref="0x106fe71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x106fe7330"/>
        <function-ref name="get" scoped="" ref="0x106fe74b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x106fe7640"/>
        <function-ref name="getRaw" scoped="" ref="0x106fe77c8"/>
        <function-ref name="set" scoped="" ref="0x106fe7950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x106fe7ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x106fe7c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x106fe6020"/>
        <function-ref name="clr" scoped="" ref="0x106fe61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x107009568" loc="98:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x107009568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1070098b8"/>
        <function-ref name="isInput" scoped="" ref="0x107009a40"/>
        <function-ref name="setResistor" scoped="" ref="0x107009bc8"/>
        <function-ref name="toggle" scoped="" ref="0x107009d50"/>
        <function-ref name="isOutput" scoped="" ref="0x107008020"/>
        <function-ref name="getResistor" scoped="" ref="0x1070081a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x107008330"/>
        <function-ref name="get" scoped="" ref="0x1070084b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x107008640"/>
        <function-ref name="getRaw" scoped="" ref="0x1070087c8"/>
        <function-ref name="set" scoped="" ref="0x107008950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x107008ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x107008c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x107007020"/>
        <function-ref name="clr" scoped="" ref="0x1070071a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x10702e568" loc="109:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x10702e568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10702e8b8"/>
        <function-ref name="isInput" scoped="" ref="0x10702ea40"/>
        <function-ref name="setResistor" scoped="" ref="0x10702ebc8"/>
        <function-ref name="toggle" scoped="" ref="0x10702ed50"/>
        <function-ref name="isOutput" scoped="" ref="0x10702d020"/>
        <function-ref name="getResistor" scoped="" ref="0x10702d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10702d330"/>
        <function-ref name="get" scoped="" ref="0x10702d4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10702d640"/>
        <function-ref name="getRaw" scoped="" ref="0x10702d7c8"/>
        <function-ref name="set" scoped="" ref="0x10702d950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10702dad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10702dc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10702c020"/>
        <function-ref name="clr" scoped="" ref="0x10702c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x10704a560" loc="154:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x10704a560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10704a8b0"/>
        <function-ref name="isInput" scoped="" ref="0x10704aa38"/>
        <function-ref name="setResistor" scoped="" ref="0x10704abc0"/>
        <function-ref name="toggle" scoped="" ref="0x10704ad48"/>
        <function-ref name="isOutput" scoped="" ref="0x107049020"/>
        <function-ref name="getResistor" scoped="" ref="0x1070491a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x107049330"/>
        <function-ref name="get" scoped="" ref="0x1070494b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x107049640"/>
        <function-ref name="getRaw" scoped="" ref="0x1070497c8"/>
        <function-ref name="set" scoped="" ref="0x107049950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x107049ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x107049c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x107048020"/>
        <function-ref name="clr" scoped="" ref="0x1070481a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x106fb9d48" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x106fb9d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x106fb60d8"/>
        <function-ref name="isInput" scoped="" ref="0x106fb6260"/>
        <function-ref name="setResistor" scoped="" ref="0x106fb63e8"/>
        <function-ref name="toggle" scoped="" ref="0x106fb6570"/>
        <function-ref name="isOutput" scoped="" ref="0x106fb66f8"/>
        <function-ref name="getResistor" scoped="" ref="0x106fb6880"/>
        <function-ref name="makeOutput" scoped="" ref="0x106fb6a08"/>
        <function-ref name="get" scoped="" ref="0x106fb6b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x106fb6d18"/>
        <function-ref name="getRaw" scoped="" ref="0x106fb5020"/>
        <function-ref name="set" scoped="" ref="0x106fb51a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x106fb5330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x106fb54b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x106fb5740"/>
        <function-ref name="clr" scoped="" ref="0x106fb58c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x106fd7568" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x106fd7568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x106fd78b8"/>
        <function-ref name="isInput" scoped="" ref="0x106fd7a40"/>
        <function-ref name="setResistor" scoped="" ref="0x106fd7bc8"/>
        <function-ref name="toggle" scoped="" ref="0x106fd7d50"/>
        <function-ref name="isOutput" scoped="" ref="0x106fd6020"/>
        <function-ref name="getResistor" scoped="" ref="0x106fd61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x106fd6330"/>
        <function-ref name="get" scoped="" ref="0x106fd64b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x106fd6640"/>
        <function-ref name="getRaw" scoped="" ref="0x106fd67c8"/>
        <function-ref name="set" scoped="" ref="0x106fd6950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x106fd6ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x106fd6c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x106fd5020"/>
        <function-ref name="clr" scoped="" ref="0x106fd51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x106ff6568" loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x106ff6568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x106ff68b8"/>
        <function-ref name="isInput" scoped="" ref="0x106ff6a40"/>
        <function-ref name="setResistor" scoped="" ref="0x106ff6bc8"/>
        <function-ref name="toggle" scoped="" ref="0x106ff6d50"/>
        <function-ref name="isOutput" scoped="" ref="0x106ff5020"/>
        <function-ref name="getResistor" scoped="" ref="0x106ff51a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x106ff5330"/>
        <function-ref name="get" scoped="" ref="0x106ff54b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x106ff5640"/>
        <function-ref name="getRaw" scoped="" ref="0x106ff57c8"/>
        <function-ref name="set" scoped="" ref="0x106ff5950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x106ff5ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x106ff5c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x106ff4020"/>
        <function-ref name="clr" scoped="" ref="0x106ff41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x107017568" loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x107017568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1070178b8"/>
        <function-ref name="isInput" scoped="" ref="0x107017a40"/>
        <function-ref name="setResistor" scoped="" ref="0x107017bc8"/>
        <function-ref name="toggle" scoped="" ref="0x107017d50"/>
        <function-ref name="isOutput" scoped="" ref="0x107016020"/>
        <function-ref name="getResistor" scoped="" ref="0x1070161a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x107016330"/>
        <function-ref name="get" scoped="" ref="0x1070164b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x107016640"/>
        <function-ref name="getRaw" scoped="" ref="0x1070167c8"/>
        <function-ref name="set" scoped="" ref="0x107016950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x107016ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x107016c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x107015020"/>
        <function-ref name="clr" scoped="" ref="0x1070151a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x107046560" loc="156:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x107046560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1070468b0"/>
        <function-ref name="isInput" scoped="" ref="0x107046a38"/>
        <function-ref name="setResistor" scoped="" ref="0x107046bc0"/>
        <function-ref name="toggle" scoped="" ref="0x107046d48"/>
        <function-ref name="isOutput" scoped="" ref="0x107045020"/>
        <function-ref name="getResistor" scoped="" ref="0x1070451a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x107045330"/>
        <function-ref name="get" scoped="" ref="0x1070454b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x107045640"/>
        <function-ref name="getRaw" scoped="" ref="0x1070457c8"/>
        <function-ref name="set" scoped="" ref="0x107045950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x107045ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x107045c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x107044020"/>
        <function-ref name="clr" scoped="" ref="0x1070441a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x107040558" loc="160:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x107040558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1070408a8"/>
        <function-ref name="isInput" scoped="" ref="0x107040a30"/>
        <function-ref name="setResistor" scoped="" ref="0x107040bb8"/>
        <function-ref name="toggle" scoped="" ref="0x107040d40"/>
        <function-ref name="isOutput" scoped="" ref="0x10703f020"/>
        <function-ref name="getResistor" scoped="" ref="0x10703f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10703f330"/>
        <function-ref name="get" scoped="" ref="0x10703f4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10703f640"/>
        <function-ref name="getRaw" scoped="" ref="0x10703f7c8"/>
        <function-ref name="set" scoped="" ref="0x10703f950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10703fad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10703fc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10703e020"/>
        <function-ref name="clr" scoped="" ref="0x10703e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x107069558" loc="166:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x107069558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1070698a8"/>
        <function-ref name="isInput" scoped="" ref="0x107069a30"/>
        <function-ref name="setResistor" scoped="" ref="0x107069bb8"/>
        <function-ref name="toggle" scoped="" ref="0x107069d40"/>
        <function-ref name="isOutput" scoped="" ref="0x107068020"/>
        <function-ref name="getResistor" scoped="" ref="0x1070681a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x107068330"/>
        <function-ref name="get" scoped="" ref="0x1070684b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x107068640"/>
        <function-ref name="getRaw" scoped="" ref="0x1070687c8"/>
        <function-ref name="set" scoped="" ref="0x107068950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x107068ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x107068c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x107067020"/>
        <function-ref name="clr" scoped="" ref="0x1070671a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x107013568" loc="93:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x107013568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1070138b8"/>
        <function-ref name="isInput" scoped="" ref="0x107013a40"/>
        <function-ref name="setResistor" scoped="" ref="0x107013bc8"/>
        <function-ref name="toggle" scoped="" ref="0x107013d50"/>
        <function-ref name="isOutput" scoped="" ref="0x107012020"/>
        <function-ref name="getResistor" scoped="" ref="0x1070121a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x107012330"/>
        <function-ref name="get" scoped="" ref="0x1070124b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x107012640"/>
        <function-ref name="getRaw" scoped="" ref="0x1070127c8"/>
        <function-ref name="set" scoped="" ref="0x107012950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x107012ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x107012c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x107011020"/>
        <function-ref name="clr" scoped="" ref="0x1070111a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x107044560" loc="157:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x107044560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1070448b0"/>
        <function-ref name="isInput" scoped="" ref="0x107044a38"/>
        <function-ref name="setResistor" scoped="" ref="0x107044bc0"/>
        <function-ref name="toggle" scoped="" ref="0x107044d48"/>
        <function-ref name="isOutput" scoped="" ref="0x107043020"/>
        <function-ref name="getResistor" scoped="" ref="0x1070431a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x107043330"/>
        <function-ref name="get" scoped="" ref="0x1070434b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x107043640"/>
        <function-ref name="getRaw" scoped="" ref="0x1070437c8"/>
        <function-ref name="set" scoped="" ref="0x107043950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x107043ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x107043c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x107042020"/>
        <function-ref name="clr" scoped="" ref="0x1070421a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x106fb1978" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x106fb1978"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x106fb1cc8"/>
        <function-ref name="isInput" scoped="" ref="0x106fb1e50"/>
        <function-ref name="setResistor" scoped="" ref="0x106fb0020"/>
        <function-ref name="toggle" scoped="" ref="0x106fb01a8"/>
        <function-ref name="isOutput" scoped="" ref="0x106fb0330"/>
        <function-ref name="getResistor" scoped="" ref="0x106fb04b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x106fb0640"/>
        <function-ref name="get" scoped="" ref="0x106fb07c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x106fb0950"/>
        <function-ref name="getRaw" scoped="" ref="0x106fb0ad8"/>
        <function-ref name="set" scoped="" ref="0x106fb0c60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x106fb0de8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x106fe3020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x106fe32a8"/>
        <function-ref name="clr" scoped="" ref="0x106fe3430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x106fd1568" loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x106fd1568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x106fd18b8"/>
        <function-ref name="isInput" scoped="" ref="0x106fd1a40"/>
        <function-ref name="setResistor" scoped="" ref="0x106fd1bc8"/>
        <function-ref name="toggle" scoped="" ref="0x106fd1d50"/>
        <function-ref name="isOutput" scoped="" ref="0x106fd0020"/>
        <function-ref name="getResistor" scoped="" ref="0x106fd01a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x106fd0330"/>
        <function-ref name="get" scoped="" ref="0x106fd04b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x106fd0640"/>
        <function-ref name="getRaw" scoped="" ref="0x106fd07c8"/>
        <function-ref name="set" scoped="" ref="0x106fd0950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x106fd0ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x106fd0c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x106fcf020"/>
        <function-ref name="clr" scoped="" ref="0x106fcf1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x106ff0568" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x106ff0568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x106ff08b8"/>
        <function-ref name="isInput" scoped="" ref="0x106ff0a40"/>
        <function-ref name="setResistor" scoped="" ref="0x106ff0bc8"/>
        <function-ref name="toggle" scoped="" ref="0x106ff0d50"/>
        <function-ref name="isOutput" scoped="" ref="0x106fef020"/>
        <function-ref name="getResistor" scoped="" ref="0x106fef1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x106fef330"/>
        <function-ref name="get" scoped="" ref="0x106fef4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x106fef640"/>
        <function-ref name="getRaw" scoped="" ref="0x106fef7c8"/>
        <function-ref name="set" scoped="" ref="0x106fef950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x106fefad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x106fefc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x106fee020"/>
        <function-ref name="clr" scoped="" ref="0x106fee1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x10704c560" loc="153:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x10704c560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10704c8b0"/>
        <function-ref name="isInput" scoped="" ref="0x10704ca38"/>
        <function-ref name="setResistor" scoped="" ref="0x10704cbc0"/>
        <function-ref name="toggle" scoped="" ref="0x10704cd48"/>
        <function-ref name="isOutput" scoped="" ref="0x10704b020"/>
        <function-ref name="getResistor" scoped="" ref="0x10704b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10704b330"/>
        <function-ref name="get" scoped="" ref="0x10704b4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10704b640"/>
        <function-ref name="getRaw" scoped="" ref="0x10704b7c8"/>
        <function-ref name="set" scoped="" ref="0x10704b950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10704bad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10704bc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10704a020"/>
        <function-ref name="clr" scoped="" ref="0x10704a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x107037558" loc="164:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x107037558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1070378a8"/>
        <function-ref name="isInput" scoped="" ref="0x107037a30"/>
        <function-ref name="setResistor" scoped="" ref="0x107037bb8"/>
        <function-ref name="toggle" scoped="" ref="0x107037d40"/>
        <function-ref name="isOutput" scoped="" ref="0x107036020"/>
        <function-ref name="getResistor" scoped="" ref="0x1070361a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x107036330"/>
        <function-ref name="get" scoped="" ref="0x1070364b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x107036640"/>
        <function-ref name="getRaw" scoped="" ref="0x1070367c8"/>
        <function-ref name="set" scoped="" ref="0x107036950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x107036ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x107036c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x107035020"/>
        <function-ref name="clr" scoped="" ref="0x1070351a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x106fec668" loc="83:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x106fec668"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x106fec9b8"/>
        <function-ref name="isInput" scoped="" ref="0x106fecb40"/>
        <function-ref name="setResistor" scoped="" ref="0x106feccc8"/>
        <function-ref name="toggle" scoped="" ref="0x106fece50"/>
        <function-ref name="isOutput" scoped="" ref="0x106feb020"/>
        <function-ref name="getResistor" scoped="" ref="0x106feb1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x106feb330"/>
        <function-ref name="get" scoped="" ref="0x106feb4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x106feb640"/>
        <function-ref name="getRaw" scoped="" ref="0x106feb7c8"/>
        <function-ref name="set" scoped="" ref="0x106feb950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x106febad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x106febc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x106fea020"/>
        <function-ref name="clr" scoped="" ref="0x106fea1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x10700d568" loc="96:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x10700d568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10700d8b8"/>
        <function-ref name="isInput" scoped="" ref="0x10700da40"/>
        <function-ref name="setResistor" scoped="" ref="0x10700dbc8"/>
        <function-ref name="toggle" scoped="" ref="0x10700dd50"/>
        <function-ref name="isOutput" scoped="" ref="0x10700c020"/>
        <function-ref name="getResistor" scoped="" ref="0x10700c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10700c330"/>
        <function-ref name="get" scoped="" ref="0x10700c4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10700c640"/>
        <function-ref name="getRaw" scoped="" ref="0x10700c7c8"/>
        <function-ref name="set" scoped="" ref="0x10700c950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10700cad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10700cc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10700b020"/>
        <function-ref name="clr" scoped="" ref="0x10700b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x107032568" loc="107:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x107032568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1070328b8"/>
        <function-ref name="isInput" scoped="" ref="0x107032a40"/>
        <function-ref name="setResistor" scoped="" ref="0x107032bc8"/>
        <function-ref name="toggle" scoped="" ref="0x107032d50"/>
        <function-ref name="isOutput" scoped="" ref="0x107031020"/>
        <function-ref name="getResistor" scoped="" ref="0x1070311a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x107031330"/>
        <function-ref name="get" scoped="" ref="0x1070314b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x107031640"/>
        <function-ref name="getRaw" scoped="" ref="0x1070317c8"/>
        <function-ref name="set" scoped="" ref="0x107031950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x107031ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x107031c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x107030020"/>
        <function-ref name="clr" scoped="" ref="0x1070301a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x106fdf568" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x106fdf568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x106fdf8b8"/>
        <function-ref name="isInput" scoped="" ref="0x106fdfa40"/>
        <function-ref name="setResistor" scoped="" ref="0x106fdfbc8"/>
        <function-ref name="toggle" scoped="" ref="0x106fdfd50"/>
        <function-ref name="isOutput" scoped="" ref="0x106fde020"/>
        <function-ref name="getResistor" scoped="" ref="0x106fde1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x106fde330"/>
        <function-ref name="get" scoped="" ref="0x106fde4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x106fde640"/>
        <function-ref name="getRaw" scoped="" ref="0x106fde7c8"/>
        <function-ref name="set" scoped="" ref="0x106fde950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x106fdead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x106fdec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x106fdd020"/>
        <function-ref name="clr" scoped="" ref="0x106fdd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x107001568" loc="105:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x107001568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1070018b8"/>
        <function-ref name="isInput" scoped="" ref="0x107001a40"/>
        <function-ref name="setResistor" scoped="" ref="0x107001bc8"/>
        <function-ref name="toggle" scoped="" ref="0x107001d50"/>
        <function-ref name="isOutput" scoped="" ref="0x106fff020"/>
        <function-ref name="getResistor" scoped="" ref="0x106fff1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x106fff330"/>
        <function-ref name="get" scoped="" ref="0x106fff4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x106fff640"/>
        <function-ref name="getRaw" scoped="" ref="0x106fff7c8"/>
        <function-ref name="set" scoped="" ref="0x106fff950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x106fffad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x106fffc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x106ffe020"/>
        <function-ref name="clr" scoped="" ref="0x106ffe1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x106fdb568" loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x106fdb568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x106fdb8b8"/>
        <function-ref name="isInput" scoped="" ref="0x106fdba40"/>
        <function-ref name="setResistor" scoped="" ref="0x106fdbbc8"/>
        <function-ref name="toggle" scoped="" ref="0x106fdbd50"/>
        <function-ref name="isOutput" scoped="" ref="0x106fda020"/>
        <function-ref name="getResistor" scoped="" ref="0x106fda1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x106fda330"/>
        <function-ref name="get" scoped="" ref="0x106fda4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x106fda640"/>
        <function-ref name="getRaw" scoped="" ref="0x106fda7c8"/>
        <function-ref name="set" scoped="" ref="0x106fda950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x106fdaad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x106fdac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x106fd9020"/>
        <function-ref name="clr" scoped="" ref="0x106fd91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x106ffb568" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x106ffb568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x106ffb8b8"/>
        <function-ref name="isInput" scoped="" ref="0x106ffba40"/>
        <function-ref name="setResistor" scoped="" ref="0x106ffbbc8"/>
        <function-ref name="toggle" scoped="" ref="0x106ffbd50"/>
        <function-ref name="isOutput" scoped="" ref="0x106ff9020"/>
        <function-ref name="getResistor" scoped="" ref="0x106ff91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x106ff9330"/>
        <function-ref name="get" scoped="" ref="0x106ff94b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x106ff9640"/>
        <function-ref name="getRaw" scoped="" ref="0x106ff97c8"/>
        <function-ref name="set" scoped="" ref="0x106ff9950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x106ff9ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x106ff9c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x106ff8020"/>
        <function-ref name="clr" scoped="" ref="0x106ff81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x106fe6568" loc="86:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x106fe6568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x106fe68b8"/>
        <function-ref name="isInput" scoped="" ref="0x106fe6a40"/>
        <function-ref name="setResistor" scoped="" ref="0x106fe6bc8"/>
        <function-ref name="toggle" scoped="" ref="0x106fe6d50"/>
        <function-ref name="isOutput" scoped="" ref="0x106fe5020"/>
        <function-ref name="getResistor" scoped="" ref="0x106fe51a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x106fe5330"/>
        <function-ref name="get" scoped="" ref="0x106fe54b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x106fe5640"/>
        <function-ref name="getRaw" scoped="" ref="0x106fe57c8"/>
        <function-ref name="set" scoped="" ref="0x106fe5950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x106fe5ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x106fe5c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x106fe4020"/>
        <function-ref name="clr" scoped="" ref="0x106fe41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x107007568" loc="99:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x107007568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1070078b8"/>
        <function-ref name="isInput" scoped="" ref="0x107007a40"/>
        <function-ref name="setResistor" scoped="" ref="0x107007bc8"/>
        <function-ref name="toggle" scoped="" ref="0x107007d50"/>
        <function-ref name="isOutput" scoped="" ref="0x107006020"/>
        <function-ref name="getResistor" scoped="" ref="0x1070061a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x107006330"/>
        <function-ref name="get" scoped="" ref="0x1070064b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x107006640"/>
        <function-ref name="getRaw" scoped="" ref="0x1070067c8"/>
        <function-ref name="set" scoped="" ref="0x107006950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x107006ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x107006c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x107005020"/>
        <function-ref name="clr" scoped="" ref="0x1070051a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x10702c568" loc="110:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x10702c568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10702c8b8"/>
        <function-ref name="isInput" scoped="" ref="0x10702ca40"/>
        <function-ref name="setResistor" scoped="" ref="0x10702cbc8"/>
        <function-ref name="toggle" scoped="" ref="0x10702cd50"/>
        <function-ref name="isOutput" scoped="" ref="0x10702b020"/>
        <function-ref name="getResistor" scoped="" ref="0x10702b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10702b330"/>
        <function-ref name="get" scoped="" ref="0x10702b4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10702b640"/>
        <function-ref name="getRaw" scoped="" ref="0x10702b7c8"/>
        <function-ref name="set" scoped="" ref="0x10702b950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10702bad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10702bc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10702a020"/>
        <function-ref name="clr" scoped="" ref="0x10702a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x106fb5c88" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x106fb5c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x106fb4020"/>
        <function-ref name="isInput" scoped="" ref="0x106fb41a8"/>
        <function-ref name="setResistor" scoped="" ref="0x106fb4330"/>
        <function-ref name="toggle" scoped="" ref="0x106fb44b8"/>
        <function-ref name="isOutput" scoped="" ref="0x106fb4640"/>
        <function-ref name="getResistor" scoped="" ref="0x106fb47c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x106fb4950"/>
        <function-ref name="get" scoped="" ref="0x106fb4ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x106fb4c60"/>
        <function-ref name="getRaw" scoped="" ref="0x106fb4de8"/>
        <function-ref name="set" scoped="" ref="0x106fb3020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x106fb31a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x106fb3330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x106fb35b8"/>
        <function-ref name="clr" scoped="" ref="0x106fb3740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x106fd5568" loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x106fd5568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x106fd58b8"/>
        <function-ref name="isInput" scoped="" ref="0x106fd5a40"/>
        <function-ref name="setResistor" scoped="" ref="0x106fd5bc8"/>
        <function-ref name="toggle" scoped="" ref="0x106fd5d50"/>
        <function-ref name="isOutput" scoped="" ref="0x106fd4020"/>
        <function-ref name="getResistor" scoped="" ref="0x106fd41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x106fd4330"/>
        <function-ref name="get" scoped="" ref="0x106fd44b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x106fd4640"/>
        <function-ref name="getRaw" scoped="" ref="0x106fd47c8"/>
        <function-ref name="set" scoped="" ref="0x106fd4950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x106fd4ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x106fd4c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x106fd3020"/>
        <function-ref name="clr" scoped="" ref="0x106fd31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x106ff4568" loc="76:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x106ff4568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x106ff48b8"/>
        <function-ref name="isInput" scoped="" ref="0x106ff4a40"/>
        <function-ref name="setResistor" scoped="" ref="0x106ff4bc8"/>
        <function-ref name="toggle" scoped="" ref="0x106ff4d50"/>
        <function-ref name="isOutput" scoped="" ref="0x106ff3020"/>
        <function-ref name="getResistor" scoped="" ref="0x106ff31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x106ff3330"/>
        <function-ref name="get" scoped="" ref="0x106ff34b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x106ff3640"/>
        <function-ref name="getRaw" scoped="" ref="0x106ff37c8"/>
        <function-ref name="set" scoped="" ref="0x106ff3950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x106ff3ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x106ff3c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x106ff2020"/>
        <function-ref name="clr" scoped="" ref="0x106ff21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x107015568" loc="89:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x107015568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1070158b8"/>
        <function-ref name="isInput" scoped="" ref="0x107015a40"/>
        <function-ref name="setResistor" scoped="" ref="0x107015bc8"/>
        <function-ref name="toggle" scoped="" ref="0x107015d50"/>
        <function-ref name="isOutput" scoped="" ref="0x107014020"/>
        <function-ref name="getResistor" scoped="" ref="0x1070141a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x107014330"/>
        <function-ref name="get" scoped="" ref="0x1070144b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x107014640"/>
        <function-ref name="getRaw" scoped="" ref="0x1070147c8"/>
        <function-ref name="set" scoped="" ref="0x107014950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x107014ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x107014c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x107013020"/>
        <function-ref name="clr" scoped="" ref="0x1070131a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x10701e548" loc="148:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x10701e548"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10701e898"/>
        <function-ref name="isInput" scoped="" ref="0x10701ea20"/>
        <function-ref name="setResistor" scoped="" ref="0x10701eba8"/>
        <function-ref name="toggle" scoped="" ref="0x10701ed30"/>
        <function-ref name="isOutput" scoped="" ref="0x10701d020"/>
        <function-ref name="getResistor" scoped="" ref="0x10701d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10701d330"/>
        <function-ref name="get" scoped="" ref="0x10701d4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10701d640"/>
        <function-ref name="getRaw" scoped="" ref="0x10701d7c8"/>
        <function-ref name="set" scoped="" ref="0x10701d950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10701dad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10701dc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10701c020"/>
        <function-ref name="clr" scoped="" ref="0x10701c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x10703e558" loc="161:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x10703e558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10703e8a8"/>
        <function-ref name="isInput" scoped="" ref="0x10703ea30"/>
        <function-ref name="setResistor" scoped="" ref="0x10703ebb8"/>
        <function-ref name="toggle" scoped="" ref="0x10703ed40"/>
        <function-ref name="isOutput" scoped="" ref="0x10703c020"/>
        <function-ref name="getResistor" scoped="" ref="0x10703c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10703c330"/>
        <function-ref name="get" scoped="" ref="0x10703c4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10703c640"/>
        <function-ref name="getRaw" scoped="" ref="0x10703c7c8"/>
        <function-ref name="set" scoped="" ref="0x10703c950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10703cad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10703cc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10703b020"/>
        <function-ref name="clr" scoped="" ref="0x10703b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x107020560" loc="147:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x107020560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1070208b0"/>
        <function-ref name="isInput" scoped="" ref="0x107020a38"/>
        <function-ref name="setResistor" scoped="" ref="0x107020bc0"/>
        <function-ref name="toggle" scoped="" ref="0x107020d48"/>
        <function-ref name="isOutput" scoped="" ref="0x10701f020"/>
        <function-ref name="getResistor" scoped="" ref="0x10701f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10701f330"/>
        <function-ref name="get" scoped="" ref="0x10701f4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10701f640"/>
        <function-ref name="getRaw" scoped="" ref="0x10701f7c8"/>
        <function-ref name="set" scoped="" ref="0x10701f950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10701fad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10701fc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10701e020"/>
        <function-ref name="clr" scoped="" ref="0x10701e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x107011568" loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x107011568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1070118b8"/>
        <function-ref name="isInput" scoped="" ref="0x107011a40"/>
        <function-ref name="setResistor" scoped="" ref="0x107011bc8"/>
        <function-ref name="toggle" scoped="" ref="0x107011d50"/>
        <function-ref name="isOutput" scoped="" ref="0x107010020"/>
        <function-ref name="getResistor" scoped="" ref="0x1070101a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x107010330"/>
        <function-ref name="get" scoped="" ref="0x1070104b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x107010640"/>
        <function-ref name="getRaw" scoped="" ref="0x1070107c8"/>
        <function-ref name="set" scoped="" ref="0x107010950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x107010ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x107010c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10700f020"/>
        <function-ref name="clr" scoped="" ref="0x10700f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x107067558" loc="168:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x107067558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1070678a8"/>
        <function-ref name="isInput" scoped="" ref="0x107067a30"/>
        <function-ref name="setResistor" scoped="" ref="0x107067bb8"/>
        <function-ref name="toggle" scoped="" ref="0x107067d40"/>
        <function-ref name="isOutput" scoped="" ref="0x107066020"/>
        <function-ref name="getResistor" scoped="" ref="0x1070661a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x107066330"/>
        <function-ref name="get" scoped="" ref="0x1070664b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x107066640"/>
        <function-ref name="getRaw" scoped="" ref="0x1070667c8"/>
        <function-ref name="set" scoped="" ref="0x107066950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x107066ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x107066c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x107065020"/>
        <function-ref name="clr" scoped="" ref="0x1070651a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x107061568" loc="172:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x107061568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1070618b8"/>
        <function-ref name="isInput" scoped="" ref="0x107061a40"/>
        <function-ref name="setResistor" scoped="" ref="0x107061bc8"/>
        <function-ref name="toggle" scoped="" ref="0x107061d50"/>
        <function-ref name="isOutput" scoped="" ref="0x107060020"/>
        <function-ref name="getResistor" scoped="" ref="0x1070601a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x107060330"/>
        <function-ref name="get" scoped="" ref="0x1070604b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x107060640"/>
        <function-ref name="getRaw" scoped="" ref="0x1070607c8"/>
        <function-ref name="set" scoped="" ref="0x107060950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x107060ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x107060c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10705f020"/>
        <function-ref name="clr" scoped="" ref="0x10705f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x1070285b8" loc="143:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x1070285b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x107028d08"/>
        <function-ref name="isInput" scoped="" ref="0x107027020"/>
        <function-ref name="setResistor" scoped="" ref="0x1070271a8"/>
        <function-ref name="toggle" scoped="" ref="0x107027330"/>
        <function-ref name="isOutput" scoped="" ref="0x1070274b8"/>
        <function-ref name="getResistor" scoped="" ref="0x107027640"/>
        <function-ref name="makeOutput" scoped="" ref="0x1070277c8"/>
        <function-ref name="get" scoped="" ref="0x107027950"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x107027ad8"/>
        <function-ref name="getRaw" scoped="" ref="0x107027c60"/>
        <function-ref name="set" scoped="" ref="0x107027de8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x107026020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1070261a8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x107026430"/>
        <function-ref name="clr" scoped="" ref="0x1070265b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10705de18" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10705de18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10706d1a8"/>
        <function-ref name="isInput" scoped="" ref="0x10706d330"/>
        <function-ref name="setResistor" scoped="" ref="0x10706d4b8"/>
        <function-ref name="toggle" scoped="" ref="0x10706d640"/>
        <function-ref name="isOutput" scoped="" ref="0x10706d7c8"/>
        <function-ref name="getResistor" scoped="" ref="0x10706d950"/>
        <function-ref name="makeOutput" scoped="" ref="0x10706dad8"/>
        <function-ref name="get" scoped="" ref="0x10706dc60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10706dde8"/>
        <function-ref name="getRaw" scoped="" ref="0x10706c020"/>
        <function-ref name="set" scoped="" ref="0x10706c1a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10706c330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10706c4b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10706c740"/>
        <function-ref name="clr" scoped="" ref="0x10706c8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1070a0478" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1070a0478"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1070a07c8"/>
        <function-ref name="isInput" scoped="" ref="0x1070a0950"/>
        <function-ref name="setResistor" scoped="" ref="0x1070a0ad8"/>
        <function-ref name="toggle" scoped="" ref="0x1070a0c60"/>
        <function-ref name="isOutput" scoped="" ref="0x1070a0de8"/>
        <function-ref name="getResistor" scoped="" ref="0x10709f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x10709f1a8"/>
        <function-ref name="get" scoped="" ref="0x10709f330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10709f4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x10709f640"/>
        <function-ref name="set" scoped="" ref="0x10709f7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10709f950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10709fad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10709fd60"/>
        <function-ref name="clr" scoped="" ref="0x10709e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10709cca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10709cca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10709b020"/>
        <function-ref name="isInput" scoped="" ref="0x10709b1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x10709b330"/>
        <function-ref name="toggle" scoped="" ref="0x10709b4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x10709b640"/>
        <function-ref name="getResistor" scoped="" ref="0x10709b7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10709b950"/>
        <function-ref name="get" scoped="" ref="0x10709bad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10709bc60"/>
        <function-ref name="getRaw" scoped="" ref="0x10709bde8"/>
        <function-ref name="set" scoped="" ref="0x10709a020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10709a1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10709a330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10709a5b8"/>
        <function-ref name="clr" scoped="" ref="0x10709a740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1070973d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1070973d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x107097728"/>
        <function-ref name="isInput" scoped="" ref="0x1070978b0"/>
        <function-ref name="setResistor" scoped="" ref="0x107097a38"/>
        <function-ref name="toggle" scoped="" ref="0x107097bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x107097d48"/>
        <function-ref name="getResistor" scoped="" ref="0x107095020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1070951a8"/>
        <function-ref name="get" scoped="" ref="0x107095330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1070954b8"/>
        <function-ref name="getRaw" scoped="" ref="0x107095640"/>
        <function-ref name="set" scoped="" ref="0x1070957c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x107095950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x107095ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x107095d60"/>
        <function-ref name="clr" scoped="" ref="0x107094020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x107092ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x107092ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x107091020"/>
        <function-ref name="isInput" scoped="" ref="0x1070911a8"/>
        <function-ref name="setResistor" scoped="" ref="0x107091330"/>
        <function-ref name="toggle" scoped="" ref="0x1070914b8"/>
        <function-ref name="isOutput" scoped="" ref="0x107091640"/>
        <function-ref name="getResistor" scoped="" ref="0x1070917c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x107091950"/>
        <function-ref name="get" scoped="" ref="0x107091ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x107091c60"/>
        <function-ref name="getRaw" scoped="" ref="0x107091de8"/>
        <function-ref name="set" scoped="" ref="0x107090020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1070901a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x107090330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1070905b8"/>
        <function-ref name="clr" scoped="" ref="0x107090740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10708d3d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10708d3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10708d728"/>
        <function-ref name="isInput" scoped="" ref="0x10708d8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x10708da38"/>
        <function-ref name="toggle" scoped="" ref="0x10708dbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x10708dd48"/>
        <function-ref name="getResistor" scoped="" ref="0x10708c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x10708c1a8"/>
        <function-ref name="get" scoped="" ref="0x10708c330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10708c4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x10708c640"/>
        <function-ref name="set" scoped="" ref="0x10708c7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10708c950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10708cad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10708cd60"/>
        <function-ref name="clr" scoped="" ref="0x10708b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x107089ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x107089ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x107088020"/>
        <function-ref name="isInput" scoped="" ref="0x1070881a8"/>
        <function-ref name="setResistor" scoped="" ref="0x107088330"/>
        <function-ref name="toggle" scoped="" ref="0x1070884b8"/>
        <function-ref name="isOutput" scoped="" ref="0x107088640"/>
        <function-ref name="getResistor" scoped="" ref="0x1070887c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x107088950"/>
        <function-ref name="get" scoped="" ref="0x107088ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x107088c60"/>
        <function-ref name="getRaw" scoped="" ref="0x107088de8"/>
        <function-ref name="set" scoped="" ref="0x107087020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1070871a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x107087330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1070875b8"/>
        <function-ref name="clr" scoped="" ref="0x107087740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1070bc3d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1070bc3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1070bc728"/>
        <function-ref name="isInput" scoped="" ref="0x1070bc8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x1070bca38"/>
        <function-ref name="toggle" scoped="" ref="0x1070bcbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x1070bcd48"/>
        <function-ref name="getResistor" scoped="" ref="0x1070bb020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1070bb1a8"/>
        <function-ref name="get" scoped="" ref="0x1070bb330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1070bb4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x1070bb640"/>
        <function-ref name="set" scoped="" ref="0x1070bb7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1070bb950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1070bbad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1070bbd60"/>
        <function-ref name="clr" scoped="" ref="0x1070ba020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1070b8ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1070b8ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1070b7020"/>
        <function-ref name="isInput" scoped="" ref="0x1070b71a8"/>
        <function-ref name="setResistor" scoped="" ref="0x1070b7330"/>
        <function-ref name="toggle" scoped="" ref="0x1070b74b8"/>
        <function-ref name="isOutput" scoped="" ref="0x1070b7640"/>
        <function-ref name="getResistor" scoped="" ref="0x1070b77c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1070b7950"/>
        <function-ref name="get" scoped="" ref="0x1070b7ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1070b7c60"/>
        <function-ref name="getRaw" scoped="" ref="0x1070b7de8"/>
        <function-ref name="set" scoped="" ref="0x1070b6020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1070b61a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1070b6330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1070b65b8"/>
        <function-ref name="clr" scoped="" ref="0x1070b6740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1070b33d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1070b33d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1070b3728"/>
        <function-ref name="isInput" scoped="" ref="0x1070b38b0"/>
        <function-ref name="setResistor" scoped="" ref="0x1070b3a38"/>
        <function-ref name="toggle" scoped="" ref="0x1070b3bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x1070b3d48"/>
        <function-ref name="getResistor" scoped="" ref="0x1070b2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1070b21a8"/>
        <function-ref name="get" scoped="" ref="0x1070b2330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1070b24b8"/>
        <function-ref name="getRaw" scoped="" ref="0x1070b2640"/>
        <function-ref name="set" scoped="" ref="0x1070b27c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1070b2950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1070b2ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1070b2d60"/>
        <function-ref name="clr" scoped="" ref="0x1070b1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1070afca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1070afca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1070ae020"/>
        <function-ref name="isInput" scoped="" ref="0x1070ae1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x1070ae330"/>
        <function-ref name="toggle" scoped="" ref="0x1070ae4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x1070ae640"/>
        <function-ref name="getResistor" scoped="" ref="0x1070ae7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1070ae950"/>
        <function-ref name="get" scoped="" ref="0x1070aead8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1070aec60"/>
        <function-ref name="getRaw" scoped="" ref="0x1070aede8"/>
        <function-ref name="set" scoped="" ref="0x1070ad020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1070ad1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1070ad330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1070ad5b8"/>
        <function-ref name="clr" scoped="" ref="0x1070ad740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1070aa3d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1070aa3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1070aa728"/>
        <function-ref name="isInput" scoped="" ref="0x1070aa8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x1070aaa38"/>
        <function-ref name="toggle" scoped="" ref="0x1070aabc0"/>
        <function-ref name="isOutput" scoped="" ref="0x1070aad48"/>
        <function-ref name="getResistor" scoped="" ref="0x1070a8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1070a81a8"/>
        <function-ref name="get" scoped="" ref="0x1070a8330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1070a84b8"/>
        <function-ref name="getRaw" scoped="" ref="0x1070a8640"/>
        <function-ref name="set" scoped="" ref="0x1070a87c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1070a8950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1070a8ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1070a8d60"/>
        <function-ref name="clr" scoped="" ref="0x1070a7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1070a5d08" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1070a5d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1070a40a0"/>
        <function-ref name="isInput" scoped="" ref="0x1070a4228"/>
        <function-ref name="setResistor" scoped="" ref="0x1070a43b0"/>
        <function-ref name="toggle" scoped="" ref="0x1070a4538"/>
        <function-ref name="isOutput" scoped="" ref="0x1070a46c0"/>
        <function-ref name="getResistor" scoped="" ref="0x1070a4848"/>
        <function-ref name="makeOutput" scoped="" ref="0x1070a49d0"/>
        <function-ref name="get" scoped="" ref="0x1070a4b58"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1070a4ce0"/>
        <function-ref name="getRaw" scoped="" ref="0x1070a4e68"/>
        <function-ref name="set" scoped="" ref="0x1070a3020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1070a31a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1070a3330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1070a35b8"/>
        <function-ref name="clr" scoped="" ref="0x1070a3740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1070d83d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1070d83d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1070d8728"/>
        <function-ref name="isInput" scoped="" ref="0x1070d88b0"/>
        <function-ref name="setResistor" scoped="" ref="0x1070d8a38"/>
        <function-ref name="toggle" scoped="" ref="0x1070d8bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x1070d8d48"/>
        <function-ref name="getResistor" scoped="" ref="0x1070d7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1070d71a8"/>
        <function-ref name="get" scoped="" ref="0x1070d7330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1070d74b8"/>
        <function-ref name="getRaw" scoped="" ref="0x1070d7640"/>
        <function-ref name="set" scoped="" ref="0x1070d77c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1070d7950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1070d7ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1070d7d60"/>
        <function-ref name="clr" scoped="" ref="0x1070d6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1070d4ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1070d4ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1070d3020"/>
        <function-ref name="isInput" scoped="" ref="0x1070d31a8"/>
        <function-ref name="setResistor" scoped="" ref="0x1070d3330"/>
        <function-ref name="toggle" scoped="" ref="0x1070d34b8"/>
        <function-ref name="isOutput" scoped="" ref="0x1070d3640"/>
        <function-ref name="getResistor" scoped="" ref="0x1070d37c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1070d3950"/>
        <function-ref name="get" scoped="" ref="0x1070d3ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1070d3c60"/>
        <function-ref name="getRaw" scoped="" ref="0x1070d3de8"/>
        <function-ref name="set" scoped="" ref="0x1070d2020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1070d21a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1070d2330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1070d25b8"/>
        <function-ref name="clr" scoped="" ref="0x1070d2740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1070cf3d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1070cf3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1070cf728"/>
        <function-ref name="isInput" scoped="" ref="0x1070cf8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x1070cfa38"/>
        <function-ref name="toggle" scoped="" ref="0x1070cfbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x1070cfd48"/>
        <function-ref name="getResistor" scoped="" ref="0x1070ce020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1070ce1a8"/>
        <function-ref name="get" scoped="" ref="0x1070ce330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1070ce4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x1070ce640"/>
        <function-ref name="set" scoped="" ref="0x1070ce7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1070ce950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1070cead8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1070ced60"/>
        <function-ref name="clr" scoped="" ref="0x1070cd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1070cbca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1070cbca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1070ca020"/>
        <function-ref name="isInput" scoped="" ref="0x1070ca1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x1070ca330"/>
        <function-ref name="toggle" scoped="" ref="0x1070ca4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x1070ca640"/>
        <function-ref name="getResistor" scoped="" ref="0x1070ca7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1070ca950"/>
        <function-ref name="get" scoped="" ref="0x1070caad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1070cac60"/>
        <function-ref name="getRaw" scoped="" ref="0x1070cade8"/>
        <function-ref name="set" scoped="" ref="0x1070c9020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1070c91a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1070c9330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1070c95b8"/>
        <function-ref name="clr" scoped="" ref="0x1070c9740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1070c63d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1070c63d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1070c6728"/>
        <function-ref name="isInput" scoped="" ref="0x1070c68b0"/>
        <function-ref name="setResistor" scoped="" ref="0x1070c6a38"/>
        <function-ref name="toggle" scoped="" ref="0x1070c6bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x1070c6d48"/>
        <function-ref name="getResistor" scoped="" ref="0x1070c5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1070c51a8"/>
        <function-ref name="get" scoped="" ref="0x1070c5330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1070c54b8"/>
        <function-ref name="getRaw" scoped="" ref="0x1070c5640"/>
        <function-ref name="set" scoped="" ref="0x1070c57c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1070c5950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1070c5ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1070c5d60"/>
        <function-ref name="clr" scoped="" ref="0x1070c4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1070c2ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1070c2ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1070c1020"/>
        <function-ref name="isInput" scoped="" ref="0x1070c11a8"/>
        <function-ref name="setResistor" scoped="" ref="0x1070c1330"/>
        <function-ref name="toggle" scoped="" ref="0x1070c14b8"/>
        <function-ref name="isOutput" scoped="" ref="0x1070c1640"/>
        <function-ref name="getResistor" scoped="" ref="0x1070c17c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1070c1950"/>
        <function-ref name="get" scoped="" ref="0x1070c1ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1070c1c60"/>
        <function-ref name="getRaw" scoped="" ref="0x1070c1de8"/>
        <function-ref name="set" scoped="" ref="0x1070c0020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1070c01a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1070c0330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1070c05b8"/>
        <function-ref name="clr" scoped="" ref="0x1070c0740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1070f43d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1070f43d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1070f4728"/>
        <function-ref name="isInput" scoped="" ref="0x1070f48b0"/>
        <function-ref name="setResistor" scoped="" ref="0x1070f4a38"/>
        <function-ref name="toggle" scoped="" ref="0x1070f4bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x1070f4d48"/>
        <function-ref name="getResistor" scoped="" ref="0x1070f3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1070f31a8"/>
        <function-ref name="get" scoped="" ref="0x1070f3330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1070f34b8"/>
        <function-ref name="getRaw" scoped="" ref="0x1070f3640"/>
        <function-ref name="set" scoped="" ref="0x1070f37c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1070f3950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1070f3ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1070f3d60"/>
        <function-ref name="clr" scoped="" ref="0x1070f2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1070f0ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1070f0ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1070ef020"/>
        <function-ref name="isInput" scoped="" ref="0x1070ef1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x1070ef330"/>
        <function-ref name="toggle" scoped="" ref="0x1070ef4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x1070ef640"/>
        <function-ref name="getResistor" scoped="" ref="0x1070ef7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1070ef950"/>
        <function-ref name="get" scoped="" ref="0x1070efad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1070efc60"/>
        <function-ref name="getRaw" scoped="" ref="0x1070efde8"/>
        <function-ref name="set" scoped="" ref="0x1070ee020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1070ee1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1070ee330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1070ee5b8"/>
        <function-ref name="clr" scoped="" ref="0x1070ee740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1070eb3d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1070eb3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1070eb728"/>
        <function-ref name="isInput" scoped="" ref="0x1070eb8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x1070eba38"/>
        <function-ref name="toggle" scoped="" ref="0x1070ebbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x1070ebd48"/>
        <function-ref name="getResistor" scoped="" ref="0x1070ea020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1070ea1a8"/>
        <function-ref name="get" scoped="" ref="0x1070ea330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1070ea4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x1070ea640"/>
        <function-ref name="set" scoped="" ref="0x1070ea7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1070ea950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1070eaad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1070ead60"/>
        <function-ref name="clr" scoped="" ref="0x1070e9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1070e7ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1070e7ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1070e6020"/>
        <function-ref name="isInput" scoped="" ref="0x1070e61a8"/>
        <function-ref name="setResistor" scoped="" ref="0x1070e6330"/>
        <function-ref name="toggle" scoped="" ref="0x1070e64b8"/>
        <function-ref name="isOutput" scoped="" ref="0x1070e6640"/>
        <function-ref name="getResistor" scoped="" ref="0x1070e67c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1070e6950"/>
        <function-ref name="get" scoped="" ref="0x1070e6ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1070e6c60"/>
        <function-ref name="getRaw" scoped="" ref="0x1070e6de8"/>
        <function-ref name="set" scoped="" ref="0x1070e5020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1070e51a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1070e5330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1070e55b8"/>
        <function-ref name="clr" scoped="" ref="0x1070e5740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1070e23d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1070e23d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1070e2728"/>
        <function-ref name="isInput" scoped="" ref="0x1070e28b0"/>
        <function-ref name="setResistor" scoped="" ref="0x1070e2a38"/>
        <function-ref name="toggle" scoped="" ref="0x1070e2bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x1070e2d48"/>
        <function-ref name="getResistor" scoped="" ref="0x1070e1020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1070e11a8"/>
        <function-ref name="get" scoped="" ref="0x1070e1330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1070e14b8"/>
        <function-ref name="getRaw" scoped="" ref="0x1070e1640"/>
        <function-ref name="set" scoped="" ref="0x1070e17c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1070e1950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1070e1ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1070e1d60"/>
        <function-ref name="clr" scoped="" ref="0x1070e0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1070dedd8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1070dedd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1070dd170"/>
        <function-ref name="isInput" scoped="" ref="0x1070dd2f8"/>
        <function-ref name="setResistor" scoped="" ref="0x1070dd480"/>
        <function-ref name="toggle" scoped="" ref="0x1070dd608"/>
        <function-ref name="isOutput" scoped="" ref="0x1070dd790"/>
        <function-ref name="getResistor" scoped="" ref="0x1070dd918"/>
        <function-ref name="makeOutput" scoped="" ref="0x1070ddaa0"/>
        <function-ref name="get" scoped="" ref="0x1070ddc28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1070dddb0"/>
        <function-ref name="getRaw" scoped="" ref="0x1070dc020"/>
        <function-ref name="set" scoped="" ref="0x1070dc1a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1070dc330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1070dc4b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1070dc740"/>
        <function-ref name="clr" scoped="" ref="0x1070dc8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1070d9478" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1070d9478"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1070d97c8"/>
        <function-ref name="isInput" scoped="" ref="0x1070d9950"/>
        <function-ref name="setResistor" scoped="" ref="0x1070d9ad8"/>
        <function-ref name="toggle" scoped="" ref="0x1070d9c60"/>
        <function-ref name="isOutput" scoped="" ref="0x1070d9de8"/>
        <function-ref name="getResistor" scoped="" ref="0x107110020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1071101a8"/>
        <function-ref name="get" scoped="" ref="0x107110330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1071104b8"/>
        <function-ref name="getRaw" scoped="" ref="0x107110640"/>
        <function-ref name="set" scoped="" ref="0x1071107c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x107110950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x107110ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x107110d60"/>
        <function-ref name="clr" scoped="" ref="0x10710f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10710dca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10710dca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10710b020"/>
        <function-ref name="isInput" scoped="" ref="0x10710b1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x10710b330"/>
        <function-ref name="toggle" scoped="" ref="0x10710b4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x10710b640"/>
        <function-ref name="getResistor" scoped="" ref="0x10710b7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10710b950"/>
        <function-ref name="get" scoped="" ref="0x10710bad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10710bc60"/>
        <function-ref name="getRaw" scoped="" ref="0x10710bde8"/>
        <function-ref name="set" scoped="" ref="0x10710a020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10710a1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10710a330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10710a5b8"/>
        <function-ref name="clr" scoped="" ref="0x10710a740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1071073d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1071073d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x107107728"/>
        <function-ref name="isInput" scoped="" ref="0x1071078b0"/>
        <function-ref name="setResistor" scoped="" ref="0x107107a38"/>
        <function-ref name="toggle" scoped="" ref="0x107107bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x107107d48"/>
        <function-ref name="getResistor" scoped="" ref="0x107106020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1071061a8"/>
        <function-ref name="get" scoped="" ref="0x107106330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1071064b8"/>
        <function-ref name="getRaw" scoped="" ref="0x107106640"/>
        <function-ref name="set" scoped="" ref="0x1071067c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x107106950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x107106ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x107106d60"/>
        <function-ref name="clr" scoped="" ref="0x107105020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x107103ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x107103ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x107102020"/>
        <function-ref name="isInput" scoped="" ref="0x1071021a8"/>
        <function-ref name="setResistor" scoped="" ref="0x107102330"/>
        <function-ref name="toggle" scoped="" ref="0x1071024b8"/>
        <function-ref name="isOutput" scoped="" ref="0x107102640"/>
        <function-ref name="getResistor" scoped="" ref="0x1071027c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x107102950"/>
        <function-ref name="get" scoped="" ref="0x107102ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x107102c60"/>
        <function-ref name="getRaw" scoped="" ref="0x107102de8"/>
        <function-ref name="set" scoped="" ref="0x107101020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1071011a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x107101330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1071015b8"/>
        <function-ref name="clr" scoped="" ref="0x107101740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1070fe3d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1070fe3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1070fe728"/>
        <function-ref name="isInput" scoped="" ref="0x1070fe8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x1070fea38"/>
        <function-ref name="toggle" scoped="" ref="0x1070febc0"/>
        <function-ref name="isOutput" scoped="" ref="0x1070fed48"/>
        <function-ref name="getResistor" scoped="" ref="0x1070fd020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1070fd1a8"/>
        <function-ref name="get" scoped="" ref="0x1070fd330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1070fd4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x1070fd640"/>
        <function-ref name="set" scoped="" ref="0x1070fd7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1070fd950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1070fdad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1070fdd60"/>
        <function-ref name="clr" scoped="" ref="0x1070fc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1070faca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1070faca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1070f9020"/>
        <function-ref name="isInput" scoped="" ref="0x1070f91a8"/>
        <function-ref name="setResistor" scoped="" ref="0x1070f9330"/>
        <function-ref name="toggle" scoped="" ref="0x1070f94b8"/>
        <function-ref name="isOutput" scoped="" ref="0x1070f9640"/>
        <function-ref name="getResistor" scoped="" ref="0x1070f97c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1070f9950"/>
        <function-ref name="get" scoped="" ref="0x1070f9ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1070f9c60"/>
        <function-ref name="getRaw" scoped="" ref="0x1070f9de8"/>
        <function-ref name="set" scoped="" ref="0x1070f8020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1070f81a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1070f8330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1070f85b8"/>
        <function-ref name="clr" scoped="" ref="0x1070f8740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1070f53d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1070f53d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1070f5728"/>
        <function-ref name="isInput" scoped="" ref="0x1070f58b0"/>
        <function-ref name="setResistor" scoped="" ref="0x1070f5a38"/>
        <function-ref name="toggle" scoped="" ref="0x1070f5bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x1070f5d48"/>
        <function-ref name="getResistor" scoped="" ref="0x10712d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x10712d1a8"/>
        <function-ref name="get" scoped="" ref="0x10712d330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10712d4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x10712d640"/>
        <function-ref name="set" scoped="" ref="0x10712d7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10712d950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10712dad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10712dd60"/>
        <function-ref name="clr" scoped="" ref="0x10712c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10712aca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10712aca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x107129020"/>
        <function-ref name="isInput" scoped="" ref="0x1071291a8"/>
        <function-ref name="setResistor" scoped="" ref="0x107129330"/>
        <function-ref name="toggle" scoped="" ref="0x1071294b8"/>
        <function-ref name="isOutput" scoped="" ref="0x107129640"/>
        <function-ref name="getResistor" scoped="" ref="0x1071297c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x107129950"/>
        <function-ref name="get" scoped="" ref="0x107129ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x107129c60"/>
        <function-ref name="getRaw" scoped="" ref="0x107129de8"/>
        <function-ref name="set" scoped="" ref="0x107128020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1071281a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x107128330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1071285b8"/>
        <function-ref name="clr" scoped="" ref="0x107128740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1071253d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1071253d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x107125728"/>
        <function-ref name="isInput" scoped="" ref="0x1071258b0"/>
        <function-ref name="setResistor" scoped="" ref="0x107125a38"/>
        <function-ref name="toggle" scoped="" ref="0x107125bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x107125d48"/>
        <function-ref name="getResistor" scoped="" ref="0x107124020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1071241a8"/>
        <function-ref name="get" scoped="" ref="0x107124330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1071244b8"/>
        <function-ref name="getRaw" scoped="" ref="0x107124640"/>
        <function-ref name="set" scoped="" ref="0x1071247c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x107124950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x107124ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x107124d60"/>
        <function-ref name="clr" scoped="" ref="0x107123020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x107121ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x107121ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10711f020"/>
        <function-ref name="isInput" scoped="" ref="0x10711f1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x10711f330"/>
        <function-ref name="toggle" scoped="" ref="0x10711f4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x10711f640"/>
        <function-ref name="getResistor" scoped="" ref="0x10711f7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10711f950"/>
        <function-ref name="get" scoped="" ref="0x10711fad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10711fc60"/>
        <function-ref name="getRaw" scoped="" ref="0x10711fde8"/>
        <function-ref name="set" scoped="" ref="0x10711e020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10711e1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10711e330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10711e5b8"/>
        <function-ref name="clr" scoped="" ref="0x10711e740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10711b3d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10711b3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10711b728"/>
        <function-ref name="isInput" scoped="" ref="0x10711b8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x10711ba38"/>
        <function-ref name="toggle" scoped="" ref="0x10711bbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x10711bd48"/>
        <function-ref name="getResistor" scoped="" ref="0x10711a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x10711a1a8"/>
        <function-ref name="get" scoped="" ref="0x10711a330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10711a4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x10711a640"/>
        <function-ref name="set" scoped="" ref="0x10711a7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10711a950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10711aad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10711ad60"/>
        <function-ref name="clr" scoped="" ref="0x107119020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x107117ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x107117ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x107116020"/>
        <function-ref name="isInput" scoped="" ref="0x1071161a8"/>
        <function-ref name="setResistor" scoped="" ref="0x107116330"/>
        <function-ref name="toggle" scoped="" ref="0x1071164b8"/>
        <function-ref name="isOutput" scoped="" ref="0x107116640"/>
        <function-ref name="getResistor" scoped="" ref="0x1071167c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x107116950"/>
        <function-ref name="get" scoped="" ref="0x107116ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x107116c60"/>
        <function-ref name="getRaw" scoped="" ref="0x107116de8"/>
        <function-ref name="set" scoped="" ref="0x107115020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1071151a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x107115330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1071155b8"/>
        <function-ref name="clr" scoped="" ref="0x107115740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1071123d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1071123d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x107112728"/>
        <function-ref name="isInput" scoped="" ref="0x1071128b0"/>
        <function-ref name="setResistor" scoped="" ref="0x107112a38"/>
        <function-ref name="toggle" scoped="" ref="0x107112bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x107112d48"/>
        <function-ref name="getResistor" scoped="" ref="0x107111020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1071111a8"/>
        <function-ref name="get" scoped="" ref="0x107111330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1071114b8"/>
        <function-ref name="getRaw" scoped="" ref="0x107111640"/>
        <function-ref name="set" scoped="" ref="0x1071117c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x107111950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x107111ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x107111d60"/>
        <function-ref name="clr" scoped="" ref="0x10714a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x107148ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x107148ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x107147020"/>
        <function-ref name="isInput" scoped="" ref="0x1071471a8"/>
        <function-ref name="setResistor" scoped="" ref="0x107147330"/>
        <function-ref name="toggle" scoped="" ref="0x1071474b8"/>
        <function-ref name="isOutput" scoped="" ref="0x107147640"/>
        <function-ref name="getResistor" scoped="" ref="0x1071477c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x107147950"/>
        <function-ref name="get" scoped="" ref="0x107147ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x107147c60"/>
        <function-ref name="getRaw" scoped="" ref="0x107147de8"/>
        <function-ref name="set" scoped="" ref="0x107146020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1071461a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x107146330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1071465b8"/>
        <function-ref name="clr" scoped="" ref="0x107146740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1071433d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1071433d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x107143728"/>
        <function-ref name="isInput" scoped="" ref="0x1071438b0"/>
        <function-ref name="setResistor" scoped="" ref="0x107143a38"/>
        <function-ref name="toggle" scoped="" ref="0x107143bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x107143d48"/>
        <function-ref name="getResistor" scoped="" ref="0x107142020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1071421a8"/>
        <function-ref name="get" scoped="" ref="0x107142330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1071424b8"/>
        <function-ref name="getRaw" scoped="" ref="0x107142640"/>
        <function-ref name="set" scoped="" ref="0x1071427c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x107142950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x107142ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x107142d60"/>
        <function-ref name="clr" scoped="" ref="0x107141020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10713fca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10713fca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10713e020"/>
        <function-ref name="isInput" scoped="" ref="0x10713e1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x10713e330"/>
        <function-ref name="toggle" scoped="" ref="0x10713e4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x10713e640"/>
        <function-ref name="getResistor" scoped="" ref="0x10713e7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10713e950"/>
        <function-ref name="get" scoped="" ref="0x10713ead8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10713ec60"/>
        <function-ref name="getRaw" scoped="" ref="0x10713ede8"/>
        <function-ref name="set" scoped="" ref="0x10713d020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10713d1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10713d330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10713d5b8"/>
        <function-ref name="clr" scoped="" ref="0x10713d740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10713a3d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10713a3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10713a728"/>
        <function-ref name="isInput" scoped="" ref="0x10713a8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x10713aa38"/>
        <function-ref name="toggle" scoped="" ref="0x10713abc0"/>
        <function-ref name="isOutput" scoped="" ref="0x10713ad48"/>
        <function-ref name="getResistor" scoped="" ref="0x107139020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1071391a8"/>
        <function-ref name="get" scoped="" ref="0x107139330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1071394b8"/>
        <function-ref name="getRaw" scoped="" ref="0x107139640"/>
        <function-ref name="set" scoped="" ref="0x1071397c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x107139950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x107139ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x107139d60"/>
        <function-ref name="clr" scoped="" ref="0x107138020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x107135ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x107135ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x107134020"/>
        <function-ref name="isInput" scoped="" ref="0x1071341a8"/>
        <function-ref name="setResistor" scoped="" ref="0x107134330"/>
        <function-ref name="toggle" scoped="" ref="0x1071344b8"/>
        <function-ref name="isOutput" scoped="" ref="0x107134640"/>
        <function-ref name="getResistor" scoped="" ref="0x1071347c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x107134950"/>
        <function-ref name="get" scoped="" ref="0x107134ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x107134c60"/>
        <function-ref name="getRaw" scoped="" ref="0x107134de8"/>
        <function-ref name="set" scoped="" ref="0x107133020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1071331a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x107133330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1071335b8"/>
        <function-ref name="clr" scoped="" ref="0x107133740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1071303d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1071303d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x107130728"/>
        <function-ref name="isInput" scoped="" ref="0x1071308b0"/>
        <function-ref name="setResistor" scoped="" ref="0x107130a38"/>
        <function-ref name="toggle" scoped="" ref="0x107130bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x107130d48"/>
        <function-ref name="getResistor" scoped="" ref="0x10712f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x10712f1a8"/>
        <function-ref name="get" scoped="" ref="0x10712f330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10712f4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x10712f640"/>
        <function-ref name="set" scoped="" ref="0x10712f7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10712f950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10712fad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10712fd60"/>
        <function-ref name="clr" scoped="" ref="0x10712e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x107166ca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x107166ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x107165020"/>
        <function-ref name="isInput" scoped="" ref="0x1071651a8"/>
        <function-ref name="setResistor" scoped="" ref="0x107165330"/>
        <function-ref name="toggle" scoped="" ref="0x1071654b8"/>
        <function-ref name="isOutput" scoped="" ref="0x107165640"/>
        <function-ref name="getResistor" scoped="" ref="0x1071657c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x107165950"/>
        <function-ref name="get" scoped="" ref="0x107165ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x107165c60"/>
        <function-ref name="getRaw" scoped="" ref="0x107165de8"/>
        <function-ref name="set" scoped="" ref="0x107164020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1071641a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x107164330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1071645b8"/>
        <function-ref name="clr" scoped="" ref="0x107164740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1071613d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1071613d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x107161728"/>
        <function-ref name="isInput" scoped="" ref="0x1071618b0"/>
        <function-ref name="setResistor" scoped="" ref="0x107161a38"/>
        <function-ref name="toggle" scoped="" ref="0x107161bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x107161d48"/>
        <function-ref name="getResistor" scoped="" ref="0x107160020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1071601a8"/>
        <function-ref name="get" scoped="" ref="0x107160330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1071604b8"/>
        <function-ref name="getRaw" scoped="" ref="0x107160640"/>
        <function-ref name="set" scoped="" ref="0x1071607c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x107160950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x107160ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x107160d60"/>
        <function-ref name="clr" scoped="" ref="0x10715f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10715dca0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10715dca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10715c020"/>
        <function-ref name="isInput" scoped="" ref="0x10715c1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x10715c330"/>
        <function-ref name="toggle" scoped="" ref="0x10715c4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x10715c640"/>
        <function-ref name="getResistor" scoped="" ref="0x10715c7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10715c950"/>
        <function-ref name="get" scoped="" ref="0x10715cad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10715cc60"/>
        <function-ref name="getRaw" scoped="" ref="0x10715cde8"/>
        <function-ref name="set" scoped="" ref="0x10715b020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10715b1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10715b330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10715b5b8"/>
        <function-ref name="clr" scoped="" ref="0x10715b740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1071583d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1071583d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x107158728"/>
        <function-ref name="isInput" scoped="" ref="0x1071588b0"/>
        <function-ref name="setResistor" scoped="" ref="0x107158a38"/>
        <function-ref name="toggle" scoped="" ref="0x107158bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x107158d48"/>
        <function-ref name="getResistor" scoped="" ref="0x107157020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1071571a8"/>
        <function-ref name="get" scoped="" ref="0x107157330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1071574b8"/>
        <function-ref name="getRaw" scoped="" ref="0x107157640"/>
        <function-ref name="set" scoped="" ref="0x1071577c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x107157950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x107157ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x107157d60"/>
        <function-ref name="clr" scoped="" ref="0x107156020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x1071c5020" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x1071c5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e87150"/>
            <typename><typedef-ref name="T32khz" ref="0x106e874a8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1071c5d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1071c46b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1071c4230"/>
        <function-ref name="overflow" scoped="" ref="0x1071c4b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x1071c3e00" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x1071c3e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e87150"/>
            <typename><typedef-ref name="T32khz" ref="0x106e874a8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1071c0be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1071bf548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1071bf0c0"/>
        <function-ref name="overflow" scoped="" ref="0x1071bf9d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x1071eb2a0" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x1071eb2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1071eb5f0"/>
        <function-ref name="setClockSource" scoped="" ref="0x1071eb778"/>
        <function-ref name="enableEvents" scoped="" ref="0x1071eb900"/>
        <function-ref name="get" scoped="" ref="0x1071eba88"/>
        <function-ref name="disableEvents" scoped="" ref="0x1071ebc10"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1071ebd98"/>
        <function-ref name="getMode" scoped="" ref="0x1071ea020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1071ea1a8"/>
        <function-ref name="overflow" scoped="" ref="0x1071ea330"/>
        <function-ref name="setMode" scoped="" ref="0x1071ea4b8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x1071ea640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x1071bb330" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x1071bb330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e87150"/>
            <typename><typedef-ref name="T32khz" ref="0x106e874a8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1071ed0c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1071ed9d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1071ed548"/>
        <function-ref name="overflow" scoped="" ref="0x1071ede58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x1071c8ba8" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x1071c8ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x1071e7020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x1071e71a8"/>
        <function-ref name="led1On" scoped="" ref="0x1071e7330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x1071e74b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x1071e7640"/>
        <function-ref name="get" scoped="" ref="0x1071e77c8"/>
        <function-ref name="led1Off" scoped="" ref="0x1071e7950"/>
        <function-ref name="led2Off" scoped="" ref="0x1071e6020"/>
        <function-ref name="set" scoped="" ref="0x1071e7ad8"/>
        <function-ref name="led0On" scoped="" ref="0x1071e7c60"/>
        <function-ref name="led2On" scoped="" ref="0x1071e7de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x1071db7c8" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x1071db7c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1071dbb18"/>
        <function-ref name="isInput" scoped="" ref="0x1071dbca0"/>
        <function-ref name="toggle" scoped="" ref="0x1071dbe28"/>
        <function-ref name="isOutput" scoped="" ref="0x1071e1020"/>
        <function-ref name="get" scoped="" ref="0x1071e11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1071e1330"/>
        <function-ref name="set" scoped="" ref="0x1071e14b8"/>
        <function-ref name="clr" scoped="" ref="0x1071e1640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1071e3020" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1071e3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1071e3370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x1071e1958" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x1071e1958"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1071e1ca8"/>
        <function-ref name="isInput" scoped="" ref="0x1071e1e30"/>
        <function-ref name="toggle" scoped="" ref="0x1071e0020"/>
        <function-ref name="isOutput" scoped="" ref="0x1071e01a8"/>
        <function-ref name="get" scoped="" ref="0x1071e0330"/>
        <function-ref name="makeOutput" scoped="" ref="0x1071e04b8"/>
        <function-ref name="set" scoped="" ref="0x1071e0640"/>
        <function-ref name="clr" scoped="" ref="0x1071e07c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x1071e35e8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x1071e35e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x1071e3938"/>
        <function-ref name="led0Toggle" scoped="" ref="0x1071e3ac0"/>
        <function-ref name="led1On" scoped="" ref="0x1071e3c48"/>
        <function-ref name="led1Toggle" scoped="" ref="0x1071e3dd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x1071e2020"/>
        <function-ref name="get" scoped="" ref="0x1071e21a8"/>
        <function-ref name="led1Off" scoped="" ref="0x1071e2330"/>
        <function-ref name="led2Off" scoped="" ref="0x1071e2950"/>
        <function-ref name="set" scoped="" ref="0x1071e24b8"/>
        <function-ref name="led0On" scoped="" ref="0x1071e2640"/>
        <function-ref name="led2On" scoped="" ref="0x1071e27c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x1071e0ae0" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x1071e0ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1071e0e30"/>
        <function-ref name="isInput" scoped="" ref="0x1071da020"/>
        <function-ref name="toggle" scoped="" ref="0x1071da1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x1071da330"/>
        <function-ref name="get" scoped="" ref="0x1071da4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1071da640"/>
        <function-ref name="set" scoped="" ref="0x1071da7c8"/>
        <function-ref name="clr" scoped="" ref="0x1071da950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x1071fb020" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x1071fb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1071fb370"/>
        <function-ref name="isInput" scoped="" ref="0x1071fb4f8"/>
        <function-ref name="toggle" scoped="" ref="0x1071fb680"/>
        <function-ref name="isOutput" scoped="" ref="0x1071fb808"/>
        <function-ref name="get" scoped="" ref="0x1071fb990"/>
        <function-ref name="makeOutput" scoped="" ref="0x1071fbb18"/>
        <function-ref name="set" scoped="" ref="0x1071fbca0"/>
        <function-ref name="clr" scoped="" ref="0x1071fbe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x1071fa1b0" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x1071fa1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1071fa500"/>
        <function-ref name="isInput" scoped="" ref="0x1071fa688"/>
        <function-ref name="toggle" scoped="" ref="0x1071fa810"/>
        <function-ref name="isOutput" scoped="" ref="0x1071fa998"/>
        <function-ref name="get" scoped="" ref="0x1071fab20"/>
        <function-ref name="makeOutput" scoped="" ref="0x1071faca8"/>
        <function-ref name="set" scoped="" ref="0x1071fae30"/>
        <function-ref name="clr" scoped="" ref="0x1071f9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x1071f8460" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1071f8460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1071f87b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x1071f9378" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x1071f9378"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1071f96c8"/>
        <function-ref name="isInput" scoped="" ref="0x1071f9850"/>
        <function-ref name="toggle" scoped="" ref="0x1071f99d8"/>
        <function-ref name="isOutput" scoped="" ref="0x1071f9b60"/>
        <function-ref name="get" scoped="" ref="0x1071f9ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1071f9e70"/>
        <function-ref name="set" scoped="" ref="0x1071f8020"/>
        <function-ref name="clr" scoped="" ref="0x1071f81a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x1072225f8" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x1072225f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x107222948"/>
        <function-ref name="isInput" scoped="" ref="0x107222ad0"/>
        <function-ref name="setResistor" scoped="" ref="0x107222c58"/>
        <function-ref name="toggle" scoped="" ref="0x107222de0"/>
        <function-ref name="isOutput" scoped="" ref="0x107221020"/>
        <function-ref name="getResistor" scoped="" ref="0x1072211a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x107221330"/>
        <function-ref name="get" scoped="" ref="0x1072214b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x107221640"/>
        <function-ref name="getRaw" scoped="" ref="0x1072217c8"/>
        <function-ref name="set" scoped="" ref="0x107221950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x107221ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x107221c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x107220020"/>
        <function-ref name="clr" scoped="" ref="0x1072201a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x1071f54e0" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x1071f54e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1071f5830"/>
        <function-ref name="isInput" scoped="" ref="0x1071f59b8"/>
        <function-ref name="toggle" scoped="" ref="0x1071f5b40"/>
        <function-ref name="isOutput" scoped="" ref="0x1071f5cc8"/>
        <function-ref name="get" scoped="" ref="0x1071f5e50"/>
        <function-ref name="makeOutput" scoped="" ref="0x107222020"/>
        <function-ref name="set" scoped="" ref="0x1072221a8"/>
        <function-ref name="clr" scoped="" ref="0x107222330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x10721ee20" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x10721ee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10721d1a8"/>
        <function-ref name="isInput" scoped="" ref="0x10721d330"/>
        <function-ref name="setResistor" scoped="" ref="0x10721d4b8"/>
        <function-ref name="toggle" scoped="" ref="0x10721d640"/>
        <function-ref name="isOutput" scoped="" ref="0x10721d7c8"/>
        <function-ref name="getResistor" scoped="" ref="0x10721d950"/>
        <function-ref name="makeOutput" scoped="" ref="0x10721dad8"/>
        <function-ref name="get" scoped="" ref="0x10721dc60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10721dde8"/>
        <function-ref name="getRaw" scoped="" ref="0x10721c020"/>
        <function-ref name="set" scoped="" ref="0x10721c1a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10721c330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10721c4b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10721c740"/>
        <function-ref name="clr" scoped="" ref="0x10721c8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x10721fcd0" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x10721fcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10721e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x10721e228"/>
        <function-ref name="toggle" scoped="" ref="0x10721e3b0"/>
        <function-ref name="isOutput" scoped="" ref="0x10721e538"/>
        <function-ref name="get" scoped="" ref="0x10721e6c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10721e848"/>
        <function-ref name="set" scoped="" ref="0x10721e9d0"/>
        <function-ref name="clr" scoped="" ref="0x10721eb58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x1072195f8" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x1072195f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x107219948"/>
        <function-ref name="isInput" scoped="" ref="0x107219ad0"/>
        <function-ref name="setResistor" scoped="" ref="0x107219c58"/>
        <function-ref name="toggle" scoped="" ref="0x107219de0"/>
        <function-ref name="isOutput" scoped="" ref="0x107218020"/>
        <function-ref name="getResistor" scoped="" ref="0x1072181a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x107218330"/>
        <function-ref name="get" scoped="" ref="0x1072184b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x107218640"/>
        <function-ref name="getRaw" scoped="" ref="0x1072187c8"/>
        <function-ref name="set" scoped="" ref="0x107218950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x107218ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x107218c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x107217020"/>
        <function-ref name="clr" scoped="" ref="0x1072171a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x10721a448" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x10721a448"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10721a798"/>
        <function-ref name="isInput" scoped="" ref="0x10721a920"/>
        <function-ref name="toggle" scoped="" ref="0x10721aaa8"/>
        <function-ref name="isOutput" scoped="" ref="0x10721ac30"/>
        <function-ref name="get" scoped="" ref="0x10721adb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x107219020"/>
        <function-ref name="set" scoped="" ref="0x1072191a8"/>
        <function-ref name="clr" scoped="" ref="0x107219330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x108321dc8" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x108321dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x108320170"/>
        <function-ref name="immediateRequested" scoped="" ref="0x1083202f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x10831bb90" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x10831bb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x108319020"/>
        <function-ref name="configure" scoped="" ref="0x1083191a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x10831b430" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x10831b430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x10831b780"/>
        <function-ref name="txDone" scoped="" ref="0x10831b908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1083211d0" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x1083211d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x108321520"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1083216a8"/>
        <function-ref name="request" scoped="" ref="0x108321830"/>
        <function-ref name="granted" scoped="" ref="0x1083219b8"/>
        <function-ref name="isOwner" scoped="" ref="0x108321b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x108320ce0" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x108320ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x10831f0a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x10831f228"/>
        <function-ref name="setUctl" scoped="" ref="0x10831f3b0"/>
        <function-ref name="enableUart" scoped="" ref="0x10831f538"/>
        <function-ref name="setUrctl" scoped="" ref="0x10831f6c0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x10831f848"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x10831f9d0"/>
        <function-ref name="getUtctl" scoped="" ref="0x10831fb58"/>
        <function-ref name="getUrctl" scoped="" ref="0x10831fce0"/>
        <function-ref name="resetUsart" scoped="" ref="0x10831fe68"/>
        <function-ref name="getUmctl" scoped="" ref="0x10831e020"/>
        <function-ref name="disableIntr" scoped="" ref="0x10831e1a8"/>
        <function-ref name="setUtctl" scoped="" ref="0x10831e330"/>
        <function-ref name="getUbr" scoped="" ref="0x10831e5b8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x10831e740"/>
        <function-ref name="setUmctl" scoped="" ref="0x10831e8c8"/>
        <function-ref name="isUartRx" scoped="" ref="0x10831ea50"/>
        <function-ref name="isUart" scoped="" ref="0x10831ebd8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x10831ed60"/>
        <function-ref name="isSpi" scoped="" ref="0x10831d020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x10831d1a8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x10831d330"/>
        <function-ref name="disableUartRx" scoped="" ref="0x10831d4b8"/>
        <function-ref name="enableIntr" scoped="" ref="0x10831d640"/>
        <function-ref name="getMode" scoped="" ref="0x10831d7c8"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x10831db50"/>
        <function-ref name="clrIntr" scoped="" ref="0x10831dcd8"/>
        <function-ref name="setUbr" scoped="" ref="0x10831de60"/>
        <function-ref name="tx" scoped="" ref="0x10831c020"/>
        <function-ref name="getUctl" scoped="" ref="0x10831c1a8"/>
        <function-ref name="disableUart" scoped="" ref="0x10831c330"/>
        <function-ref name="enableSpi" scoped="" ref="0x10831c4b8"/>
        <function-ref name="setModeUart" scoped="" ref="0x10831c640"/>
        <function-ref name="setModeSpi" scoped="" ref="0x10831c7c8"/>
        <function-ref name="rx" scoped="" ref="0x10831c950"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x10831cad8"/>
        <function-ref name="isUartTx" scoped="" ref="0x10831cc60"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x10831cde8"/>
        <function-ref name="disableSpi" scoped="" ref="0x10831b020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x10831b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x108320580" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x108320580"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x1083208d0"/>
        <function-ref name="userId" scoped="" ref="0x108320a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x1072321c8" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x1072321c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x107232518"/>
        <function-ref name="immediateRequested" scoped="" ref="0x1072326a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x10726e6c0" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x10726e6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x10726ea10"/>
        <function-ref name="configure" scoped="" ref="0x10726eb98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x1072341c8" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x1072341c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x107234518"/>
        <function-ref name="txDone" scoped="" ref="0x1072346a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x107234e70" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x107234e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1072331e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x107233370"/>
        <function-ref name="request" scoped="" ref="0x1072334f8"/>
        <function-ref name="granted" scoped="" ref="0x107233680"/>
        <function-ref name="isOwner" scoped="" ref="0x107233808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x107232998" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x107232998"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x107232ce8"/>
        <function-ref name="userId" scoped="" ref="0x107232e70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x107259a48" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x107259a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x107259d98"/>
        <function-ref name="userId" scoped="" ref="0x107258020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x10726cb20" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x10726cb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x10726b020"/>
        <function-ref name="txDone" scoped="" ref="0x10726b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x107259470" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x107259470"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1072597c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x10726b590" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x10726b590"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10726b900"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x10726bbc8" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x10726bbc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x107259020"/>
        <function-ref name="txDone" scoped="" ref="0x1072591a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x1072e1d18" loc="92:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x1072e1d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x1072e00d8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x1072e0260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x1072df960" loc="96:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x1072df960"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x1072dfcd0"/>
        <function-ref name="configure" scoped="" ref="0x1072dfe58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x1072e04a8" loc="93:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x1072e04a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1072e07f8"/>
        <function-ref name="requested" scoped="" ref="0x1072e0980"/>
        <function-ref name="granted" scoped="" ref="0x1072e0b08"/>
        <function-ref name="isOwner" scoped="" ref="0x1072e0c90"/>
        <function-ref name="immediateRequested" scoped="" ref="0x1072e0e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1072e1020" loc="91:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x1072e1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1072e1390"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1072e1518"/>
        <function-ref name="request" scoped="" ref="0x1072e16a0"/>
        <function-ref name="granted" scoped="" ref="0x1072e1828"/>
        <function-ref name="isOwner" scoped="" ref="0x1072e19b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x1072df0e0" loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x1072df0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x1072df430"/>
        <function-ref name="userId" scoped="" ref="0x1072df5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1086ad080" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1086ad080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1086ad3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x1086ad658" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x1086ad658"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x1086ad9a8"/>
        <function-ref name="isEmpty" scoped="" ref="0x1086adb30"/>
        <function-ref name="isEnqueued" scoped="" ref="0x1086adcb8"/>
        <function-ref name="dequeue" scoped="" ref="0x1086ade40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x1086a9388" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x1086a9388"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x1086a96f8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x1086a9880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x1086a7020" loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x1086a7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x1086a7390"/>
        <function-ref name="configure" scoped="" ref="0x1086a7518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x1086a77a0" loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x1086a77a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x1086a7af0"/>
        <function-ref name="isEmpty" scoped="" ref="0x1086a7c78"/>
        <function-ref name="isEnqueued" scoped="" ref="0x1086a7e00"/>
        <function-ref name="dequeue" scoped="" ref="0x1086a6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x1086a9ac8" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x1086a9ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1086a9e18"/>
        <function-ref name="requested" scoped="" ref="0x1086a8020"/>
        <function-ref name="granted" scoped="" ref="0x1086a81a8"/>
        <function-ref name="isOwner" scoped="" ref="0x1086a8330"/>
        <function-ref name="immediateRequested" scoped="" ref="0x1086a84b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x1086a6268" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x1086a6268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x1086a65b8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x1086a6740"/>
        <function-ref name="led1On" scoped="" ref="0x1086a68c8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x1086a6a50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x1086a6bd8"/>
        <function-ref name="get" scoped="" ref="0x1086a6d60"/>
        <function-ref name="led1Off" scoped="" ref="0x1086a5020"/>
        <function-ref name="led0On" scoped="" ref="0x1086a5640"/>
        <function-ref name="set" scoped="" ref="0x1086a5330"/>
        <function-ref name="led2On" scoped="" ref="0x1086a51a8"/>
        <function-ref name="led2Off" scoped="" ref="0x1086a54b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1086aa668" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x1086aa668"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1086aa9d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1086aab60"/>
        <function-ref name="request" scoped="" ref="0x1086aace8"/>
        <function-ref name="granted" scoped="" ref="0x1086aae70"/>
        <function-ref name="isOwner" scoped="" ref="0x1086a9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x1086a8700" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x1086a8700"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x1086a8a50"/>
        <function-ref name="userId" scoped="" ref="0x1086a8bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x1086a5908" loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x1086a5908"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1086a5c58"/>
        <function-ref name="runTask" scoped="" ref="0x1086a5de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x1072dab98" loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x1072dab98"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x107305020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x107305268" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x107305268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1073055b8"/>
        <function-ref name="requested" scoped="" ref="0x107305740"/>
        <function-ref name="granted" scoped="" ref="0x1073058c8"/>
        <function-ref name="isOwner" scoped="" ref="0x107305a50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x107305bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x1072da478" loc="70:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x1072da478"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x1072da7c8"/>
        <function-ref name="stop" scoped="" ref="0x1072da950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x107305e20" loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x107305e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x1073041a8"/>
        <function-ref name="userId" scoped="" ref="0x107304330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x108706d20" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x108706d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x1087050a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x1087052e8" loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x1087052e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x108705638"/>
        <function-ref name="requested" scoped="" ref="0x1087057c0"/>
        <function-ref name="granted" scoped="" ref="0x108705948"/>
        <function-ref name="isOwner" scoped="" ref="0x108705ad0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x108705c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x108706600" loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x108706600"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x108706950"/>
        <function-ref name="stop" scoped="" ref="0x108706ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x108704020" loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x108704020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x108704370"/>
        <function-ref name="userId" scoped="" ref="0x1087044f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x107329640" loc="3:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x107329640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x107329990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x107329c70" loc="4:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x107329c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x107328020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1073281a8"/>
        <function-ref name="request" scoped="" ref="0x107328330"/>
        <function-ref name="granted" scoped="" ref="0x1073284b8"/>
        <function-ref name="isOwner" scoped="" ref="0x107328640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x10732cda8" loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x10732cda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x107329170"/>
        <function-ref name="stop" scoped="" ref="0x1073292f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x107315060" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x107315060"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x1073153b0"/>
        <function-ref name="offset" scoped="" ref="0x107315538"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x1073156c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x107349a60" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="ChaseTestAppC.floodTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x107349a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e88990"/>
            <typename><typedef-ref name="TMilli" ref="0x106e88ce8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1074b6d60"/>
        <function-ref name="fired" scoped="" ref="0x1074b7470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x1074b61c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x1074b7d10"/>
        <function-ref name="getdt" scoped="" ref="0x1074b4648"/>
        <function-ref name="gett0" scoped="" ref="0x1074b41f8"/>
        <function-ref name="isRunning" scoped="" ref="0x1074b78c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x1074b8620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x1074b6790"/>
        <function-ref name="startOneShot" scoped="" ref="0x1074b8ac0"/>
        <function-ref name="stop" scoped="" ref="0x1074b7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x1073367d8" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x1073367d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e88990"/>
            <typename><typedef-ref name="TMilli" ref="0x106e88ce8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x107333a18"/>
        <function-ref name="fired" scoped="" ref="0x107334158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x107334e48"/>
        <function-ref name="isOneShot" scoped="" ref="0x1073349f8"/>
        <function-ref name="getdt" scoped="" ref="0x1073312e8"/>
        <function-ref name="gett0" scoped="" ref="0x107333e68"/>
        <function-ref name="isRunning" scoped="" ref="0x1073345a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x107335370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x107333448"/>
        <function-ref name="startOneShot" scoped="" ref="0x107335810"/>
        <function-ref name="stop" scoped="" ref="0x107335cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x107370de8" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x107370de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e88990"/>
            <typename><typedef-ref name="TMilli" ref="0x106e88ce8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10736b0c0"/>
        <function-ref name="fired" scoped="" ref="0x10736d798"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x10736c4d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x10736c088"/>
        <function-ref name="getdt" scoped="" ref="0x10736b960"/>
        <function-ref name="gett0" scoped="" ref="0x10736b510"/>
        <function-ref name="isRunning" scoped="" ref="0x10736dbe8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x10736f9e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x10736caa8"/>
        <function-ref name="startOneShot" scoped="" ref="0x10736fe80"/>
        <function-ref name="stop" scoped="" ref="0x10736d348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x107366ae8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x107366ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e88990"/>
            <typename><typedef-ref name="TMilli" ref="0x106e88ce8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x107368690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1073700f0" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1073700f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x107370440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x107434c00" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x107434c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e88990"/>
            <typename><typedef-ref name="TMilli" ref="0x106e88ce8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10631d020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x107431410"/>
        <function-ref name="fired" scoped="" ref="0x1074324a8"/>
        <function-ref name="startAt" scoped="" ref="0x107432db8"/>
        <function-ref name="isRunning" scoped="" ref="0x107432930"/>
        <function-ref name="getAlarm" scoped="" ref="0x107431898"/>
        <function-ref name="start" scoped="" ref="0x1074339f0"/>
        <function-ref name="stop" scoped="" ref="0x107432020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x107434418" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x107434418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x107434768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x1086f5020" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x1086f5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e87150"/>
            <typename><typedef-ref name="T32khz" ref="0x106e874a8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1086f3690"/>
        <function-ref name="fired" scoped="" ref="0x1086f46f8"/>
        <function-ref name="startAt" scoped="" ref="0x1086f3088"/>
        <function-ref name="isRunning" scoped="" ref="0x1086f4b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x1086f3b18"/>
        <function-ref name="start" scoped="" ref="0x1086f5d70"/>
        <function-ref name="stop" scoped="" ref="0x1086f4270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1086f67d8" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1086f67d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1086f6b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x10876f5b8" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x10876f5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10876f908"/>
        <function-ref name="setEvent" scoped="" ref="0x10876fa90"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10876fc18"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10876fda0"/>
        <function-ref name="fired" scoped="" ref="0x10876e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x108772b88" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x108772b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x108771020"/>
        <function-ref name="setClockSource" scoped="" ref="0x1087711a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x108771330"/>
        <function-ref name="get" scoped="" ref="0x1087714b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x108771640"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1087717c8"/>
        <function-ref name="getMode" scoped="" ref="0x108771950"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x108771ad8"/>
        <function-ref name="overflow" scoped="" ref="0x108771c60"/>
        <function-ref name="setMode" scoped="" ref="0x108771de8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x108770020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x1087702a8" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x1087702a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1087705f8"/>
        <function-ref name="getControl" scoped="" ref="0x108770780"/>
        <function-ref name="enableEvents" scoped="" ref="0x108770908"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x108770a90"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x108770c18"/>
        <function-ref name="disableEvents" scoped="" ref="0x108770da0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10876f020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10876f1a8"/>
        <function-ref name="setControl" scoped="" ref="0x10876f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x107387cb8" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x107387cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1073850a0"/>
        <function-ref name="setEvent" scoped="" ref="0x107385228"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1073853b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x107385538"/>
        <function-ref name="fired" scoped="" ref="0x1073856c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x10738a858" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x10738a858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10738aba8"/>
        <function-ref name="setClockSource" scoped="" ref="0x10738ad30"/>
        <function-ref name="enableEvents" scoped="" ref="0x107389020"/>
        <function-ref name="get" scoped="" ref="0x1073891a8"/>
        <function-ref name="disableEvents" scoped="" ref="0x107389330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1073894b8"/>
        <function-ref name="getMode" scoped="" ref="0x107389640"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1073897c8"/>
        <function-ref name="overflow" scoped="" ref="0x107389950"/>
        <function-ref name="setMode" scoped="" ref="0x107389ad8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x107389c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x1073884d0" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x1073884d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x107388820"/>
        <function-ref name="getControl" scoped="" ref="0x1073889a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x107388b30"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x107388cb8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x107388e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x107387020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1073871a8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x107387330"/>
        <function-ref name="setControl" scoped="" ref="0x1073874b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x108765020" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x108765020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x108765370"/>
        <function-ref name="setEvent" scoped="" ref="0x1087654f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x108765680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x108765808"/>
        <function-ref name="fired" scoped="" ref="0x108765990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x108768568" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x108768568"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1087688b8"/>
        <function-ref name="setClockSource" scoped="" ref="0x108768a40"/>
        <function-ref name="enableEvents" scoped="" ref="0x108768bc8"/>
        <function-ref name="get" scoped="" ref="0x108768d50"/>
        <function-ref name="disableEvents" scoped="" ref="0x108767020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1087671a8"/>
        <function-ref name="getMode" scoped="" ref="0x108767330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1087674b8"/>
        <function-ref name="overflow" scoped="" ref="0x108767640"/>
        <function-ref name="setMode" scoped="" ref="0x1087677c8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x108767950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x10876b4f8" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x10876b4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e87150"/>
            <typename><typedef-ref name="T32khz" ref="0x106e874a8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x108769c88"/>
        <function-ref name="fired" scoped="" ref="0x10876ad08"/>
        <function-ref name="startAt" scoped="" ref="0x108769680"/>
        <function-ref name="isRunning" scoped="" ref="0x1087691f8"/>
        <function-ref name="getAlarm" scoped="" ref="0x108768150"/>
        <function-ref name="start" scoped="" ref="0x10876a3a8"/>
        <function-ref name="stop" scoped="" ref="0x10876a880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10876dbd8" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10876dbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10876b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x108767bd8" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x108767bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x108766020"/>
        <function-ref name="getControl" scoped="" ref="0x1087661a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x108766330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1087664b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x108766640"/>
        <function-ref name="disableEvents" scoped="" ref="0x1087667c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x108766950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x108766ad8"/>
        <function-ref name="setControl" scoped="" ref="0x108766c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x1073c7be0" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x1073c7be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e88990"/>
            <typename><typedef-ref name="TMilli" ref="0x106e88ce8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10631d020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1073c4970"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1073c32b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1073c4df8"/>
        <function-ref name="overflow" scoped="" ref="0x1073c3738"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x1073e8e20" loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x1073e8e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e87150"/>
            <typename><typedef-ref name="T32khz" ref="0x106e874a8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1073e6be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1073e5548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1073e50c0"/>
        <function-ref name="overflow" scoped="" ref="0x1073e59d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x1073eac50" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x1073eac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e88990"/>
            <typename><typedef-ref name="TMilli" ref="0x106e88ce8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10631d020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1073e99f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1073e8330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1073e9e78"/>
        <function-ref name="overflow" scoped="" ref="0x1073e87b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x1086ef020" loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x1086ef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e88990"/>
            <typename><typedef-ref name="TMilli" ref="0x106e88ce8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10631d020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1086ed690"/>
        <function-ref name="fired" scoped="" ref="0x1086ee6f8"/>
        <function-ref name="startAt" scoped="" ref="0x1086ed088"/>
        <function-ref name="isRunning" scoped="" ref="0x1086eeb80"/>
        <function-ref name="getAlarm" scoped="" ref="0x1086edb18"/>
        <function-ref name="start" scoped="" ref="0x1086efd70"/>
        <function-ref name="stop" scoped="" ref="0x1086ee270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x1086e9450" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x1086e9450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e87150"/>
            <typename><typedef-ref name="T32khz" ref="0x106e874a8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1086e7ab0"/>
        <function-ref name="fired" scoped="" ref="0x1086e8b30"/>
        <function-ref name="startAt" scoped="" ref="0x1086e74a8"/>
        <function-ref name="isRunning" scoped="" ref="0x1086e7020"/>
        <function-ref name="getAlarm" scoped="" ref="0x1086e6020"/>
        <function-ref name="start" scoped="" ref="0x1086e81d0"/>
        <function-ref name="stop" scoped="" ref="0x1086e86a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x1086ec1a8" loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x1086ec1a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e88990"/>
            <typename><typedef-ref name="TMilli" ref="0x106e88ce8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10631d020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1086eb020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1086eb930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1086eb4a8"/>
        <function-ref name="overflow" scoped="" ref="0x1086ebdb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x107446020" loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x107446020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x107446370"/>
        <function-ref name="runTask" scoped="" ref="0x1074464f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x10744a020" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x10744a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e88990"/>
            <typename><typedef-ref name="TMilli" ref="0x106e88ce8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10631d020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x107447690"/>
        <function-ref name="fired" scoped="" ref="0x1074486f8"/>
        <function-ref name="startAt" scoped="" ref="0x107447088"/>
        <function-ref name="isRunning" scoped="" ref="0x107448b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x107447b18"/>
        <function-ref name="start" scoped="" ref="0x10744ad70"/>
        <function-ref name="stop" scoped="" ref="0x107448270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x10742dd88" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10742dd88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e88990"/>
            <typename><typedef-ref name="TMilli" ref="0x106e88ce8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10744b088"/>
        <function-ref name="fired" scoped="" ref="0x10744e6c8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x10744c470"/>
        <function-ref name="isOneShot" scoped="" ref="0x10744c020"/>
        <function-ref name="getdt" scoped="" ref="0x10744b928"/>
        <function-ref name="gett0" scoped="" ref="0x10744b4d8"/>
        <function-ref name="isRunning" scoped="" ref="0x10744eb18"/>
        <function-ref name="startPeriodic" scoped="" ref="0x10744f908"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x10744ca40"/>
        <function-ref name="startOneShot" scoped="" ref="0x10744fda8"/>
        <function-ref name="stop" scoped="" ref="0x10744e278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x107485478" loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x107485478"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1074857c8"/>
        <function-ref name="runTask" scoped="" ref="0x107485950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x10748a208" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x10748a208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e88990"/>
            <typename><typedef-ref name="TMilli" ref="0x106e88ce8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1074865f0"/>
        <function-ref name="fired" scoped="" ref="0x107488b28"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x1074878c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x107487470"/>
        <function-ref name="getdt" scoped="" ref="0x107485020"/>
        <function-ref name="gett0" scoped="" ref="0x107486a40"/>
        <function-ref name="isRunning" scoped="" ref="0x107487020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x10748ad50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x107486020"/>
        <function-ref name="startOneShot" scoped="" ref="0x107488238"/>
        <function-ref name="stop" scoped="" ref="0x1074886d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x107490020" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x107490020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e88990"/>
            <typename><typedef-ref name="TMilli" ref="0x106e88ce8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10748b358"/>
        <function-ref name="fired" scoped="" ref="0x10748e9b8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x10748d748"/>
        <function-ref name="isOneShot" scoped="" ref="0x10748d2d8"/>
        <function-ref name="getdt" scoped="" ref="0x10748bc38"/>
        <function-ref name="gett0" scoped="" ref="0x10748b7c8"/>
        <function-ref name="isRunning" scoped="" ref="0x10748ee28"/>
        <function-ref name="startPeriodic" scoped="" ref="0x107490b88"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x10748dd38"/>
        <function-ref name="startOneShot" scoped="" ref="0x10748e088"/>
        <function-ref name="stop" scoped="" ref="0x10748e548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x1074cac38" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x1074cac38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e88990"/>
            <typename><typedef-ref name="TMilli" ref="0x106e88ce8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1074c9820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x1074c9e48" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x1074c9e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e88990"/>
            <typename><typedef-ref name="TMilli" ref="0x106e88ce8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10631d020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1074bfbe8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1074be548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1074be0c0"/>
        <function-ref name="overflow" scoped="" ref="0x1074be9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x1074b2020" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="ChaseTestAppC.dcTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x1074b2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e88990"/>
            <typename><typedef-ref name="TMilli" ref="0x106e88ce8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1074ae2b8"/>
        <function-ref name="fired" scoped="" ref="0x1074b1978"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x1074b06c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x1074b0278"/>
        <function-ref name="getdt" scoped="" ref="0x1074aeb58"/>
        <function-ref name="gett0" scoped="" ref="0x1074ae708"/>
        <function-ref name="isRunning" scoped="" ref="0x1074b1dc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x1074b2b68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x1074b0c98"/>
        <function-ref name="startOneShot" scoped="" ref="0x1074b1088"/>
        <function-ref name="stop" scoped="" ref="0x1074b1528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x1074eb350" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x1074eb350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x1074eb6a0"/>
        <function-ref name="rand32" scoped="" ref="0x1074eb828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x1074efd00" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x1074efd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1074a98b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1074aa020" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1074aa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1074aa370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x1074e8160" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x1074e8160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x1074e84b0"/>
        <function-ref name="rand32" scoped="" ref="0x1074e8638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x1074e9118" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x1074e9118"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1074e9c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1074ee840" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1074ee840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1074eeb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChaseEnergy" ref="0x10750d830" loc="13:../../net/ChaseC.nc">
      <component-ref qname="ChaseC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChaseEnergy" scoped="" ref="0x10750d830"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChaseEnergy"/>
      </instance>
      <interface-functions>
        <function-ref name="getRadioOnTime" scoped="" ref="0x10750db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChasePacket" ref="0x107511b10" loc="11:../../net/ChaseC.nc">
      <component-ref qname="ChaseC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChasePacket" scoped="" ref="0x107511b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChasePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x107511e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChaseControl" ref="0x1075122b8" loc="10:../../net/ChaseC.nc">
      <component-ref qname="ChaseC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChaseControl" scoped="" ref="0x1075122b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChaseControl"/>
      </instance>
      <interface-functions>
        <function-ref name="dc_started" scoped="" ref="0x107512608"/>
        <function-ref name="dc_start" scoped="" ref="0x107512790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChaseListen" ref="0x1074cd5c0" loc="9:../../net/ChaseC.nc">
      <component-ref qname="ChaseC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChaseListen" scoped="" ref="0x1074cd5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChaseListen"/>
      </instance>
      <interface-functions>
        <function-ref name="reboot_rec" scoped="" ref="0x1074cd910"/>
        <function-ref name="begin_rec" scoped="" ref="0x1074cda98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChaseDelay" ref="0x10750f568" loc="12:../../net/ChaseC.nc">
      <component-ref qname="ChaseC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChaseDelay" scoped="" ref="0x10750f568"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChaseDelay"/>
      </instance>
      <interface-functions>
        <function-ref name="getTime" scoped="" ref="0x10750f8b8"/>
        <function-ref name="getDelay" scoped="" ref="0x10750fa40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChaseFlood" ref="0x1074cfc40" loc="8:../../net/ChaseC.nc">
      <component-ref qname="ChaseC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChaseFlood" scoped="" ref="0x1074cfc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChaseFlood"/>
      </instance>
      <interface-functions>
        <function-ref name="init_flood" scoped="" ref="0x1074d3020"/>
        <function-ref name="pkt_reced" scoped="" ref="0x1074d31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x107502cf0" loc="44:../../chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x107502cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x1075010a0"/>
        <function-ref name="stopDone" scoped="" ref="0x107501228"/>
        <function-ref name="start" scoped="" ref="0x1075013b0"/>
        <function-ref name="stop" scoped="" ref="0x107501538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x1074f8d88" loc="47:../../chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x1074f8d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x1074ff170"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x1074ff2f8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x1074ff480"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x1074ff608"/>
        <function-ref name="setCca" scoped="" ref="0x1074ff790"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x1074ff918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x1075017f0" loc="45:../../chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x1075017f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x107501b40"/>
        <function-ref name="getPayload" scoped="" ref="0x107501cc8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x107501e50"/>
        <function-ref name="cancel" scoped="" ref="0x107500020"/>
        <function-ref name="sendDone" scoped="" ref="0x1075001a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x107500478" loc="46:../../chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x107500478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1075007c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x1074fe860" loc="39:../../chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x1074fe860"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x1074febb0"/>
        <function-ref name="stopDone" scoped="" ref="0x1074fed38"/>
        <function-ref name="start" scoped="" ref="0x1074f5020"/>
        <function-ref name="stop" scoped="" ref="0x1074f51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x1074f3140" loc="41:../../chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x1074f3140"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x1074f3490"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x1074f3618"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x1074f37a0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x1074f3928"/>
        <function-ref name="setCca" scoped="" ref="0x1074f3ab0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x1074f3c38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x107539aa8" loc="47:../../chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x107539aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x107539df8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x107532020"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x1075321a8"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x107532330"/>
        <function-ref name="setCca" scoped="" ref="0x1075324b8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x107532640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x107521888" loc="50:../../chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x107521888"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x107521bd8"/>
        <function-ref name="setNetwork" scoped="" ref="0x107521d60"/>
        <function-ref name="getRssi" scoped="" ref="0x107529020"/>
        <function-ref name="getNetwork" scoped="" ref="0x1075291a8"/>
        <function-ref name="getPower" scoped="" ref="0x107529330"/>
        <function-ref name="getLqi" scoped="" ref="0x1075294b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x10752cd48" loc="46:../../chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x10752cd48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1075390d8"/>
        <function-ref name="cancel" scoped="" ref="0x107539260"/>
        <function-ref name="modify" scoped="" ref="0x1075393e8"/>
        <function-ref name="sendDone" scoped="" ref="0x107539570"/>
        <function-ref name="resend" scoped="" ref="0x1075396f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x1074f5460" loc="40:../../chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x1074f5460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1074f57b0"/>
        <function-ref name="getPayload" scoped="" ref="0x1074f5938"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1074f5ac0"/>
        <function-ref name="cancel" scoped="" ref="0x1074f5c48"/>
        <function-ref name="sendDone" scoped="" ref="0x1074f5dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x107532908" loc="48:../../chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x107532908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x107532c58"/>
        <function-ref name="rand32" scoped="" ref="0x107532de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x1074f1540" loc="45:../../chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x1074f1540"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x1074f1890"/>
        <function-ref name="stop" scoped="" ref="0x1074f1a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x10751cb68" loc="51:../../chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x10751cb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x107528020"/>
        <function-ref name="getHeader" scoped="" ref="0x1075281a8"/>
        <function-ref name="getMetadata" scoped="" ref="0x107528330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x107533320" loc="44:../../chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x107533320"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x107533670"/>
        <function-ref name="rfOff" scoped="" ref="0x1075337f8"/>
        <function-ref name="rxOn" scoped="" ref="0x107533980"/>
        <function-ref name="startVReg" scoped="" ref="0x107533b08"/>
        <function-ref name="stopVReg" scoped="" ref="0x107533c90"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x107533e18"/>
        <function-ref name="stopOscillator" scoped="" ref="0x1074f1020"/>
        <function-ref name="startVRegDone" scoped="" ref="0x1074f11a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x10752b0c0" loc="49:../../chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x10752b0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x10752b410"/>
        <function-ref name="led0Toggle" scoped="" ref="0x10752b598"/>
        <function-ref name="led1On" scoped="" ref="0x10752b720"/>
        <function-ref name="led1Toggle" scoped="" ref="0x10752b8a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x10752ba30"/>
        <function-ref name="get" scoped="" ref="0x10752bbb8"/>
        <function-ref name="led1Off" scoped="" ref="0x10752bd40"/>
        <function-ref name="led2Off" scoped="" ref="0x10752a4b8"/>
        <function-ref name="set" scoped="" ref="0x10752a020"/>
        <function-ref name="led0On" scoped="" ref="0x10752a1a8"/>
        <function-ref name="led2On" scoped="" ref="0x10752a330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x1074f2020" loc="43:../../chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x1074f2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1074f2370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1074f24f8"/>
        <function-ref name="request" scoped="" ref="0x1074f2680"/>
        <function-ref name="granted" scoped="" ref="0x1074f2808"/>
        <function-ref name="isOwner" scoped="" ref="0x1074f2990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x107520110" loc="52:../../chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x107520110"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x107520560"/>
        <function-ref name="toIdle" scoped="" ref="0x1075206e8"/>
        <function-ref name="isState" scoped="" ref="0x107520870"/>
        <function-ref name="isIdle" scoped="" ref="0x1075209f8"/>
        <function-ref name="requestState" scoped="" ref="0x107520b80"/>
        <function-ref name="forceState" scoped="" ref="0x107520d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x10755c800" loc="76:../../chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x10755c800"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x10755cb50"/>
        <function-ref name="runTask" scoped="" ref="0x10755ccd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x10755e9a8" loc="75:../../chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x10755e9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x10755ecf8"/>
        <function-ref name="runTask" scoped="" ref="0x10755ee80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x107515ab8" loc="74:../../chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x107515ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x107515e08"/>
        <function-ref name="runTask" scoped="" ref="0x10755e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x10759aaf8" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x10759aaf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x10759ae48"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x1075a6020"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x1075a61a8"/>
        <function-ref name="syncDone" scoped="" ref="0x1075a6330"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x1075a64b8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x1075a6640"/>
        <function-ref name="setChannel" scoped="" ref="0x1075a67c8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x1075a6950"/>
        <function-ref name="setPanAddr" scoped="" ref="0x1075a6ad8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x1075a6c60"/>
        <function-ref name="getExtAddr" scoped="" ref="0x1075a6de8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x1075a5020"/>
        <function-ref name="sync" scoped="" ref="0x1075a51a8"/>
        <function-ref name="getChannel" scoped="" ref="0x1075a5430"/>
        <function-ref name="getPanAddr" scoped="" ref="0x1075a55b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x107595d28" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x107595d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1075988b8"/>
        <function-ref name="readDone" scoped="" ref="0x107598d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x1075a58b0" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x1075a58b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x1075a5c00"/>
        <function-ref name="rfOff" scoped="" ref="0x1075a5d88"/>
        <function-ref name="rxOn" scoped="" ref="0x107599020"/>
        <function-ref name="startVReg" scoped="" ref="0x1075991a8"/>
        <function-ref name="stopVReg" scoped="" ref="0x107599330"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x1075994b8"/>
        <function-ref name="stopOscillator" scoped="" ref="0x107599640"/>
        <function-ref name="startVRegDone" scoped="" ref="0x1075997c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x107560e18" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x107560e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1075a71a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1075a7330"/>
        <function-ref name="request" scoped="" ref="0x1075a74b8"/>
        <function-ref name="granted" scoped="" ref="0x1075a7640"/>
        <function-ref name="isOwner" scoped="" ref="0x1075a77c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x1075904b0" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x1075904b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x107590800"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x107590988"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x107590b10"/>
        <function-ref name="syncDone" scoped="" ref="0x107590c98"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x107590e20"/>
        <function-ref name="setShortAddr" scoped="" ref="0x10758f020"/>
        <function-ref name="setChannel" scoped="" ref="0x10758f1a8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x10758f330"/>
        <function-ref name="setPanAddr" scoped="" ref="0x10758f4b8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x10758f640"/>
        <function-ref name="getExtAddr" scoped="" ref="0x10758f7c8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x10758f950"/>
        <function-ref name="sync" scoped="" ref="0x10758fad8"/>
        <function-ref name="getChannel" scoped="" ref="0x10758fd60"/>
        <function-ref name="getPanAddr" scoped="" ref="0x10758e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x1075bcdd0" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x1075bcdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1075bb170"/>
        <function-ref name="write" scoped="" ref="0x1075bb2f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x107588998" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x107588998"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x107588ce8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x10758a370" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x10758a370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e87150"/>
            <typename><typedef-ref name="T32khz" ref="0x106e874a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10631d020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x107587ab0"/>
        <function-ref name="fired" scoped="" ref="0x107589a58"/>
        <function-ref name="startAt" scoped="" ref="0x1075874a8"/>
        <function-ref name="isRunning" scoped="" ref="0x107587020"/>
        <function-ref name="getAlarm" scoped="" ref="0x107585020"/>
        <function-ref name="start" scoped="" ref="0x1075890f8"/>
        <function-ref name="stop" scoped="" ref="0x1075895d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x1075c4c40" loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x1075c4c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1075bc020"/>
        <function-ref name="write" scoped="" ref="0x1075bc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x107584688" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x107584688"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1075849d8"/>
        <function-ref name="isInput" scoped="" ref="0x107584b60"/>
        <function-ref name="toggle" scoped="" ref="0x107584ce8"/>
        <function-ref name="isOutput" scoped="" ref="0x107584e70"/>
        <function-ref name="get" scoped="" ref="0x1075cf020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1075cf1a8"/>
        <function-ref name="set" scoped="" ref="0x1075cf330"/>
        <function-ref name="clr" scoped="" ref="0x1075cf4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x10758d658" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x10758d658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10758c1e8"/>
        <function-ref name="readDone" scoped="" ref="0x10758c638"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x1075aa720" loc="126:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x1075aa720"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1075aaa70"/>
        <function-ref name="runTask" scoped="" ref="0x1075aabf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x1075bb680" loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x1075bb680"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1075bb9d0"/>
        <function-ref name="write" scoped="" ref="0x1075bbb58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x1075ba020" loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x1075ba020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1075ba370"/>
        <function-ref name="write" scoped="" ref="0x1075ba4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x1075bda40" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x1075bda40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1075bdd90"/>
        <function-ref name="write" scoped="" ref="0x1075c4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x1075c5338" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x1075c5338"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x1075c5688"/>
        <function-ref name="changed" scoped="" ref="0x1075c5810"/>
        <function-ref name="amGroup" scoped="" ref="0x1075c5998"/>
        <function-ref name="setAddress" scoped="" ref="0x1075c5b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x1075854f8" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x1075854f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x107585848"/>
        <function-ref name="isInput" scoped="" ref="0x1075859d0"/>
        <function-ref name="toggle" scoped="" ref="0x107585b58"/>
        <function-ref name="isOutput" scoped="" ref="0x107585ce0"/>
        <function-ref name="get" scoped="" ref="0x107585e68"/>
        <function-ref name="makeOutput" scoped="" ref="0x107584020"/>
        <function-ref name="set" scoped="" ref="0x1075841a8"/>
        <function-ref name="clr" scoped="" ref="0x107584330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x1075b9560" loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x1075b9560"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1075b9ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x1075cf810" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x1075cf810"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1075cfb60"/>
        <function-ref name="isInput" scoped="" ref="0x1075cfce8"/>
        <function-ref name="toggle" scoped="" ref="0x1075cfe70"/>
        <function-ref name="isOutput" scoped="" ref="0x1075ce020"/>
        <function-ref name="get" scoped="" ref="0x1075ce1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1075ce330"/>
        <function-ref name="set" scoped="" ref="0x1075ce4b8"/>
        <function-ref name="clr" scoped="" ref="0x1075ce640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x107591080" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x107591080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1075913d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x1075bc558" loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x1075bc558"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1075bc8a8"/>
        <function-ref name="write" scoped="" ref="0x1075bca30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x1075b9e40" loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x1075b9e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1075b81c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x1075b8550" loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x1075b8550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1075b88a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1075b8a28"/>
        <function-ref name="request" scoped="" ref="0x1075b8bb0"/>
        <function-ref name="granted" scoped="" ref="0x1075b8d38"/>
        <function-ref name="isOwner" scoped="" ref="0x1075b6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x1075b5140" loc="76:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x1075b5140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1075b5490"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1075b5618"/>
        <function-ref name="request" scoped="" ref="0x1075b57a0"/>
        <function-ref name="granted" scoped="" ref="0x1075b5928"/>
        <function-ref name="isOwner" scoped="" ref="0x1075b5ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x10758e318" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x10758e318"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x10758e668"/>
        <function-ref name="rfOff" scoped="" ref="0x10758e7f0"/>
        <function-ref name="rxOn" scoped="" ref="0x10758e978"/>
        <function-ref name="startVReg" scoped="" ref="0x10758eb00"/>
        <function-ref name="stopVReg" scoped="" ref="0x10758ec88"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x10758ee10"/>
        <function-ref name="stopOscillator" scoped="" ref="0x10758d020"/>
        <function-ref name="startVRegDone" scoped="" ref="0x10758d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x1075c43b8" loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x1075c43b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1075c4708"/>
        <function-ref name="write" scoped="" ref="0x1075c4890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x1075bd1d0" loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x1075bd1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1075bd520"/>
        <function-ref name="write" scoped="" ref="0x1075bd6a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x1075b7768" loc="69:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x1075b7768"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1075b7ab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x1075b5d68" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x1075b5d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x1075b40f0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x1075b4278"/>
        <function-ref name="led1On" scoped="" ref="0x1075b4400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x1075b4588"/>
        <function-ref name="led2Toggle" scoped="" ref="0x1075b4710"/>
        <function-ref name="get" scoped="" ref="0x1075b4898"/>
        <function-ref name="led1Off" scoped="" ref="0x1075b4a20"/>
        <function-ref name="led2Off" scoped="" ref="0x1075b31a8"/>
        <function-ref name="set" scoped="" ref="0x1075b4ba8"/>
        <function-ref name="led0On" scoped="" ref="0x1075b4d30"/>
        <function-ref name="led2On" scoped="" ref="0x1075b3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x1075ac8d8" loc="125:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x1075ac8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1075acc28"/>
        <function-ref name="runTask" scoped="" ref="0x1075acdb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1075916b0" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x1075916b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x107591a00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x107591b88"/>
        <function-ref name="request" scoped="" ref="0x107591d10"/>
        <function-ref name="granted" scoped="" ref="0x107590020"/>
        <function-ref name="isOwner" scoped="" ref="0x1075901a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x1075c0c18" loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x1075c0c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1075c9020"/>
        <function-ref name="write" scoped="" ref="0x1075c91a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x1075c02e0" loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x1075c02e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1075c0730"/>
        <function-ref name="write" scoped="" ref="0x1075c08b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x1075cae80" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x1075cae80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1075cd1f8"/>
        <function-ref name="disable" scoped="" ref="0x1075cd380"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x1075cd508"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x1075cd690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x1075b63c0" loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x1075b63c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1075b6710"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1075b6898"/>
        <function-ref name="request" scoped="" ref="0x1075b6a20"/>
        <function-ref name="granted" scoped="" ref="0x1075b6ba8"/>
        <function-ref name="isOwner" scoped="" ref="0x1075b6d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x1075b7e40" loc="70:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x1075b7e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1075b91c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10761e8e8" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10761e8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10761ec38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x1076682a0" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x1076682a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e87150"/>
            <typename><typedef-ref name="T32khz" ref="0x106e874a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10631d020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x107666918"/>
        <function-ref name="fired" scoped="" ref="0x107667980"/>
        <function-ref name="startAt" scoped="" ref="0x107666310"/>
        <function-ref name="isRunning" scoped="" ref="0x107667e08"/>
        <function-ref name="getAlarm" scoped="" ref="0x107666da0"/>
        <function-ref name="start" scoped="" ref="0x107667020"/>
        <function-ref name="stop" scoped="" ref="0x1076674f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x107663b78" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x107663b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10767a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x10767a4f8" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x10767a4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e87150"/>
            <typename><typedef-ref name="T32khz" ref="0x106e874a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10631d020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x107678c88"/>
        <function-ref name="fired" scoped="" ref="0x107679d08"/>
        <function-ref name="startAt" scoped="" ref="0x107678680"/>
        <function-ref name="isRunning" scoped="" ref="0x1076781f8"/>
        <function-ref name="getAlarm" scoped="" ref="0x107677150"/>
        <function-ref name="start" scoped="" ref="0x1076793a8"/>
        <function-ref name="stop" scoped="" ref="0x107679880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x108800d20" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x108800d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e87150"/>
            <typename><typedef-ref name="T32khz" ref="0x106e874a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10631d020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1087fd410"/>
        <function-ref name="fired" scoped="" ref="0x1087fe4a8"/>
        <function-ref name="startAt" scoped="" ref="0x1087fedb8"/>
        <function-ref name="isRunning" scoped="" ref="0x1087fe930"/>
        <function-ref name="getAlarm" scoped="" ref="0x1087fd898"/>
        <function-ref name="start" scoped="" ref="0x1087ffac0"/>
        <function-ref name="stop" scoped="" ref="0x1087fe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x108800538" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x108800538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x108800888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x1087f98a8" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x1087f98a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e87150"/>
            <typename><typedef-ref name="T32khz" ref="0x106e874a8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1087f5020"/>
        <function-ref name="fired" scoped="" ref="0x1087f7020"/>
        <function-ref name="startAt" scoped="" ref="0x1087f7930"/>
        <function-ref name="isRunning" scoped="" ref="0x1087f74a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x1087f54a8"/>
        <function-ref name="start" scoped="" ref="0x1087f8660"/>
        <function-ref name="stop" scoped="" ref="0x1087f8b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1087f90c0" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1087f90c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1087f9410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x1087e0020" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x1087e0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1087e0370"/>
        <function-ref name="setEvent" scoped="" ref="0x1087e04f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1087e0680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1087e0808"/>
        <function-ref name="fired" scoped="" ref="0x1087e0990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x1087e47d8" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x1087e47d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1087e4b28"/>
        <function-ref name="setClockSource" scoped="" ref="0x1087e4cb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x1087e4e38"/>
        <function-ref name="get" scoped="" ref="0x1087e3020"/>
        <function-ref name="disableEvents" scoped="" ref="0x1087e31a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1087e3330"/>
        <function-ref name="getMode" scoped="" ref="0x1087e34b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1087e3640"/>
        <function-ref name="overflow" scoped="" ref="0x1087e37c8"/>
        <function-ref name="setMode" scoped="" ref="0x1087e3950"/>
        <function-ref name="setInputDivider" scoped="" ref="0x1087e3ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x1087e3d60" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x1087e3d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1087e10d8"/>
        <function-ref name="getControl" scoped="" ref="0x1087e1260"/>
        <function-ref name="enableEvents" scoped="" ref="0x1087e13e8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1087e1570"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1087e16f8"/>
        <function-ref name="disableEvents" scoped="" ref="0x1087e1880"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1087e1a08"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1087e1b90"/>
        <function-ref name="setControl" scoped="" ref="0x1087e1d18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x1087d78c8" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x1087d78c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1087d7c18"/>
        <function-ref name="setEvent" scoped="" ref="0x1087d7da0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1087d6020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1087d61a8"/>
        <function-ref name="fired" scoped="" ref="0x1087d6330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x1087da020" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x1087da020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1087da370"/>
        <function-ref name="setClockSource" scoped="" ref="0x1087da4f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x1087da680"/>
        <function-ref name="get" scoped="" ref="0x1087da808"/>
        <function-ref name="disableEvents" scoped="" ref="0x1087da990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1087dab18"/>
        <function-ref name="getMode" scoped="" ref="0x1087daca0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1087dae28"/>
        <function-ref name="overflow" scoped="" ref="0x1087d9020"/>
        <function-ref name="setMode" scoped="" ref="0x1087d91a8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x1087d9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x1087dd020" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x1087dd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e87150"/>
            <typename><typedef-ref name="T32khz" ref="0x106e874a8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1087db690"/>
        <function-ref name="fired" scoped="" ref="0x1087dc6f8"/>
        <function-ref name="startAt" scoped="" ref="0x1087db088"/>
        <function-ref name="isRunning" scoped="" ref="0x1087dcb80"/>
        <function-ref name="getAlarm" scoped="" ref="0x1087dbb18"/>
        <function-ref name="start" scoped="" ref="0x1087ddd70"/>
        <function-ref name="stop" scoped="" ref="0x1087dc270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1087de7a8" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1087de7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1087deaf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x1087d95b8" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x1087d95b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1087d9908"/>
        <function-ref name="getControl" scoped="" ref="0x1087d9a90"/>
        <function-ref name="enableEvents" scoped="" ref="0x1087d9c18"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1087d9da0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1087d7020"/>
        <function-ref name="disableEvents" scoped="" ref="0x1087d71a8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1087d7330"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1087d74b8"/>
        <function-ref name="setControl" scoped="" ref="0x1087d7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x10764c520" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x10764c520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e87150"/>
            <typename><typedef-ref name="T32khz" ref="0x106e874a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10631d020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10764b3a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10764bcb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10764b830"/>
        <function-ref name="overflow" scoped="" ref="0x10764a190"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x107643060" loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x107643060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e87150"/>
            <typename><typedef-ref name="T32khz" ref="0x106e874a8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x107643db0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1076906f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x107690270"/>
        <function-ref name="overflow" scoped="" ref="0x107690b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x107648e40" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x107648e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e87150"/>
            <typename><typedef-ref name="T32khz" ref="0x106e874a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10631d020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x107646be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x107645548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1076450c0"/>
        <function-ref name="overflow" scoped="" ref="0x1076459d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x1087f3830" loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x1087f3830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e87150"/>
            <typename><typedef-ref name="T32khz" ref="0x106e874a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10631d020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1087f0020"/>
        <function-ref name="fired" scoped="" ref="0x1087f1020"/>
        <function-ref name="startAt" scoped="" ref="0x1087f1930"/>
        <function-ref name="isRunning" scoped="" ref="0x1087f14a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x1087f04a8"/>
        <function-ref name="start" scoped="" ref="0x1087f25e0"/>
        <function-ref name="stop" scoped="" ref="0x1087f2ab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x1087edce8" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x1087edce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e87150"/>
            <typename><typedef-ref name="T32khz" ref="0x106e874a8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1087ea410"/>
        <function-ref name="fired" scoped="" ref="0x1087eb4a8"/>
        <function-ref name="startAt" scoped="" ref="0x1087ebdb8"/>
        <function-ref name="isRunning" scoped="" ref="0x1087eb930"/>
        <function-ref name="getAlarm" scoped="" ref="0x1087ea898"/>
        <function-ref name="start" scoped="" ref="0x1087ecac0"/>
        <function-ref name="stop" scoped="" ref="0x1087eb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x1087f0ad0" loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x1087f0ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e87150"/>
            <typename><typedef-ref name="T32khz" ref="0x106e874a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10631d020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1087ee860"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1087ed1f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1087eece8"/>
        <function-ref name="overflow" scoped="" ref="0x1087ed680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x107672378" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x107672378"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1076726c8"/>
        <function-ref name="isInput" scoped="" ref="0x107672850"/>
        <function-ref name="toggle" scoped="" ref="0x1076729d8"/>
        <function-ref name="isOutput" scoped="" ref="0x107672b60"/>
        <function-ref name="get" scoped="" ref="0x107672ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x107672e70"/>
        <function-ref name="set" scoped="" ref="0x107671020"/>
        <function-ref name="clr" scoped="" ref="0x1076711a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x107671508" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x107671508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x107671858"/>
        <function-ref name="isInput" scoped="" ref="0x1076719e0"/>
        <function-ref name="toggle" scoped="" ref="0x107671b68"/>
        <function-ref name="isOutput" scoped="" ref="0x107671cf0"/>
        <function-ref name="get" scoped="" ref="0x107671e78"/>
        <function-ref name="makeOutput" scoped="" ref="0x107670030"/>
        <function-ref name="set" scoped="" ref="0x1076701b8"/>
        <function-ref name="clr" scoped="" ref="0x107670340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x107670698" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x107670698"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1076709e8"/>
        <function-ref name="isInput" scoped="" ref="0x107670b70"/>
        <function-ref name="toggle" scoped="" ref="0x107670cf8"/>
        <function-ref name="isOutput" scoped="" ref="0x107670e80"/>
        <function-ref name="get" scoped="" ref="0x10766e030"/>
        <function-ref name="makeOutput" scoped="" ref="0x10766e1b8"/>
        <function-ref name="set" scoped="" ref="0x10766e340"/>
        <function-ref name="clr" scoped="" ref="0x10766e4c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x1076731a0" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x1076731a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1076734f0"/>
        <function-ref name="isInput" scoped="" ref="0x107673678"/>
        <function-ref name="toggle" scoped="" ref="0x107673800"/>
        <function-ref name="isOutput" scoped="" ref="0x107673988"/>
        <function-ref name="get" scoped="" ref="0x107673b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x107673c98"/>
        <function-ref name="set" scoped="" ref="0x107673e20"/>
        <function-ref name="clr" scoped="" ref="0x107672020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x10766d998" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x10766d998"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10766dce8"/>
        <function-ref name="isInput" scoped="" ref="0x10766de70"/>
        <function-ref name="toggle" scoped="" ref="0x10766c020"/>
        <function-ref name="isOutput" scoped="" ref="0x10766c1a8"/>
        <function-ref name="get" scoped="" ref="0x10766c330"/>
        <function-ref name="makeOutput" scoped="" ref="0x10766c4b8"/>
        <function-ref name="set" scoped="" ref="0x10766c640"/>
        <function-ref name="clr" scoped="" ref="0x10766c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x107674020" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x107674020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x107674370"/>
        <function-ref name="isInput" scoped="" ref="0x1076744f8"/>
        <function-ref name="toggle" scoped="" ref="0x107674680"/>
        <function-ref name="isOutput" scoped="" ref="0x107674808"/>
        <function-ref name="get" scoped="" ref="0x107674990"/>
        <function-ref name="makeOutput" scoped="" ref="0x107674b18"/>
        <function-ref name="set" scoped="" ref="0x107674ca0"/>
        <function-ref name="clr" scoped="" ref="0x107674e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x10766e810" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x10766e810"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10766eb60"/>
        <function-ref name="isInput" scoped="" ref="0x10766ece8"/>
        <function-ref name="toggle" scoped="" ref="0x10766ee70"/>
        <function-ref name="isOutput" scoped="" ref="0x10766d020"/>
        <function-ref name="get" scoped="" ref="0x10766d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10766d330"/>
        <function-ref name="set" scoped="" ref="0x10766d4b8"/>
        <function-ref name="clr" scoped="" ref="0x10766d640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x10766ac18" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x10766ac18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1076b8020"/>
        <function-ref name="isInput" scoped="" ref="0x1076b81a8"/>
        <function-ref name="setResistor" scoped="" ref="0x1076b8330"/>
        <function-ref name="toggle" scoped="" ref="0x1076b84b8"/>
        <function-ref name="isOutput" scoped="" ref="0x1076b8640"/>
        <function-ref name="getResistor" scoped="" ref="0x1076b87c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1076b8950"/>
        <function-ref name="get" scoped="" ref="0x1076b8ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1076b8c60"/>
        <function-ref name="getRaw" scoped="" ref="0x1076b8de8"/>
        <function-ref name="set" scoped="" ref="0x1076b7020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1076b71a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1076b7330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1076b75b8"/>
        <function-ref name="clr" scoped="" ref="0x1076b7740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x10766bad0" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x10766bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10766be20"/>
        <function-ref name="isInput" scoped="" ref="0x10766a020"/>
        <function-ref name="toggle" scoped="" ref="0x10766a1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x10766a330"/>
        <function-ref name="get" scoped="" ref="0x10766a4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10766a640"/>
        <function-ref name="set" scoped="" ref="0x10766a7c8"/>
        <function-ref name="clr" scoped="" ref="0x10766a950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x1076b4470" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x1076b4470"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1076b47c0"/>
        <function-ref name="isInput" scoped="" ref="0x1076b4948"/>
        <function-ref name="setResistor" scoped="" ref="0x1076b4ad0"/>
        <function-ref name="toggle" scoped="" ref="0x1076b4c58"/>
        <function-ref name="isOutput" scoped="" ref="0x1076b4de0"/>
        <function-ref name="getResistor" scoped="" ref="0x1076b3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1076b31a8"/>
        <function-ref name="get" scoped="" ref="0x1076b3330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1076b34b8"/>
        <function-ref name="getRaw" scoped="" ref="0x1076b3640"/>
        <function-ref name="set" scoped="" ref="0x1076b37c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1076b3950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1076b3ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1076b3d60"/>
        <function-ref name="clr" scoped="" ref="0x1076b2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x1076b5280" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x1076b5280"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1076b55d0"/>
        <function-ref name="isInput" scoped="" ref="0x1076b5758"/>
        <function-ref name="toggle" scoped="" ref="0x1076b58e0"/>
        <function-ref name="isOutput" scoped="" ref="0x1076b5a68"/>
        <function-ref name="get" scoped="" ref="0x1076b5bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1076b5d78"/>
        <function-ref name="set" scoped="" ref="0x1076b4020"/>
        <function-ref name="clr" scoped="" ref="0x1076b41a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x1076b0c18" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x1076b0c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1076af020"/>
        <function-ref name="isInput" scoped="" ref="0x1076af1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x1076af330"/>
        <function-ref name="toggle" scoped="" ref="0x1076af4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x1076af640"/>
        <function-ref name="getResistor" scoped="" ref="0x1076af7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1076af950"/>
        <function-ref name="get" scoped="" ref="0x1076afad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1076afc60"/>
        <function-ref name="getRaw" scoped="" ref="0x1076afde8"/>
        <function-ref name="set" scoped="" ref="0x1076ae020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1076ae1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1076ae330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1076ae5b8"/>
        <function-ref name="clr" scoped="" ref="0x1076ae740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x1076b1b18" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x1076b1b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1076b1e68"/>
        <function-ref name="isInput" scoped="" ref="0x1076b0020"/>
        <function-ref name="toggle" scoped="" ref="0x1076b01a8"/>
        <function-ref name="isOutput" scoped="" ref="0x1076b0330"/>
        <function-ref name="get" scoped="" ref="0x1076b04b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1076b0640"/>
        <function-ref name="set" scoped="" ref="0x1076b07c8"/>
        <function-ref name="clr" scoped="" ref="0x1076b0950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x1076ab470" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x1076ab470"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1076ab7c0"/>
        <function-ref name="isInput" scoped="" ref="0x1076ab948"/>
        <function-ref name="setResistor" scoped="" ref="0x1076abad0"/>
        <function-ref name="toggle" scoped="" ref="0x1076abc58"/>
        <function-ref name="isOutput" scoped="" ref="0x1076abde0"/>
        <function-ref name="getResistor" scoped="" ref="0x1076a9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1076a91a8"/>
        <function-ref name="get" scoped="" ref="0x1076a9330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1076a94b8"/>
        <function-ref name="getRaw" scoped="" ref="0x1076a9640"/>
        <function-ref name="set" scoped="" ref="0x1076a97c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1076a9950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1076a9ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1076a9d60"/>
        <function-ref name="clr" scoped="" ref="0x1076a8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x1076ac280" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x1076ac280"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1076ac5d0"/>
        <function-ref name="isInput" scoped="" ref="0x1076ac758"/>
        <function-ref name="toggle" scoped="" ref="0x1076ac8e0"/>
        <function-ref name="isOutput" scoped="" ref="0x1076aca68"/>
        <function-ref name="get" scoped="" ref="0x1076acbf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1076acd78"/>
        <function-ref name="set" scoped="" ref="0x1076ab020"/>
        <function-ref name="clr" scoped="" ref="0x1076ab1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x1076a6c18" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x1076a6c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1076a5020"/>
        <function-ref name="isInput" scoped="" ref="0x1076a51a8"/>
        <function-ref name="setResistor" scoped="" ref="0x1076a5330"/>
        <function-ref name="toggle" scoped="" ref="0x1076a54b8"/>
        <function-ref name="isOutput" scoped="" ref="0x1076a5640"/>
        <function-ref name="getResistor" scoped="" ref="0x1076a57c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1076a5950"/>
        <function-ref name="get" scoped="" ref="0x1076a5ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1076a5c60"/>
        <function-ref name="getRaw" scoped="" ref="0x1076a5de8"/>
        <function-ref name="set" scoped="" ref="0x1076a4020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1076a41a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1076a4330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1076a45b8"/>
        <function-ref name="clr" scoped="" ref="0x1076a4740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x1076a7b18" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x1076a7b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1076a7e68"/>
        <function-ref name="isInput" scoped="" ref="0x1076a6020"/>
        <function-ref name="toggle" scoped="" ref="0x1076a61a8"/>
        <function-ref name="isOutput" scoped="" ref="0x1076a6330"/>
        <function-ref name="get" scoped="" ref="0x1076a64b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1076a6640"/>
        <function-ref name="set" scoped="" ref="0x1076a67c8"/>
        <function-ref name="clr" scoped="" ref="0x1076a6950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x1076a1470" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x1076a1470"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1076a17c0"/>
        <function-ref name="isInput" scoped="" ref="0x1076a1948"/>
        <function-ref name="setResistor" scoped="" ref="0x1076a1ad0"/>
        <function-ref name="toggle" scoped="" ref="0x1076a1c58"/>
        <function-ref name="isOutput" scoped="" ref="0x1076a1de0"/>
        <function-ref name="getResistor" scoped="" ref="0x1076a0020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1076a01a8"/>
        <function-ref name="get" scoped="" ref="0x1076a0330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1076a04b8"/>
        <function-ref name="getRaw" scoped="" ref="0x1076a0640"/>
        <function-ref name="set" scoped="" ref="0x1076a07c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1076a0950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1076a0ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1076a0d60"/>
        <function-ref name="clr" scoped="" ref="0x10769f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x1076a2280" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x1076a2280"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1076a25d0"/>
        <function-ref name="isInput" scoped="" ref="0x1076a2758"/>
        <function-ref name="toggle" scoped="" ref="0x1076a28e0"/>
        <function-ref name="isOutput" scoped="" ref="0x1076a2a68"/>
        <function-ref name="get" scoped="" ref="0x1076a2bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1076a2d78"/>
        <function-ref name="set" scoped="" ref="0x1076a1020"/>
        <function-ref name="clr" scoped="" ref="0x1076a11a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x10769dc18" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x10769dc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10769c020"/>
        <function-ref name="isInput" scoped="" ref="0x10769c1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x10769c330"/>
        <function-ref name="toggle" scoped="" ref="0x10769c4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x10769c640"/>
        <function-ref name="getResistor" scoped="" ref="0x10769c7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10769c950"/>
        <function-ref name="get" scoped="" ref="0x10769cad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10769cc60"/>
        <function-ref name="getRaw" scoped="" ref="0x10769cde8"/>
        <function-ref name="set" scoped="" ref="0x10769b020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10769b1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10769b330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10769b5b8"/>
        <function-ref name="clr" scoped="" ref="0x10769b740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x10769eb18" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x10769eb18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10769ee68"/>
        <function-ref name="isInput" scoped="" ref="0x10769d020"/>
        <function-ref name="toggle" scoped="" ref="0x10769d1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x10769d330"/>
        <function-ref name="get" scoped="" ref="0x10769d4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10769d640"/>
        <function-ref name="set" scoped="" ref="0x10769d7c8"/>
        <function-ref name="clr" scoped="" ref="0x10769d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x1076d7518" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x1076d7518"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x1076d7868"/>
        <function-ref name="disable" scoped="" ref="0x1076d79f0"/>
        <function-ref name="captured" scoped="" ref="0x1076d7b78"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x1076d7d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x1076db140" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x1076db140"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1076db490"/>
        <function-ref name="disable" scoped="" ref="0x1076db618"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x1076db7a0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x1076db928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x1076dbd08" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x1076dbd08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1076da0a0"/>
        <function-ref name="disable" scoped="" ref="0x1076da228"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x1076da3b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x1076da538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x1076c2020" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x1076c2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1076c2370"/>
        <function-ref name="setSynchronous" scoped="" ref="0x1076c24f8"/>
        <function-ref name="captured" scoped="" ref="0x1076c2680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1076c2808"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1076c2990"/>
        <function-ref name="setEdge" scoped="" ref="0x1076c2b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x1076d4100" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x1076d4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x1076d4450"/>
        <function-ref name="disable" scoped="" ref="0x1076d45d8"/>
        <function-ref name="captured" scoped="" ref="0x1076d4760"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x1076d48e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x1076d4b70" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x1076d4b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1076c3020"/>
        <function-ref name="getControl" scoped="" ref="0x1076c31a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x1076c3330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1076c34b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1076c3640"/>
        <function-ref name="disableEvents" scoped="" ref="0x1076c37c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1076c3950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1076c3ad8"/>
        <function-ref name="setControl" scoped="" ref="0x1076c3c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x1076c2de0" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x1076c2de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1076c0170"/>
        <function-ref name="isInput" scoped="" ref="0x1076c02f8"/>
        <function-ref name="setResistor" scoped="" ref="0x1076c0480"/>
        <function-ref name="toggle" scoped="" ref="0x1076c0608"/>
        <function-ref name="isOutput" scoped="" ref="0x1076c0790"/>
        <function-ref name="getResistor" scoped="" ref="0x1076c0918"/>
        <function-ref name="makeOutput" scoped="" ref="0x1076c0aa0"/>
        <function-ref name="get" scoped="" ref="0x1076c0c28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1076c0db0"/>
        <function-ref name="getRaw" scoped="" ref="0x1076bf020"/>
        <function-ref name="set" scoped="" ref="0x1076bf1a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1076bf330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1076bf4b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1076bf740"/>
        <function-ref name="clr" scoped="" ref="0x1076bf8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x107702878" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x107702878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x107702bc8"/>
        <function-ref name="fired" scoped="" ref="0x107702d50"/>
        <function-ref name="disable" scoped="" ref="0x107701020"/>
        <function-ref name="edge" scoped="" ref="0x1077011a8"/>
        <function-ref name="enable" scoped="" ref="0x107701330"/>
        <function-ref name="getValue" scoped="" ref="0x1077014b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x1076f8878" loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x1076f8878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1076f8bc8"/>
        <function-ref name="fired" scoped="" ref="0x1076f8d50"/>
        <function-ref name="disable" scoped="" ref="0x1076f7020"/>
        <function-ref name="edge" scoped="" ref="0x1076f71a8"/>
        <function-ref name="enable" scoped="" ref="0x1076f7330"/>
        <function-ref name="getValue" scoped="" ref="0x1076f74b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x1076ff878" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x1076ff878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1076ffbc8"/>
        <function-ref name="fired" scoped="" ref="0x1076ffd50"/>
        <function-ref name="disable" scoped="" ref="0x1076fe020"/>
        <function-ref name="edge" scoped="" ref="0x1076fe1a8"/>
        <function-ref name="enable" scoped="" ref="0x1076fe330"/>
        <function-ref name="getValue" scoped="" ref="0x1076fe4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x1076fd878" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x1076fd878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1076fdbc8"/>
        <function-ref name="fired" scoped="" ref="0x1076fdd50"/>
        <function-ref name="disable" scoped="" ref="0x1076fc020"/>
        <function-ref name="edge" scoped="" ref="0x1076fc1a8"/>
        <function-ref name="enable" scoped="" ref="0x1076fc330"/>
        <function-ref name="getValue" scoped="" ref="0x1076fc4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x107704878" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x107704878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x107704bc8"/>
        <function-ref name="fired" scoped="" ref="0x107704d50"/>
        <function-ref name="disable" scoped="" ref="0x107703020"/>
        <function-ref name="edge" scoped="" ref="0x1077031a8"/>
        <function-ref name="enable" scoped="" ref="0x107703330"/>
        <function-ref name="getValue" scoped="" ref="0x1077034b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x1076fa878" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x1076fa878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1076facc8"/>
        <function-ref name="fired" scoped="" ref="0x1076fae50"/>
        <function-ref name="disable" scoped="" ref="0x1076f9020"/>
        <function-ref name="edge" scoped="" ref="0x1076f91a8"/>
        <function-ref name="enable" scoped="" ref="0x1076f9330"/>
        <function-ref name="getValue" scoped="" ref="0x1076f94b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x107701878" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x107701878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x107701bc8"/>
        <function-ref name="fired" scoped="" ref="0x107701d50"/>
        <function-ref name="disable" scoped="" ref="0x107700020"/>
        <function-ref name="edge" scoped="" ref="0x1077001a8"/>
        <function-ref name="enable" scoped="" ref="0x107700330"/>
        <function-ref name="getValue" scoped="" ref="0x1077004b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x1076f7878" loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x1076f7878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1076f7bc8"/>
        <function-ref name="fired" scoped="" ref="0x1076f7d50"/>
        <function-ref name="disable" scoped="" ref="0x1076f6020"/>
        <function-ref name="edge" scoped="" ref="0x1076f61a8"/>
        <function-ref name="enable" scoped="" ref="0x1076f6330"/>
        <function-ref name="getValue" scoped="" ref="0x1076f64b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x1077058e0" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x1077058e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x107705c30"/>
        <function-ref name="fired" scoped="" ref="0x107705db8"/>
        <function-ref name="disable" scoped="" ref="0x107709020"/>
        <function-ref name="edge" scoped="" ref="0x1077091a8"/>
        <function-ref name="enable" scoped="" ref="0x107709330"/>
        <function-ref name="getValue" scoped="" ref="0x1077094b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x1076fc878" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x1076fc878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1076fcbc8"/>
        <function-ref name="fired" scoped="" ref="0x1076fcd50"/>
        <function-ref name="disable" scoped="" ref="0x1076fb020"/>
        <function-ref name="edge" scoped="" ref="0x1076fb1a8"/>
        <function-ref name="enable" scoped="" ref="0x1076fb330"/>
        <function-ref name="getValue" scoped="" ref="0x1076fb4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x107703878" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x107703878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x107703bc8"/>
        <function-ref name="fired" scoped="" ref="0x107703d50"/>
        <function-ref name="disable" scoped="" ref="0x107702020"/>
        <function-ref name="edge" scoped="" ref="0x1077021a8"/>
        <function-ref name="enable" scoped="" ref="0x107702330"/>
        <function-ref name="getValue" scoped="" ref="0x1077024b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x1076f9878" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x1076f9878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1076f9bc8"/>
        <function-ref name="fired" scoped="" ref="0x1076f9d50"/>
        <function-ref name="disable" scoped="" ref="0x1076f8020"/>
        <function-ref name="edge" scoped="" ref="0x1076f81a8"/>
        <function-ref name="enable" scoped="" ref="0x1076f8330"/>
        <function-ref name="getValue" scoped="" ref="0x1076f84b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x107700878" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x107700878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x107700bc8"/>
        <function-ref name="fired" scoped="" ref="0x107700d50"/>
        <function-ref name="disable" scoped="" ref="0x1076ff020"/>
        <function-ref name="edge" scoped="" ref="0x1076ff1a8"/>
        <function-ref name="enable" scoped="" ref="0x1076ff330"/>
        <function-ref name="getValue" scoped="" ref="0x1076ff4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x1076fe878" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x1076fe878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1076febc8"/>
        <function-ref name="fired" scoped="" ref="0x1076fed50"/>
        <function-ref name="disable" scoped="" ref="0x1076fd020"/>
        <function-ref name="edge" scoped="" ref="0x1076fd1a8"/>
        <function-ref name="enable" scoped="" ref="0x1076fd330"/>
        <function-ref name="getValue" scoped="" ref="0x1076fd4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x107709878" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x107709878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x107709bc8"/>
        <function-ref name="fired" scoped="" ref="0x107709d50"/>
        <function-ref name="disable" scoped="" ref="0x107704020"/>
        <function-ref name="edge" scoped="" ref="0x1077041a8"/>
        <function-ref name="enable" scoped="" ref="0x107704330"/>
        <function-ref name="getValue" scoped="" ref="0x1077044b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x1076fb878" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x1076fb878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1076fbbc8"/>
        <function-ref name="fired" scoped="" ref="0x1076fbd50"/>
        <function-ref name="disable" scoped="" ref="0x1076fa020"/>
        <function-ref name="edge" scoped="" ref="0x1076fa1a8"/>
        <function-ref name="enable" scoped="" ref="0x1076fa330"/>
        <function-ref name="getValue" scoped="" ref="0x1076fa4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x1076ef568" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x1076ef568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1076ef8b8"/>
        <function-ref name="fired" scoped="" ref="0x1076efa40"/>
        <function-ref name="disable" scoped="" ref="0x1076efbc8"/>
        <function-ref name="edge" scoped="" ref="0x1076efd50"/>
        <function-ref name="enable" scoped="" ref="0x1076ee020"/>
        <function-ref name="getValue" scoped="" ref="0x1076ee1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x1076e4568" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x1076e4568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1076e48b8"/>
        <function-ref name="fired" scoped="" ref="0x1076e4a40"/>
        <function-ref name="disable" scoped="" ref="0x1076e4bc8"/>
        <function-ref name="edge" scoped="" ref="0x1076e4d50"/>
        <function-ref name="enable" scoped="" ref="0x1076e3020"/>
        <function-ref name="getValue" scoped="" ref="0x1076e31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x1076ec568" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x1076ec568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1076ec8b8"/>
        <function-ref name="fired" scoped="" ref="0x1076eca40"/>
        <function-ref name="disable" scoped="" ref="0x1076ecbc8"/>
        <function-ref name="edge" scoped="" ref="0x1076ecd50"/>
        <function-ref name="enable" scoped="" ref="0x1076ea020"/>
        <function-ref name="getValue" scoped="" ref="0x1076ea1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x1076e9568" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x1076e9568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1076e98b8"/>
        <function-ref name="fired" scoped="" ref="0x1076e9a40"/>
        <function-ref name="disable" scoped="" ref="0x1076e9bc8"/>
        <function-ref name="edge" scoped="" ref="0x1076e9d50"/>
        <function-ref name="enable" scoped="" ref="0x1076e8020"/>
        <function-ref name="getValue" scoped="" ref="0x1076e81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x1076f1568" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x1076f1568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1076f18b8"/>
        <function-ref name="fired" scoped="" ref="0x1076f1a40"/>
        <function-ref name="disable" scoped="" ref="0x1076f1bc8"/>
        <function-ref name="edge" scoped="" ref="0x1076f1d50"/>
        <function-ref name="enable" scoped="" ref="0x1076f0020"/>
        <function-ref name="getValue" scoped="" ref="0x1076f01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x1076e6568" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x1076e6568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1076e69b8"/>
        <function-ref name="fired" scoped="" ref="0x1076e6b40"/>
        <function-ref name="disable" scoped="" ref="0x1076e6cc8"/>
        <function-ref name="edge" scoped="" ref="0x1076e6e50"/>
        <function-ref name="enable" scoped="" ref="0x1076e5020"/>
        <function-ref name="getValue" scoped="" ref="0x1076e51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x1076ee568" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x1076ee568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1076ee8b8"/>
        <function-ref name="fired" scoped="" ref="0x1076eea40"/>
        <function-ref name="disable" scoped="" ref="0x1076eebc8"/>
        <function-ref name="edge" scoped="" ref="0x1076eed50"/>
        <function-ref name="enable" scoped="" ref="0x1076ed020"/>
        <function-ref name="getValue" scoped="" ref="0x1076ed1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x1076e3568" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x1076e3568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1076e38b8"/>
        <function-ref name="fired" scoped="" ref="0x1076e3a40"/>
        <function-ref name="disable" scoped="" ref="0x1076e3bc8"/>
        <function-ref name="edge" scoped="" ref="0x1076e3d50"/>
        <function-ref name="enable" scoped="" ref="0x107733020"/>
        <function-ref name="getValue" scoped="" ref="0x1077331a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x1076f35c8" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x1076f35c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1076f3918"/>
        <function-ref name="fired" scoped="" ref="0x1076f3aa0"/>
        <function-ref name="disable" scoped="" ref="0x1076f3c28"/>
        <function-ref name="edge" scoped="" ref="0x1076f3db0"/>
        <function-ref name="enable" scoped="" ref="0x1076f2020"/>
        <function-ref name="getValue" scoped="" ref="0x1076f21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x1076e8568" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x1076e8568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1076e88b8"/>
        <function-ref name="fired" scoped="" ref="0x1076e8a40"/>
        <function-ref name="disable" scoped="" ref="0x1076e8bc8"/>
        <function-ref name="edge" scoped="" ref="0x1076e8d50"/>
        <function-ref name="enable" scoped="" ref="0x1076e7020"/>
        <function-ref name="getValue" scoped="" ref="0x1076e71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x1076f0568" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x1076f0568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1076f08b8"/>
        <function-ref name="fired" scoped="" ref="0x1076f0a40"/>
        <function-ref name="disable" scoped="" ref="0x1076f0bc8"/>
        <function-ref name="edge" scoped="" ref="0x1076f0d50"/>
        <function-ref name="enable" scoped="" ref="0x1076ef020"/>
        <function-ref name="getValue" scoped="" ref="0x1076ef1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x1076e5568" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x1076e5568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1076e58b8"/>
        <function-ref name="fired" scoped="" ref="0x1076e5a40"/>
        <function-ref name="disable" scoped="" ref="0x1076e5bc8"/>
        <function-ref name="edge" scoped="" ref="0x1076e5d50"/>
        <function-ref name="enable" scoped="" ref="0x1076e4020"/>
        <function-ref name="getValue" scoped="" ref="0x1076e41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x1076ed568" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x1076ed568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1076ed8b8"/>
        <function-ref name="fired" scoped="" ref="0x1076eda40"/>
        <function-ref name="disable" scoped="" ref="0x1076edbc8"/>
        <function-ref name="edge" scoped="" ref="0x1076edd50"/>
        <function-ref name="enable" scoped="" ref="0x1076ec020"/>
        <function-ref name="getValue" scoped="" ref="0x1076ec1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x1076ea568" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x1076ea568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1076ea8b8"/>
        <function-ref name="fired" scoped="" ref="0x1076eaa40"/>
        <function-ref name="disable" scoped="" ref="0x1076eabc8"/>
        <function-ref name="edge" scoped="" ref="0x1076ead50"/>
        <function-ref name="enable" scoped="" ref="0x1076e9020"/>
        <function-ref name="getValue" scoped="" ref="0x1076e91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x1076f2568" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x1076f2568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1076f28b8"/>
        <function-ref name="fired" scoped="" ref="0x1076f2a40"/>
        <function-ref name="disable" scoped="" ref="0x1076f2bc8"/>
        <function-ref name="edge" scoped="" ref="0x1076f2d50"/>
        <function-ref name="enable" scoped="" ref="0x1076f1020"/>
        <function-ref name="getValue" scoped="" ref="0x1076f11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x1076e7568" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x1076e7568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1076e78b8"/>
        <function-ref name="fired" scoped="" ref="0x1076e7a40"/>
        <function-ref name="disable" scoped="" ref="0x1076e7bc8"/>
        <function-ref name="edge" scoped="" ref="0x1076e7d50"/>
        <function-ref name="enable" scoped="" ref="0x1076e6020"/>
        <function-ref name="getValue" scoped="" ref="0x1076e61a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x1077b4780" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x1077b4780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1077b4ad0"/>
        <function-ref name="fired" scoped="" ref="0x1077b4c58"/>
        <function-ref name="disable" scoped="" ref="0x1077b4de0"/>
        <function-ref name="edge" scoped="" ref="0x1077fa020"/>
        <function-ref name="enable" scoped="" ref="0x1077fa1a8"/>
        <function-ref name="getValue" scoped="" ref="0x1077fa330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x1077b5b58" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x1077b5b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1077b4020"/>
        <function-ref name="disable" scoped="" ref="0x1077b41a8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x1077b4330"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x1077b44b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x1077f85f8" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x1077f85f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1077f8948"/>
        <function-ref name="fired" scoped="" ref="0x1077f8ad0"/>
        <function-ref name="disable" scoped="" ref="0x1077f8c58"/>
        <function-ref name="edge" scoped="" ref="0x1077f8de0"/>
        <function-ref name="enable" scoped="" ref="0x1077f7020"/>
        <function-ref name="getValue" scoped="" ref="0x1077f71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x1077f9a78" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x1077f9a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1077f9dc8"/>
        <function-ref name="disable" scoped="" ref="0x1077f8020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x1077f81a8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x1077f8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x107b33470" loc="69:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x107b33470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b339c0"/>
        <function-ref name="write" scoped="" ref="0x107b33b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x107b3e9b8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x107b3e9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107b3ed08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x107b36470" loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x107b36470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b367c0"/>
        <function-ref name="write" scoped="" ref="0x107b36948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x107b32d98" loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x107b32d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b30170"/>
        <function-ref name="write" scoped="" ref="0x107b302f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x107b29470" loc="86:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x107b29470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b297c0"/>
        <function-ref name="write" scoped="" ref="0x107b29948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x107b305c0" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x107b305c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b30910"/>
        <function-ref name="write" scoped="" ref="0x107b30a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x107b1e7c0" loc="108:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x107b1e7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b1eb10"/>
        <function-ref name="write" scoped="" ref="0x107b1ec98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x107b207c0" loc="104:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x107b207c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b20b10"/>
        <function-ref name="write" scoped="" ref="0x107b20c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x107b3cc50" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x107b3cc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107b3b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x107b26c10" loc="93:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x107b26c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b25020"/>
        <function-ref name="write" scoped="" ref="0x107b251a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x107b217c0" loc="102:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x107b217c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b21b10"/>
        <function-ref name="write" scoped="" ref="0x107b21c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x107b35470" loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x107b35470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b357c0"/>
        <function-ref name="write" scoped="" ref="0x107b35948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x107b34470" loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x107b34470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b347c0"/>
        <function-ref name="write" scoped="" ref="0x107b34948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x107b2cc10" loc="83:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x107b2cc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b2b020"/>
        <function-ref name="write" scoped="" ref="0x107b2b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x107b2d470" loc="79:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x107b2d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b2d7c0"/>
        <function-ref name="write" scoped="" ref="0x107b2d948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x107b30d60" loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x107b30d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b2f0d8"/>
        <function-ref name="write" scoped="" ref="0x107b2f260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x107b3f430" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x107b3f430"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x107b3f780"/>
        <function-ref name="abortRelease" scoped="" ref="0x107b3f908"/>
        <function-ref name="attemptRelease" scoped="" ref="0x107b3fa90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x107b3a638" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x107b3a638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107b3a988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x107b3ac50" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x107b3ac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107b390d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x107b24060" loc="95:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x107b24060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b243b0"/>
        <function-ref name="write" scoped="" ref="0x107b24538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x107b393a0" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x107b393a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107b396f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x107b20020" loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x107b20020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b20370"/>
        <function-ref name="write" scoped="" ref="0x107b204f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x107b3b900" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x107b3b900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107b3bc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x107b26470" loc="92:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x107b26470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b267c0"/>
        <function-ref name="write" scoped="" ref="0x107b26948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x107b35c10" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x107b35c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b34020"/>
        <function-ref name="write" scoped="" ref="0x107b341a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x107b36c10" loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x107b36c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b35020"/>
        <function-ref name="write" scoped="" ref="0x107b351a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x107b3e3a0" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x107b3e3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107b3e6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x107b27470" loc="90:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x107b27470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b277c0"/>
        <function-ref name="write" scoped="" ref="0x107b27948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x107b29c10" loc="87:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x107b29c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b28020"/>
        <function-ref name="write" scoped="" ref="0x107b281a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x107b27c10" loc="91:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x107b27c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b26020"/>
        <function-ref name="write" scoped="" ref="0x107b261a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x107b1e020" loc="107:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x107b1e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b1e370"/>
        <function-ref name="write" scoped="" ref="0x107b1e4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x107b1f020" loc="105:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x107b1f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b1f370"/>
        <function-ref name="write" scoped="" ref="0x107b1f4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x107b2dc10" loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x107b2dc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b2c020"/>
        <function-ref name="write" scoped="" ref="0x107b2c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x107b28470" loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x107b28470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b287c0"/>
        <function-ref name="write" scoped="" ref="0x107b28948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x107b21020" loc="101:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x107b21020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b21370"/>
        <function-ref name="write" scoped="" ref="0x107b214f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x107b2fcc8" loc="76:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x107b2fcc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b2e0a0"/>
        <function-ref name="write" scoped="" ref="0x107b2e228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x107b1d020" loc="111:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x107b1d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x107b1d370"/>
        <function-ref name="writeDone" scoped="" ref="0x107b1d4f8"/>
        <function-ref name="write" scoped="" ref="0x107b1d680"/>
        <function-ref name="beginRead" scoped="" ref="0x107b1d808"/>
        <function-ref name="readDone" scoped="" ref="0x107b1d990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x107b3fd58" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x107b3fd58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107b3e0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x107b38c50" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x107b38c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b36020"/>
        <function-ref name="write" scoped="" ref="0x107b361a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x107b34c10" loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x107b34c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b33020"/>
        <function-ref name="write" scoped="" ref="0x107b331a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x107b2b470" loc="84:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x107b2b470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b2b7c0"/>
        <function-ref name="write" scoped="" ref="0x107b2b948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x107b2f528" loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x107b2f528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b2f878"/>
        <function-ref name="write" scoped="" ref="0x107b2fa00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x107b2bc10" loc="85:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x107b2bc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b29020"/>
        <function-ref name="write" scoped="" ref="0x107b291a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x107b33e10" loc="70:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x107b33e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b321a8"/>
        <function-ref name="write" scoped="" ref="0x107b32330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x107b3c020" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x107b3c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107b3c370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x107b325f8" loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x107b325f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b32948"/>
        <function-ref name="write" scoped="" ref="0x107b32ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x107add7d0" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x107add7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x107addb20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x107addca8"/>
        <function-ref name="request" scoped="" ref="0x107adde30"/>
        <function-ref name="granted" scoped="" ref="0x107b3f020"/>
        <function-ref name="isOwner" scoped="" ref="0x107b3f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x107b399b8" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x107b399b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107b39d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x107b38638" loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x107b38638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107b38988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x107b227c0" loc="100:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x107b227c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b22b10"/>
        <function-ref name="write" scoped="" ref="0x107b22c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x107b22020" loc="99:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x107b22020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b22370"/>
        <function-ref name="write" scoped="" ref="0x107b224f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x107b3a020" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x107b3a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107b3a370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x107b24800" loc="96:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x107b24800"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b24b50"/>
        <function-ref name="write" scoped="" ref="0x107b24cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x107b1f7c0" loc="106:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x107b1f7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b1fb10"/>
        <function-ref name="write" scoped="" ref="0x107b1fc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x107b2c470" loc="81:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x107b2c470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b2c7c0"/>
        <function-ref name="write" scoped="" ref="0x107b2c948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x107b28c10" loc="89:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x107b28c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b27020"/>
        <function-ref name="write" scoped="" ref="0x107b271a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x107b3c638" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x107b3c638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107b3c988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x107b3b2e8" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x107b3b2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107b3b638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x107b2e4f0" loc="77:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x107b2e4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b2e840"/>
        <function-ref name="write" scoped="" ref="0x107b2e9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x107b38020" loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x107b38020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107b38370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x107b2ec90" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x107b2ec90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b2d020"/>
        <function-ref name="write" scoped="" ref="0x107b2d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x107b25470" loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x107b25470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b25bc0"/>
        <function-ref name="write" scoped="" ref="0x107b25d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x107b1dc58" loc="112:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x107b1dc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x107b1b020"/>
        <function-ref name="writeDone" scoped="" ref="0x107b1b1a8"/>
        <function-ref name="write" scoped="" ref="0x107b1b330"/>
        <function-ref name="beginRead" scoped="" ref="0x107b1b4b8"/>
        <function-ref name="readDone" scoped="" ref="0x107b1b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x10780fc00" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x10780fc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x10780e020"/>
        <function-ref name="writeDone" scoped="" ref="0x10780e1a8"/>
        <function-ref name="write" scoped="" ref="0x10780e330"/>
        <function-ref name="beginRead" scoped="" ref="0x10780e4b8"/>
        <function-ref name="readDone" scoped="" ref="0x10780e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x107810cb0" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x107810cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x10780f0a0"/>
        <function-ref name="abortRelease" scoped="" ref="0x10780f228"/>
        <function-ref name="attemptRelease" scoped="" ref="0x10780f3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x10780c020" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x10780c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10780c370"/>
        <function-ref name="write" scoped="" ref="0x10780c4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x10780cd60" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x10780cd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10780b0d8"/>
        <function-ref name="write" scoped="" ref="0x10780b260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x107810020" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x107810020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x107810370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1078104f8"/>
        <function-ref name="request" scoped="" ref="0x107810680"/>
        <function-ref name="granted" scoped="" ref="0x107810808"/>
        <function-ref name="isOwner" scoped="" ref="0x107810990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x10780bad8" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x10780bad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10780be28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x107854020" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x107854020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x107854370"/>
        <function-ref name="sendDone" scoped="" ref="0x1078544f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x107806e50" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x107806e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x1078041e8"/>
        <function-ref name="writeDone" scoped="" ref="0x107804370"/>
        <function-ref name="write" scoped="" ref="0x1078044f8"/>
        <function-ref name="beginRead" scoped="" ref="0x107804680"/>
        <function-ref name="readDone" scoped="" ref="0x107804808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x10780ae00" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x10780ae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x1078071a8"/>
        <function-ref name="abortRelease" scoped="" ref="0x107807330"/>
        <function-ref name="attemptRelease" scoped="" ref="0x1078074b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x107856d20" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x107856d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x1078550a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x107854838" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x107854838"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x107854b88"/>
        <function-ref name="toIdle" scoped="" ref="0x107854d10"/>
        <function-ref name="isState" scoped="" ref="0x107852020"/>
        <function-ref name="isIdle" scoped="" ref="0x1078521a8"/>
        <function-ref name="requestState" scoped="" ref="0x107852330"/>
        <function-ref name="forceState" scoped="" ref="0x1078524b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x1078571e8" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x1078571e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x107857538"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1078576c0"/>
        <function-ref name="request" scoped="" ref="0x107857848"/>
        <function-ref name="granted" scoped="" ref="0x1078579d0"/>
        <function-ref name="isOwner" scoped="" ref="0x107857b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x107859040" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x107859040"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107859390"/>
        <function-ref name="write" scoped="" ref="0x107859518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x107859d40" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x107859d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1078580d8"/>
        <function-ref name="write" scoped="" ref="0x107858260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x107852730" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x107852730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x107852a80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x107852c08"/>
        <function-ref name="led1On" scoped="" ref="0x107852d90"/>
        <function-ref name="led1Toggle" scoped="" ref="0x10784c020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x10784c1a8"/>
        <function-ref name="get" scoped="" ref="0x10784c330"/>
        <function-ref name="led1Off" scoped="" ref="0x10784c4b8"/>
        <function-ref name="led2Off" scoped="" ref="0x10784cad8"/>
        <function-ref name="set" scoped="" ref="0x10784c640"/>
        <function-ref name="led0On" scoped="" ref="0x10784c7c8"/>
        <function-ref name="led2On" scoped="" ref="0x10784c950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x107807c48" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x107807c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x107806020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1078061a8"/>
        <function-ref name="request" scoped="" ref="0x107806330"/>
        <function-ref name="granted" scoped="" ref="0x1078064b8"/>
        <function-ref name="isOwner" scoped="" ref="0x107806640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x1078475d0" loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x1078475d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x107847920"/>
        <function-ref name="runTask" scoped="" ref="0x107847aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x107858a98" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x107858a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107858de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x10789d100" loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x10789d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x10789d450"/>
        <function-ref name="toIdle" scoped="" ref="0x10789d5d8"/>
        <function-ref name="isState" scoped="" ref="0x10789d760"/>
        <function-ref name="isIdle" scoped="" ref="0x10789d8e8"/>
        <function-ref name="requestState" scoped="" ref="0x10789da70"/>
        <function-ref name="forceState" scoped="" ref="0x10789dbf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x10789b868" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x10789b868"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x10789bbb8"/>
        <function-ref name="toIdle" scoped="" ref="0x10789bd40"/>
        <function-ref name="isState" scoped="" ref="0x107898020"/>
        <function-ref name="isIdle" scoped="" ref="0x1078981a8"/>
        <function-ref name="requestState" scoped="" ref="0x107898330"/>
        <function-ref name="forceState" scoped="" ref="0x1078984b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1078935d8" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1078935d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x107893928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x1078921c8" loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x1078921c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x107892518"/>
        <function-ref name="toIdle" scoped="" ref="0x1078926a0"/>
        <function-ref name="isState" scoped="" ref="0x107892828"/>
        <function-ref name="isIdle" scoped="" ref="0x1078929b0"/>
        <function-ref name="requestState" scoped="" ref="0x107892b38"/>
        <function-ref name="forceState" scoped="" ref="0x107892cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x107b01020" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x107b01020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x107b01370"/>
        <function-ref name="sendDone" scoped="" ref="0x107b014f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x1078d2948" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x1078d2948"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x1078d2c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1078d3cf0" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x1078d3cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1078d20a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1078d2228"/>
        <function-ref name="request" scoped="" ref="0x1078d23b0"/>
        <function-ref name="granted" scoped="" ref="0x1078d2538"/>
        <function-ref name="isOwner" scoped="" ref="0x1078d26c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x1088d6430" loc="82:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x1088d6430"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x1088d6780"/>
        <function-ref name="immediateRequested" scoped="" ref="0x1088d6908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x1088d5d18" loc="87:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x1088d5d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1088d30a0"/>
        <function-ref name="sendDone" scoped="" ref="0x1088d3228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x1088d34b0" loc="89:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x1088d34b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x1088d3800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x1088d6b90" loc="83:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x1088d6b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x1088d5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1088d77d0" loc="81:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x1088d77d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1088d7b20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1088d7ca8"/>
        <function-ref name="request" scoped="" ref="0x1088d7e30"/>
        <function-ref name="granted" scoped="" ref="0x1088d6020"/>
        <function-ref name="isOwner" scoped="" ref="0x1088d61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x1088d52a8" loc="85:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x1088d52a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x1088d55f8"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x1088d5780"/>
        <function-ref name="splitRead" scoped="" ref="0x1088d5908"/>
        <function-ref name="write" scoped="" ref="0x1088d5a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x1078c06c0" loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x1078c06c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x1078c0a10"/>
        <function-ref name="configure" scoped="" ref="0x1078c0b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x1078bd4d0" loc="77:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x1078bd4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1078bd820"/>
        <function-ref name="sendDone" scoped="" ref="0x1078bd9a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x1078bb498" loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x1078bb498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x1078bb7e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x1078c0e68" loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x1078c0e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x1078bf1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x1078bc270" loc="79:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x1078bc270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1078bc5c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1078bc748"/>
        <function-ref name="request" scoped="" ref="0x1078bc8d0"/>
        <function-ref name="granted" scoped="" ref="0x1078bca58"/>
        <function-ref name="isOwner" scoped="" ref="0x1078bcbe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1078c14e8" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x1078c14e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1078c1838"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1078c19c0"/>
        <function-ref name="request" scoped="" ref="0x1078c1b48"/>
        <function-ref name="granted" scoped="" ref="0x1078c1cd0"/>
        <function-ref name="isOwner" scoped="" ref="0x1078c1e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x1078bf4e0" loc="76:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x1078bf4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x1078bf830"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x1078bf9b8"/>
        <function-ref name="splitRead" scoped="" ref="0x1078bfb40"/>
        <function-ref name="write" scoped="" ref="0x1078bfcc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x1078bbc40" loc="81:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x1078bbc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x1078ba020"/>
        <function-ref name="txDone" scoped="" ref="0x1078ba1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x107917860" loc="76:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x107917860"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x107917bd0"/>
        <function-ref name="configure" scoped="" ref="0x107917d58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x1079151e0" loc="79:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x1079151e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x107915550"/>
        <function-ref name="sendDone" scoped="" ref="0x1079156d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x107913860" loc="82:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x107913860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x107913bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x107916020" loc="77:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x107916020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x107916370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x107912020" loc="83:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x107912020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x107912370"/>
        <function-ref name="enableUartRx" scoped="" ref="0x1079124f8"/>
        <function-ref name="setUctl" scoped="" ref="0x107912680"/>
        <function-ref name="enableUart" scoped="" ref="0x107912808"/>
        <function-ref name="setUrctl" scoped="" ref="0x107912990"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x107912b18"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x107912ca0"/>
        <function-ref name="getUtctl" scoped="" ref="0x107912e28"/>
        <function-ref name="getUrctl" scoped="" ref="0x107911020"/>
        <function-ref name="resetUsart" scoped="" ref="0x1079111a8"/>
        <function-ref name="getUmctl" scoped="" ref="0x107911330"/>
        <function-ref name="disableIntr" scoped="" ref="0x1079114b8"/>
        <function-ref name="setUtctl" scoped="" ref="0x107911640"/>
        <function-ref name="getUbr" scoped="" ref="0x1079118c8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x107911a50"/>
        <function-ref name="setUmctl" scoped="" ref="0x107911bd8"/>
        <function-ref name="isUartRx" scoped="" ref="0x107911d60"/>
        <function-ref name="isUart" scoped="" ref="0x107910020"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x1079101a8"/>
        <function-ref name="isSpi" scoped="" ref="0x107910330"/>
        <function-ref name="enableUartTx" scoped="" ref="0x1079104b8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x107910640"/>
        <function-ref name="disableUartRx" scoped="" ref="0x1079107c8"/>
        <function-ref name="enableIntr" scoped="" ref="0x107910950"/>
        <function-ref name="getMode" scoped="" ref="0x107910ad8"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x107910e60"/>
        <function-ref name="clrIntr" scoped="" ref="0x10790f020"/>
        <function-ref name="setUbr" scoped="" ref="0x10790f1a8"/>
        <function-ref name="tx" scoped="" ref="0x10790f330"/>
        <function-ref name="getUctl" scoped="" ref="0x10790f4b8"/>
        <function-ref name="disableUart" scoped="" ref="0x10790f640"/>
        <function-ref name="enableSpi" scoped="" ref="0x10790f7c8"/>
        <function-ref name="setModeUart" scoped="" ref="0x10790f950"/>
        <function-ref name="setModeSpi" scoped="" ref="0x10790fad8"/>
        <function-ref name="rx" scoped="" ref="0x10790fc60"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x10790fde8"/>
        <function-ref name="isUartTx" scoped="" ref="0x10790e020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x10790e1a8"/>
        <function-ref name="disableSpi" scoped="" ref="0x10790e330"/>
        <function-ref name="disableUartTx" scoped="" ref="0x10790e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x10790d020" loc="85:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x10790d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x10790d370"/>
        <function-ref name="led0Toggle" scoped="" ref="0x10790d4f8"/>
        <function-ref name="led1On" scoped="" ref="0x10790d680"/>
        <function-ref name="led1Toggle" scoped="" ref="0x10790d808"/>
        <function-ref name="led2Toggle" scoped="" ref="0x10790d990"/>
        <function-ref name="get" scoped="" ref="0x10790db18"/>
        <function-ref name="led1Off" scoped="" ref="0x10790dca0"/>
        <function-ref name="led2On" scoped="" ref="0x10790c330"/>
        <function-ref name="set" scoped="" ref="0x10790c020"/>
        <function-ref name="led2Off" scoped="" ref="0x10790de28"/>
        <function-ref name="led0On" scoped="" ref="0x10790c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x107915ac0" loc="81:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x107915ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x107915e30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x107913020"/>
        <function-ref name="request" scoped="" ref="0x1079131a8"/>
        <function-ref name="granted" scoped="" ref="0x107913330"/>
        <function-ref name="isOwner" scoped="" ref="0x1079134b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x107918ae8" loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x107918ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x107918e58"/>
        <function-ref name="immediateRequest" scoped="" ref="0x107917020"/>
        <function-ref name="request" scoped="" ref="0x1079171a8"/>
        <function-ref name="granted" scoped="" ref="0x107917330"/>
        <function-ref name="isOwner" scoped="" ref="0x1079174b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x1079165f8" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x1079165f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x107916948"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x107916ad0"/>
        <function-ref name="splitRead" scoped="" ref="0x107916c58"/>
        <function-ref name="write" scoped="" ref="0x107916de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x10790e780" loc="84:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x10790e780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x10790ead0"/>
        <function-ref name="txDone" scoped="" ref="0x10790ec58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x10790c5f8" loc="102:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x10790c5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x10790c948"/>
        <function-ref name="runTask" scoped="" ref="0x10790cad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x10795ad68" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x10795ad68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1079590f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x10795a528" loc="77:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x10795a528"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x10795a878"/>
        <function-ref name="txDone" scoped="" ref="0x10795aa00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x107961be0" loc="76:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x107961be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x10795e020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x10795e1a8"/>
        <function-ref name="setUctl" scoped="" ref="0x10795e330"/>
        <function-ref name="enableUart" scoped="" ref="0x10795e4b8"/>
        <function-ref name="setUrctl" scoped="" ref="0x10795e640"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x10795e7c8"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x10795e950"/>
        <function-ref name="getUtctl" scoped="" ref="0x10795ead8"/>
        <function-ref name="getUrctl" scoped="" ref="0x10795ec60"/>
        <function-ref name="resetUsart" scoped="" ref="0x10795ede8"/>
        <function-ref name="getUmctl" scoped="" ref="0x10795d020"/>
        <function-ref name="disableIntr" scoped="" ref="0x10795d1a8"/>
        <function-ref name="setUtctl" scoped="" ref="0x10795d330"/>
        <function-ref name="getUbr" scoped="" ref="0x10795d5b8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x10795d740"/>
        <function-ref name="setUmctl" scoped="" ref="0x10795d8c8"/>
        <function-ref name="isUartRx" scoped="" ref="0x10795da50"/>
        <function-ref name="isUart" scoped="" ref="0x10795dbd8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x10795dd60"/>
        <function-ref name="isSpi" scoped="" ref="0x10795c020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x10795c1a8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x10795c330"/>
        <function-ref name="disableUartRx" scoped="" ref="0x10795c4b8"/>
        <function-ref name="enableIntr" scoped="" ref="0x10795c640"/>
        <function-ref name="getMode" scoped="" ref="0x10795c7c8"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x10795cb50"/>
        <function-ref name="clrIntr" scoped="" ref="0x10795ccd8"/>
        <function-ref name="setUbr" scoped="" ref="0x10795ce60"/>
        <function-ref name="tx" scoped="" ref="0x10795b020"/>
        <function-ref name="getUctl" scoped="" ref="0x10795b1a8"/>
        <function-ref name="disableUart" scoped="" ref="0x10795b330"/>
        <function-ref name="enableSpi" scoped="" ref="0x10795b4b8"/>
        <function-ref name="setModeUart" scoped="" ref="0x10795b640"/>
        <function-ref name="setModeSpi" scoped="" ref="0x10795b7c8"/>
        <function-ref name="rx" scoped="" ref="0x10795b950"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x10795bad8"/>
        <function-ref name="isUartTx" scoped="" ref="0x10795bc60"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x10795bde8"/>
        <function-ref name="disableSpi" scoped="" ref="0x10795a020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x10795a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x10797a558" loc="82:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x10797a558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10797a8a8"/>
        <function-ref name="isInput" scoped="" ref="0x10797aa30"/>
        <function-ref name="setResistor" scoped="" ref="0x10797abb8"/>
        <function-ref name="toggle" scoped="" ref="0x10797ad40"/>
        <function-ref name="isOutput" scoped="" ref="0x107979020"/>
        <function-ref name="getResistor" scoped="" ref="0x1079791a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x107979330"/>
        <function-ref name="get" scoped="" ref="0x1079794b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x107979640"/>
        <function-ref name="getRaw" scoped="" ref="0x1079797c8"/>
        <function-ref name="set" scoped="" ref="0x107979950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x107979ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x107979c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x107978020"/>
        <function-ref name="clr" scoped="" ref="0x1079781a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x107952bf0" loc="76:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x107952bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x107951020"/>
        <function-ref name="txDone" scoped="" ref="0x1079511a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x107978558" loc="83:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x107978558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1079788a8"/>
        <function-ref name="isInput" scoped="" ref="0x107978a30"/>
        <function-ref name="setResistor" scoped="" ref="0x107978bb8"/>
        <function-ref name="toggle" scoped="" ref="0x107978d40"/>
        <function-ref name="isOutput" scoped="" ref="0x107977020"/>
        <function-ref name="getResistor" scoped="" ref="0x1079771a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x107977330"/>
        <function-ref name="get" scoped="" ref="0x1079774b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x107977640"/>
        <function-ref name="getRaw" scoped="" ref="0x1079777c8"/>
        <function-ref name="set" scoped="" ref="0x107977950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x107977ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x107977c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x107976020"/>
        <function-ref name="clr" scoped="" ref="0x1079761a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x107976558" loc="84:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x107976558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1079768a8"/>
        <function-ref name="isInput" scoped="" ref="0x107976a30"/>
        <function-ref name="setResistor" scoped="" ref="0x107976bb8"/>
        <function-ref name="toggle" scoped="" ref="0x107976d40"/>
        <function-ref name="isOutput" scoped="" ref="0x107975020"/>
        <function-ref name="getResistor" scoped="" ref="0x1079751a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x107975330"/>
        <function-ref name="get" scoped="" ref="0x1079754b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x107975640"/>
        <function-ref name="getRaw" scoped="" ref="0x1079757c8"/>
        <function-ref name="set" scoped="" ref="0x107975950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x107975ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x107975c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x107974020"/>
        <function-ref name="clr" scoped="" ref="0x1079741a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x107956350" loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x107956350"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x1079566a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x107956828"/>
        <function-ref name="setUctl" scoped="" ref="0x1079569b0"/>
        <function-ref name="enableUart" scoped="" ref="0x107956b38"/>
        <function-ref name="setUrctl" scoped="" ref="0x107956cc0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x107956e48"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x107955020"/>
        <function-ref name="getUtctl" scoped="" ref="0x1079551a8"/>
        <function-ref name="getUrctl" scoped="" ref="0x107955330"/>
        <function-ref name="resetUsart" scoped="" ref="0x1079554b8"/>
        <function-ref name="getUmctl" scoped="" ref="0x107955640"/>
        <function-ref name="disableIntr" scoped="" ref="0x1079557c8"/>
        <function-ref name="setUtctl" scoped="" ref="0x107955950"/>
        <function-ref name="getUbr" scoped="" ref="0x107955bd8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x107955d60"/>
        <function-ref name="setUmctl" scoped="" ref="0x107954020"/>
        <function-ref name="isUartRx" scoped="" ref="0x1079541a8"/>
        <function-ref name="isUart" scoped="" ref="0x107954330"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x1079544b8"/>
        <function-ref name="isSpi" scoped="" ref="0x107954640"/>
        <function-ref name="enableUartTx" scoped="" ref="0x1079547c8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x107954950"/>
        <function-ref name="disableUartRx" scoped="" ref="0x107954ad8"/>
        <function-ref name="enableIntr" scoped="" ref="0x107954c60"/>
        <function-ref name="getMode" scoped="" ref="0x107954de8"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x107953220"/>
        <function-ref name="clrIntr" scoped="" ref="0x1079533a8"/>
        <function-ref name="setUbr" scoped="" ref="0x107953530"/>
        <function-ref name="tx" scoped="" ref="0x1079536b8"/>
        <function-ref name="getUctl" scoped="" ref="0x107953840"/>
        <function-ref name="disableUart" scoped="" ref="0x1079539c8"/>
        <function-ref name="enableSpi" scoped="" ref="0x107953b50"/>
        <function-ref name="setModeUart" scoped="" ref="0x107953cd8"/>
        <function-ref name="setModeSpi" scoped="" ref="0x107953e60"/>
        <function-ref name="rx" scoped="" ref="0x107952020"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x1079521a8"/>
        <function-ref name="isUartTx" scoped="" ref="0x107952330"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x1079524b8"/>
        <function-ref name="disableSpi" scoped="" ref="0x107952640"/>
        <function-ref name="disableUartTx" scoped="" ref="0x1079527c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x107984a48" loc="79:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x107984a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x107984d98"/>
        <function-ref name="getStartByte" scoped="" ref="0x107950020"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x1079501a8"/>
        <function-ref name="setMasterMode" scoped="" ref="0x107950330"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x1079504b8"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x107950640"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x1079507c8"/>
        <function-ref name="getStopBit" scoped="" ref="0x107950950"/>
        <function-ref name="setClockSource" scoped="" ref="0x107950ad8"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x107950c60"/>
        <function-ref name="getData" scoped="" ref="0x107950de8"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x10794f020"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x10794f1a8"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x10794f430"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x10794f5b8"/>
        <function-ref name="getIV" scoped="" ref="0x10794f740"/>
        <function-ref name="enableI2C" scoped="" ref="0x10794f8c8"/>
        <function-ref name="setStartBit" scoped="" ref="0x10794fa50"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x10794fbd8"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x10794fd60"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x107983020"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x1079831a8"/>
        <function-ref name="isI2C" scoped="" ref="0x107983330"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x1079834b8"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x107983640"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x1079839c8"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x107983b50"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x107983cd8"/>
        <function-ref name="disableNoAck" scoped="" ref="0x107983e60"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x107982020"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x1079821a8"/>
        <function-ref name="disableI2C" scoped="" ref="0x107982330"/>
        <function-ref name="getShiftClock" scoped="" ref="0x1079824b8"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x107982640"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x1079827c8"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x107982950"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x107982ad8"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x107982c60"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x107982de8"/>
        <function-ref name="setModeI2C" scoped="" ref="0x107981020"/>
        <function-ref name="getStartBit" scoped="" ref="0x1079811a8"/>
        <function-ref name="setWordMode" scoped="" ref="0x107981330"/>
        <function-ref name="setData" scoped="" ref="0x1079814b8"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x107981640"/>
        <function-ref name="getClockSource" scoped="" ref="0x1079817c8"/>
        <function-ref name="getWordMode" scoped="" ref="0x107981950"/>
        <function-ref name="setShiftClock" scoped="" ref="0x107981ad8"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x107981c60"/>
        <function-ref name="enableNoAck" scoped="" ref="0x107981de8"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x107980420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x1079805a8"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x107980730"/>
        <function-ref name="setStopBit" scoped="" ref="0x1079808b8"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x107980a40"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x107980bc8"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x107980d50"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x10797f020"/>
        <function-ref name="setStartByte" scoped="" ref="0x10797f1a8"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x10797f330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x10797c658" loc="81:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x10797c658"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10797c9a8"/>
        <function-ref name="isInput" scoped="" ref="0x10797cb30"/>
        <function-ref name="setResistor" scoped="" ref="0x10797ccb8"/>
        <function-ref name="toggle" scoped="" ref="0x10797ce40"/>
        <function-ref name="isOutput" scoped="" ref="0x10797b020"/>
        <function-ref name="getResistor" scoped="" ref="0x10797b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x10797b330"/>
        <function-ref name="get" scoped="" ref="0x10797b4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10797b640"/>
        <function-ref name="getRaw" scoped="" ref="0x10797b7c8"/>
        <function-ref name="set" scoped="" ref="0x10797b950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10797bad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10797bc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10797a020"/>
        <function-ref name="clr" scoped="" ref="0x10797a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x1079515d8" loc="77:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x1079515d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x107951928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x10797f6e0" loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x10797f6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10797fa30"/>
        <function-ref name="isInput" scoped="" ref="0x10797fbb8"/>
        <function-ref name="setResistor" scoped="" ref="0x10797fd40"/>
        <function-ref name="toggle" scoped="" ref="0x10797d020"/>
        <function-ref name="isOutput" scoped="" ref="0x10797d1a8"/>
        <function-ref name="getResistor" scoped="" ref="0x10797d330"/>
        <function-ref name="makeOutput" scoped="" ref="0x10797d4b8"/>
        <function-ref name="get" scoped="" ref="0x10797d640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10797d7c8"/>
        <function-ref name="getRaw" scoped="" ref="0x10797d950"/>
        <function-ref name="set" scoped="" ref="0x10797dad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10797dc60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10797dde8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10797c120"/>
        <function-ref name="clr" scoped="" ref="0x10797c2a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x1088cc8c8" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x1088cc8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x1088ccc18"/>
        <function-ref name="immediateRequested" scoped="" ref="0x1088ccda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x1088c6780" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x1088c6780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1088c6ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x1088bf8c8" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x1088bf8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x1088bfc18"/>
        <function-ref name="configure" scoped="" ref="0x1088bfda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x1088c6d58" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x1088c6d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x1088c50d8"/>
        <function-ref name="getStartByte" scoped="" ref="0x1088c5260"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x1088c53e8"/>
        <function-ref name="setMasterMode" scoped="" ref="0x1088c5570"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x1088c56f8"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x1088c5880"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x1088c5a08"/>
        <function-ref name="getStopBit" scoped="" ref="0x1088c5b90"/>
        <function-ref name="setClockSource" scoped="" ref="0x1088c5d18"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x1088c4020"/>
        <function-ref name="getData" scoped="" ref="0x1088c41a8"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x1088c4330"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x1088c44b8"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x1088c4740"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x1088c48c8"/>
        <function-ref name="getIV" scoped="" ref="0x1088c4a50"/>
        <function-ref name="enableI2C" scoped="" ref="0x1088c4bd8"/>
        <function-ref name="setStartBit" scoped="" ref="0x1088c4d60"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x1088c3020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x1088c31a8"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x1088c3330"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x1088c34b8"/>
        <function-ref name="isI2C" scoped="" ref="0x1088c3640"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x1088c37c8"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x1088c3950"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x1088c3cd8"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x1088c3e60"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x1088c2020"/>
        <function-ref name="disableNoAck" scoped="" ref="0x1088c21a8"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x1088c2330"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x1088c24b8"/>
        <function-ref name="disableI2C" scoped="" ref="0x1088c2640"/>
        <function-ref name="getShiftClock" scoped="" ref="0x1088c27c8"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x1088c2950"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x1088c2ad8"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x1088c2c60"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x1088c2de8"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x1088c1020"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x1088c11a8"/>
        <function-ref name="setModeI2C" scoped="" ref="0x1088c1330"/>
        <function-ref name="getStartBit" scoped="" ref="0x1088c14b8"/>
        <function-ref name="setWordMode" scoped="" ref="0x1088c1640"/>
        <function-ref name="setData" scoped="" ref="0x1088c17c8"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x1088c1950"/>
        <function-ref name="getClockSource" scoped="" ref="0x1088c1ad8"/>
        <function-ref name="getWordMode" scoped="" ref="0x1088c1c60"/>
        <function-ref name="setShiftClock" scoped="" ref="0x1088c1de8"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x1088c0020"/>
        <function-ref name="enableNoAck" scoped="" ref="0x1088c01a8"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x1088c0730"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x1088c08b8"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x1088c0a40"/>
        <function-ref name="setStopBit" scoped="" ref="0x1088c0bc8"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x1088c0d50"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x1088bf020"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x1088bf1a8"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x1088bf330"/>
        <function-ref name="setStartByte" scoped="" ref="0x1088bf4b8"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x1088bf640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x1088c6020" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x1088c6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x1088c6370"/>
        <function-ref name="txDone" scoped="" ref="0x1088c64f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1088cdb38" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x1088cdb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1088cc020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1088cc1a8"/>
        <function-ref name="request" scoped="" ref="0x1088cc330"/>
        <function-ref name="granted" scoped="" ref="0x1088cc4b8"/>
        <function-ref name="isOwner" scoped="" ref="0x1088cc640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x1088cb7c0" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x1088cb7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x1088cbb10"/>
        <function-ref name="enableUartRx" scoped="" ref="0x1088cbc98"/>
        <function-ref name="setUctl" scoped="" ref="0x1088cbe20"/>
        <function-ref name="enableUart" scoped="" ref="0x1088ca020"/>
        <function-ref name="setUrctl" scoped="" ref="0x1088ca1a8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x1088ca330"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x1088ca4b8"/>
        <function-ref name="getUtctl" scoped="" ref="0x1088ca640"/>
        <function-ref name="getUrctl" scoped="" ref="0x1088ca7c8"/>
        <function-ref name="resetUsart" scoped="" ref="0x1088ca950"/>
        <function-ref name="getUmctl" scoped="" ref="0x1088caad8"/>
        <function-ref name="disableIntr" scoped="" ref="0x1088cac60"/>
        <function-ref name="setUtctl" scoped="" ref="0x1088cade8"/>
        <function-ref name="getUbr" scoped="" ref="0x1088c9120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x1088c92a8"/>
        <function-ref name="setUmctl" scoped="" ref="0x1088c9430"/>
        <function-ref name="isUartRx" scoped="" ref="0x1088c95b8"/>
        <function-ref name="isUart" scoped="" ref="0x1088c9740"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x1088c98c8"/>
        <function-ref name="isSpi" scoped="" ref="0x1088c9a50"/>
        <function-ref name="enableUartTx" scoped="" ref="0x1088c9bd8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x1088c9d60"/>
        <function-ref name="disableUartRx" scoped="" ref="0x1088c8020"/>
        <function-ref name="enableIntr" scoped="" ref="0x1088c81a8"/>
        <function-ref name="getMode" scoped="" ref="0x1088c8330"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x1088c86b8"/>
        <function-ref name="clrIntr" scoped="" ref="0x1088c8840"/>
        <function-ref name="setUbr" scoped="" ref="0x1088c89c8"/>
        <function-ref name="tx" scoped="" ref="0x1088c8b50"/>
        <function-ref name="getUctl" scoped="" ref="0x1088c8cd8"/>
        <function-ref name="disableUart" scoped="" ref="0x1088c8e60"/>
        <function-ref name="enableSpi" scoped="" ref="0x1088c7020"/>
        <function-ref name="setModeUart" scoped="" ref="0x1088c71a8"/>
        <function-ref name="setModeSpi" scoped="" ref="0x1088c7330"/>
        <function-ref name="rx" scoped="" ref="0x1088c74b8"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x1088c7640"/>
        <function-ref name="isUartTx" scoped="" ref="0x1088c77c8"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x1088c7950"/>
        <function-ref name="disableSpi" scoped="" ref="0x1088c7ad8"/>
        <function-ref name="disableUartTx" scoped="" ref="0x1088c7c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x1088cb060" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x1088cb060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x1088cb3b0"/>
        <function-ref name="userId" scoped="" ref="0x1088cb538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x1079f0020" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x1079f0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x1079f0370"/>
        <function-ref name="immediateRequested" scoped="" ref="0x1079f04f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x1079ef570" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x1079ef570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x1079ef8c0"/>
        <function-ref name="configure" scoped="" ref="0x1079efa48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x1079f42b0" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x1079f42b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x1079f4600"/>
        <function-ref name="txDone" scoped="" ref="0x1079f4788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1079f3ce8" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x1079f3ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1079f10a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1079f1228"/>
        <function-ref name="request" scoped="" ref="0x1079f13b0"/>
        <function-ref name="granted" scoped="" ref="0x1079f1538"/>
        <function-ref name="isOwner" scoped="" ref="0x1079f16c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x1079f31c8" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x1079f31c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1079f3518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x1079f07f0" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x1079f07f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x1079f0b40"/>
        <function-ref name="userId" scoped="" ref="0x1079f0cc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x1079eca48" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x1079eca48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x1079ecd98"/>
        <function-ref name="userId" scoped="" ref="0x107a49020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x1079eeb70" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x1079eeb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x1079ed020"/>
        <function-ref name="txDone" scoped="" ref="0x1079ed1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x1079ec470" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x1079ec470"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1079ec7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x1079ed590" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x1079ed590"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1079ed900"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x1079edbc8" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x1079edbc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x1079ec020"/>
        <function-ref name="txDone" scoped="" ref="0x1079ec1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x107a46388" loc="92:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x107a46388"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x107a466f8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x107a46880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x107a44020" loc="96:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x107a44020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x107a44390"/>
        <function-ref name="configure" scoped="" ref="0x107a44518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x107a46ac8" loc="93:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x107a46ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x107a46e18"/>
        <function-ref name="requested" scoped="" ref="0x107a45020"/>
        <function-ref name="granted" scoped="" ref="0x107a451a8"/>
        <function-ref name="isOwner" scoped="" ref="0x107a45330"/>
        <function-ref name="immediateRequested" scoped="" ref="0x107a454b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x107a47558" loc="91:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x107a47558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x107a478c8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x107a47a50"/>
        <function-ref name="request" scoped="" ref="0x107a47bd8"/>
        <function-ref name="granted" scoped="" ref="0x107a47d60"/>
        <function-ref name="isOwner" scoped="" ref="0x107a46020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x107a45700" loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x107a45700"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x107a45a50"/>
        <function-ref name="userId" scoped="" ref="0x107a45bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1088fb828" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1088fb828"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1088fbb78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x1088fbe00" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x1088fbe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x1088fa1a8"/>
        <function-ref name="isEmpty" scoped="" ref="0x1088fa330"/>
        <function-ref name="isEnqueued" scoped="" ref="0x1088fa4b8"/>
        <function-ref name="dequeue" scoped="" ref="0x1088fa640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x1088f8b48" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x1088f8b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x1088f7020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x1088f71a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x1088f68c0" loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x1088f68c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x1088f6c30"/>
        <function-ref name="configure" scoped="" ref="0x1088f6db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x1088f40a0" loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x1088f40a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x1088f43f0"/>
        <function-ref name="isEmpty" scoped="" ref="0x1088f4578"/>
        <function-ref name="isEnqueued" scoped="" ref="0x1088f4700"/>
        <function-ref name="dequeue" scoped="" ref="0x1088f4888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x1088f73f0" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x1088f73f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1088f7740"/>
        <function-ref name="requested" scoped="" ref="0x1088f78c8"/>
        <function-ref name="granted" scoped="" ref="0x1088f7a50"/>
        <function-ref name="isOwner" scoped="" ref="0x1088f7bd8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x1088f7d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x1088f4ad0" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x1088f4ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x1088f4e20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x1088f3020"/>
        <function-ref name="led1On" scoped="" ref="0x1088f31a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x1088f3330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x1088f34b8"/>
        <function-ref name="get" scoped="" ref="0x1088f3640"/>
        <function-ref name="led1Off" scoped="" ref="0x1088f37c8"/>
        <function-ref name="led0On" scoped="" ref="0x1088f3de8"/>
        <function-ref name="set" scoped="" ref="0x1088f3ad8"/>
        <function-ref name="led2On" scoped="" ref="0x1088f3950"/>
        <function-ref name="led2Off" scoped="" ref="0x1088f3c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1088f9e20" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x1088f9e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1088f81c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1088f8348"/>
        <function-ref name="request" scoped="" ref="0x1088f84d0"/>
        <function-ref name="granted" scoped="" ref="0x1088f8658"/>
        <function-ref name="isOwner" scoped="" ref="0x1088f87e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x1088f6020" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x1088f6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x1088f6370"/>
        <function-ref name="userId" scoped="" ref="0x1088f64f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x1088f2100" loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x1088f2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1088f2450"/>
        <function-ref name="runTask" scoped="" ref="0x1088f25d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x107a3db48" loc="4:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x107a3db48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x107a3a020"/>
        <function-ref name="getStartByte" scoped="" ref="0x107a3a1a8"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x107a3a330"/>
        <function-ref name="setMasterMode" scoped="" ref="0x107a3a4b8"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x107a3a640"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x107a3a7c8"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x107a3a950"/>
        <function-ref name="getStopBit" scoped="" ref="0x107a3aad8"/>
        <function-ref name="setClockSource" scoped="" ref="0x107a3ac60"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x107a3ade8"/>
        <function-ref name="getData" scoped="" ref="0x107a39020"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x107a391a8"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x107a39330"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x107a395b8"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x107a39740"/>
        <function-ref name="getIV" scoped="" ref="0x107a398c8"/>
        <function-ref name="enableI2C" scoped="" ref="0x107a39a50"/>
        <function-ref name="setStartBit" scoped="" ref="0x107a39bd8"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x107a39d60"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x107a38020"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x107a381a8"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x107a38330"/>
        <function-ref name="isI2C" scoped="" ref="0x107a384b8"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x107a38640"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x107a387c8"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x107a38b50"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x107a38cd8"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x107a38e60"/>
        <function-ref name="disableNoAck" scoped="" ref="0x107a37020"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x107a371a8"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x107a37330"/>
        <function-ref name="disableI2C" scoped="" ref="0x107a374b8"/>
        <function-ref name="getShiftClock" scoped="" ref="0x107a37640"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x107a377c8"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x107a37950"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x107a37ad8"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x107a37c60"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x107a37de8"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x107a36020"/>
        <function-ref name="setModeI2C" scoped="" ref="0x107a361a8"/>
        <function-ref name="getStartBit" scoped="" ref="0x107a36330"/>
        <function-ref name="setWordMode" scoped="" ref="0x107a364b8"/>
        <function-ref name="setData" scoped="" ref="0x107a36640"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x107a367c8"/>
        <function-ref name="getClockSource" scoped="" ref="0x107a36950"/>
        <function-ref name="getWordMode" scoped="" ref="0x107a36ad8"/>
        <function-ref name="setShiftClock" scoped="" ref="0x107a36c60"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x107a36de8"/>
        <function-ref name="enableNoAck" scoped="" ref="0x107a35020"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x107a355a8"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x107a35730"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x107a358b8"/>
        <function-ref name="setStopBit" scoped="" ref="0x107a35a40"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x107a35bc8"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x107a35d50"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x107a34020"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x107a341a8"/>
        <function-ref name="setStartByte" scoped="" ref="0x107a34330"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x107a344b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x107a2a060" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x107a2a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x107a2a3b0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x107a2a538"/>
        <function-ref name="setUctl" scoped="" ref="0x107a2a6c0"/>
        <function-ref name="enableUart" scoped="" ref="0x107a2a848"/>
        <function-ref name="setUrctl" scoped="" ref="0x107a2a9d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x107a2ab58"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x107a2ace0"/>
        <function-ref name="getUtctl" scoped="" ref="0x107a2ae68"/>
        <function-ref name="getUrctl" scoped="" ref="0x107a29020"/>
        <function-ref name="resetUsart" scoped="" ref="0x107a291a8"/>
        <function-ref name="getUmctl" scoped="" ref="0x107a29330"/>
        <function-ref name="disableIntr" scoped="" ref="0x107a294b8"/>
        <function-ref name="setUtctl" scoped="" ref="0x107a29640"/>
        <function-ref name="getUbr" scoped="" ref="0x107a298c8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x107a29a50"/>
        <function-ref name="setUmctl" scoped="" ref="0x107a29bd8"/>
        <function-ref name="isUartRx" scoped="" ref="0x107a29d60"/>
        <function-ref name="isUart" scoped="" ref="0x107a28020"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x107a281a8"/>
        <function-ref name="isSpi" scoped="" ref="0x107a28330"/>
        <function-ref name="enableUartTx" scoped="" ref="0x107a284b8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x107a28640"/>
        <function-ref name="disableUartRx" scoped="" ref="0x107a287c8"/>
        <function-ref name="enableIntr" scoped="" ref="0x107a28950"/>
        <function-ref name="getMode" scoped="" ref="0x107a28ad8"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x107a28e60"/>
        <function-ref name="clrIntr" scoped="" ref="0x107a27020"/>
        <function-ref name="setUbr" scoped="" ref="0x107a271a8"/>
        <function-ref name="tx" scoped="" ref="0x107a27330"/>
        <function-ref name="getUctl" scoped="" ref="0x107a274b8"/>
        <function-ref name="disableUart" scoped="" ref="0x107a27640"/>
        <function-ref name="enableSpi" scoped="" ref="0x107a277c8"/>
        <function-ref name="setModeUart" scoped="" ref="0x107a27950"/>
        <function-ref name="setModeSpi" scoped="" ref="0x107a27ad8"/>
        <function-ref name="rx" scoped="" ref="0x107a27c60"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x107a27de8"/>
        <function-ref name="isUartTx" scoped="" ref="0x107a26020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x107a261a8"/>
        <function-ref name="disableSpi" scoped="" ref="0x107a26330"/>
        <function-ref name="disableUartTx" scoped="" ref="0x107a264b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x107a247e0" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x107a247e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x107a24b30"/>
        <function-ref name="isInput" scoped="" ref="0x107a24cb8"/>
        <function-ref name="setResistor" scoped="" ref="0x107a24e40"/>
        <function-ref name="toggle" scoped="" ref="0x107a23020"/>
        <function-ref name="isOutput" scoped="" ref="0x107a231a8"/>
        <function-ref name="getResistor" scoped="" ref="0x107a23330"/>
        <function-ref name="makeOutput" scoped="" ref="0x107a234b8"/>
        <function-ref name="get" scoped="" ref="0x107a23640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x107a237c8"/>
        <function-ref name="getRaw" scoped="" ref="0x107a23950"/>
        <function-ref name="set" scoped="" ref="0x107a23ad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x107a23c60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x107a23de8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x107a22120"/>
        <function-ref name="clr" scoped="" ref="0x107a222a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x107a314e8" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x107a314e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x107a31838"/>
        <function-ref name="getStartByte" scoped="" ref="0x107a319c0"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x107a31b48"/>
        <function-ref name="setMasterMode" scoped="" ref="0x107a31cd0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x107a31e58"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x107a30020"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x107a301a8"/>
        <function-ref name="getStopBit" scoped="" ref="0x107a30330"/>
        <function-ref name="setClockSource" scoped="" ref="0x107a304b8"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x107a30640"/>
        <function-ref name="getData" scoped="" ref="0x107a307c8"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x107a30950"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x107a30ad8"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x107a30d60"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x107a2f020"/>
        <function-ref name="getIV" scoped="" ref="0x107a2f1a8"/>
        <function-ref name="enableI2C" scoped="" ref="0x107a2f330"/>
        <function-ref name="setStartBit" scoped="" ref="0x107a2f4b8"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x107a2f640"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x107a2f7c8"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x107a2f950"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x107a2fad8"/>
        <function-ref name="isI2C" scoped="" ref="0x107a2fc60"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x107a2fde8"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x107a2e020"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x107a2e3a8"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x107a2e530"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x107a2e6b8"/>
        <function-ref name="disableNoAck" scoped="" ref="0x107a2e840"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x107a2e9c8"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x107a2eb50"/>
        <function-ref name="disableI2C" scoped="" ref="0x107a2ecd8"/>
        <function-ref name="getShiftClock" scoped="" ref="0x107a2ee60"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x107a2d020"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x107a2d1a8"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x107a2d330"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x107a2d4b8"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x107a2d640"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x107a2d7c8"/>
        <function-ref name="setModeI2C" scoped="" ref="0x107a2d950"/>
        <function-ref name="getStartBit" scoped="" ref="0x107a2dad8"/>
        <function-ref name="setWordMode" scoped="" ref="0x107a2dc60"/>
        <function-ref name="setData" scoped="" ref="0x107a2dde8"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x107a2c020"/>
        <function-ref name="getClockSource" scoped="" ref="0x107a2c1a8"/>
        <function-ref name="getWordMode" scoped="" ref="0x107a2c330"/>
        <function-ref name="setShiftClock" scoped="" ref="0x107a2c4b8"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x107a2c640"/>
        <function-ref name="enableNoAck" scoped="" ref="0x107a2c7c8"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x107a2cd50"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x107a2b020"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x107a2b1a8"/>
        <function-ref name="setStopBit" scoped="" ref="0x107a2b330"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x107a2b4b8"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x107a2b640"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x107a2b7c8"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x107a2b950"/>
        <function-ref name="setStartByte" scoped="" ref="0x107a2bad8"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x107a2bc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x107a26868" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x107a26868"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x107a26bb8"/>
        <function-ref name="isInput" scoped="" ref="0x107a26d40"/>
        <function-ref name="setResistor" scoped="" ref="0x107a25020"/>
        <function-ref name="toggle" scoped="" ref="0x107a251a8"/>
        <function-ref name="isOutput" scoped="" ref="0x107a25330"/>
        <function-ref name="getResistor" scoped="" ref="0x107a254b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x107a25640"/>
        <function-ref name="get" scoped="" ref="0x107a257c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x107a25950"/>
        <function-ref name="getRaw" scoped="" ref="0x107a25ad8"/>
        <function-ref name="set" scoped="" ref="0x107a25c60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x107a25de8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x107a24020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x107a242a8"/>
        <function-ref name="clr" scoped="" ref="0x107a24430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x107b66a88" loc="69:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x107b66a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b65020"/>
        <function-ref name="write" scoped="" ref="0x107b651a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x107b70100" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x107b70100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107b70450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x107b6aa88" loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x107b6aa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b6add8"/>
        <function-ref name="write" scoped="" ref="0x107b69020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x107b64470" loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x107b64470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b647c0"/>
        <function-ref name="write" scoped="" ref="0x107b64948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x107b5dc10" loc="86:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x107b5dc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b5c020"/>
        <function-ref name="write" scoped="" ref="0x107b5c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x107b64c10" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x107b64c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b63020"/>
        <function-ref name="write" scoped="" ref="0x107b631a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x107b502e8" loc="108:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x107b502e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b50638"/>
        <function-ref name="write" scoped="" ref="0x107b507c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x107b532e8" loc="104:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x107b532e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b53638"/>
        <function-ref name="write" scoped="" ref="0x107b537c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x107b6f3a0" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x107b6f3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107b6f6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x107b58470" loc="93:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x107b58470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b587c0"/>
        <function-ref name="write" scoped="" ref="0x107b58948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x107b542e8" loc="102:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x107b542e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b54638"/>
        <function-ref name="write" scoped="" ref="0x107b547c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x107b69a88" loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x107b69a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b69dd8"/>
        <function-ref name="write" scoped="" ref="0x107b68020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x107b68a88" loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x107b68a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b68dd8"/>
        <function-ref name="write" scoped="" ref="0x107b66020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x107b5e470" loc="83:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x107b5e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b5e7c0"/>
        <function-ref name="write" scoped="" ref="0x107b5e948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x107b61c10" loc="79:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x107b61c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b5f020"/>
        <function-ref name="write" scoped="" ref="0x107b5f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x107b63470" loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x107b63470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b637c0"/>
        <function-ref name="write" scoped="" ref="0x107b63948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x107b10a90" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x107b10a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x107b10de0"/>
        <function-ref name="abortRelease" scoped="" ref="0x107b0f020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x107b0f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x107b6ec50" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x107b6ec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107b6c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x107b6c2e8" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x107b6c2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107b6c738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x107b57a38" loc="95:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x107b57a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b57d88"/>
        <function-ref name="write" scoped="" ref="0x107b56020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x107b6ca00" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x107b6ca00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107b6cd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x107b54a88" loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x107b54a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b54dd8"/>
        <function-ref name="write" scoped="" ref="0x107b53020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x107b6e020" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x107b6e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107b6e370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x107b59c10" loc="92:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x107b59c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b58020"/>
        <function-ref name="write" scoped="" ref="0x107b581a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x107b682e8" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x107b682e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b68638"/>
        <function-ref name="write" scoped="" ref="0x107b687c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x107b692e8" loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x107b692e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b69638"/>
        <function-ref name="write" scoped="" ref="0x107b697c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x107b0fa88" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x107b0fa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107b0fdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x107b5bc10" loc="90:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x107b5bc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b59020"/>
        <function-ref name="write" scoped="" ref="0x107b591a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x107b5c470" loc="87:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x107b5c470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b5c7c0"/>
        <function-ref name="write" scoped="" ref="0x107b5c948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x107b59470" loc="91:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x107b59470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b597c0"/>
        <function-ref name="write" scoped="" ref="0x107b59948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x107b51a88" loc="107:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x107b51a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b51dd8"/>
        <function-ref name="write" scoped="" ref="0x107b50020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x107b53a88" loc="105:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x107b53a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b53dd8"/>
        <function-ref name="write" scoped="" ref="0x107b51020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x107b5f470" loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x107b5f470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b5f7c0"/>
        <function-ref name="write" scoped="" ref="0x107b5f948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x107b5cc10" loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x107b5cc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b5b020"/>
        <function-ref name="write" scoped="" ref="0x107b5b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x107b55a88" loc="101:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x107b55a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b55dd8"/>
        <function-ref name="write" scoped="" ref="0x107b54020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x107b62470" loc="76:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x107b62470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b627c0"/>
        <function-ref name="write" scoped="" ref="0x107b62948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x107b50a88" loc="111:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x107b50a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x107b50dd8"/>
        <function-ref name="writeDone" scoped="" ref="0x107b4f020"/>
        <function-ref name="write" scoped="" ref="0x107b4f1a8"/>
        <function-ref name="beginRead" scoped="" ref="0x107b4f330"/>
        <function-ref name="readDone" scoped="" ref="0x107b4f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x107b0f470" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x107b0f470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107b0f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x107b6a2e8" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x107b6a2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b6a638"/>
        <function-ref name="write" scoped="" ref="0x107b6a7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x107b662e8" loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x107b662e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b66638"/>
        <function-ref name="write" scoped="" ref="0x107b667c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x107b5ec10" loc="84:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x107b5ec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b5d020"/>
        <function-ref name="write" scoped="" ref="0x107b5d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x107b63c10" loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x107b63c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b62020"/>
        <function-ref name="write" scoped="" ref="0x107b621a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x107b5d470" loc="85:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x107b5d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b5d7c0"/>
        <function-ref name="write" scoped="" ref="0x107b5d948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x107b65470" loc="70:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x107b65470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b657c0"/>
        <function-ref name="write" scoped="" ref="0x107b65948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x107b70718" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x107b70718"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107b70a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x107b65c10" loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x107b65c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b64020"/>
        <function-ref name="write" scoped="" ref="0x107b641a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x107b11e60" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x107b11e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x107b101e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x107b10370"/>
        <function-ref name="request" scoped="" ref="0x107b104f8"/>
        <function-ref name="granted" scoped="" ref="0x107b10680"/>
        <function-ref name="isOwner" scoped="" ref="0x107b10808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x107b6b060" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x107b6b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107b6b3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x107b6bc90" loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x107b6bc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107b6a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x107b552e8" loc="100:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x107b552e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b55638"/>
        <function-ref name="write" scoped="" ref="0x107b557c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x107b56a88" loc="99:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x107b56a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b56dd8"/>
        <function-ref name="write" scoped="" ref="0x107b55020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x107b6e638" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x107b6e638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107b6e988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x107b562e8" loc="96:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x107b562e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b56638"/>
        <function-ref name="write" scoped="" ref="0x107b567c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x107b512e8" loc="106:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x107b512e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b51638"/>
        <function-ref name="write" scoped="" ref="0x107b517c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x107b5fc10" loc="81:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x107b5fc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b5e020"/>
        <function-ref name="write" scoped="" ref="0x107b5e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x107b5b470" loc="89:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x107b5b470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b5b7c0"/>
        <function-ref name="write" scoped="" ref="0x107b5b948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x107b70d30" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x107b70d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107b6f0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x107b6f9b8" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x107b6f9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107b6fd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x107b62c10" loc="77:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x107b62c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b61020"/>
        <function-ref name="write" scoped="" ref="0x107b611a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x107b6b678" loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x107b6b678"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107b6b9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x107b61470" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x107b61470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b617c0"/>
        <function-ref name="write" scoped="" ref="0x107b61948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x107b58c10" loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x107b58c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b575e8"/>
        <function-ref name="write" scoped="" ref="0x107b57770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x107b4f780" loc="112:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x107b4f780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x107b4fad0"/>
        <function-ref name="writeDone" scoped="" ref="0x107b4fc58"/>
        <function-ref name="write" scoped="" ref="0x107b4fde0"/>
        <function-ref name="beginRead" scoped="" ref="0x107b4e020"/>
        <function-ref name="readDone" scoped="" ref="0x107b4e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x107b9c470" loc="69:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x107b9c470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b9c9c0"/>
        <function-ref name="write" scoped="" ref="0x107b9cb48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x107b45900" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x107b45900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107b45c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x107b9f470" loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x107b9f470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b9f7c0"/>
        <function-ref name="write" scoped="" ref="0x107b9f948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x107b9bd98" loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x107b9bd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b99170"/>
        <function-ref name="write" scoped="" ref="0x107b992f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x107b92470" loc="86:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x107b92470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b927c0"/>
        <function-ref name="write" scoped="" ref="0x107b92948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x107b995c0" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x107b995c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b99910"/>
        <function-ref name="write" scoped="" ref="0x107b99a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x107b877c0" loc="108:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x107b877c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b87b10"/>
        <function-ref name="write" scoped="" ref="0x107b87c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x107b897c0" loc="104:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x107b897c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b89b10"/>
        <function-ref name="write" scoped="" ref="0x107b89c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x107b43c50" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x107b43c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107b42020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x107b8fc10" loc="93:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x107b8fc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b8e020"/>
        <function-ref name="write" scoped="" ref="0x107b8e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x107b8a7c0" loc="102:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x107b8a7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b8ab10"/>
        <function-ref name="write" scoped="" ref="0x107b8ac98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x107b9e470" loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x107b9e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b9e7c0"/>
        <function-ref name="write" scoped="" ref="0x107b9e948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x107b9d470" loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x107b9d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b9d7c0"/>
        <function-ref name="write" scoped="" ref="0x107b9d948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x107b95c10" loc="83:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x107b95c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b94020"/>
        <function-ref name="write" scoped="" ref="0x107b941a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x107b96470" loc="79:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x107b96470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b967c0"/>
        <function-ref name="write" scoped="" ref="0x107b96948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x107b99d60" loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x107b99d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b980d8"/>
        <function-ref name="write" scoped="" ref="0x107b98260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x107b462a8" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x107b462a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x107b465f8"/>
        <function-ref name="abortRelease" scoped="" ref="0x107b46780"/>
        <function-ref name="attemptRelease" scoped="" ref="0x107b46908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x107b41638" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x107b41638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107b41988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x107b41c50" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x107b41c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107b400d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x107b8d060" loc="95:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x107b8d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b8d3b0"/>
        <function-ref name="write" scoped="" ref="0x107b8d538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x107b403a0" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x107b403a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107b406f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x107b89020" loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x107b89020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b89370"/>
        <function-ref name="write" scoped="" ref="0x107b894f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x107b42900" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x107b42900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107b42c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x107b8f470" loc="92:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x107b8f470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b8f7c0"/>
        <function-ref name="write" scoped="" ref="0x107b8f948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x107b9ec10" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x107b9ec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b9d020"/>
        <function-ref name="write" scoped="" ref="0x107b9d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x107b9fc10" loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x107b9fc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b9e020"/>
        <function-ref name="write" scoped="" ref="0x107b9e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x107b452e8" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x107b452e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107b45638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x107b90470" loc="90:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x107b90470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b907c0"/>
        <function-ref name="write" scoped="" ref="0x107b90948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x107b92c10" loc="87:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x107b92c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b91020"/>
        <function-ref name="write" scoped="" ref="0x107b911a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x107b90c10" loc="91:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x107b90c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b8f020"/>
        <function-ref name="write" scoped="" ref="0x107b8f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x107b87020" loc="107:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x107b87020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b87370"/>
        <function-ref name="write" scoped="" ref="0x107b874f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x107b88020" loc="105:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x107b88020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b88370"/>
        <function-ref name="write" scoped="" ref="0x107b884f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x107b96c10" loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x107b96c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b95020"/>
        <function-ref name="write" scoped="" ref="0x107b951a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x107b91470" loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x107b91470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b917c0"/>
        <function-ref name="write" scoped="" ref="0x107b91948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x107b8a020" loc="101:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x107b8a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b8a370"/>
        <function-ref name="write" scoped="" ref="0x107b8a4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x107b98cc8" loc="76:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x107b98cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b970a0"/>
        <function-ref name="write" scoped="" ref="0x107b97228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x107b86020" loc="111:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x107b86020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x107b86370"/>
        <function-ref name="writeDone" scoped="" ref="0x107b864f8"/>
        <function-ref name="write" scoped="" ref="0x107b86680"/>
        <function-ref name="beginRead" scoped="" ref="0x107b86808"/>
        <function-ref name="readDone" scoped="" ref="0x107b86990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x107b46bd0" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x107b46bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107b45020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x107ba1c50" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x107ba1c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b9f020"/>
        <function-ref name="write" scoped="" ref="0x107b9f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x107b9dc10" loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x107b9dc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b9c020"/>
        <function-ref name="write" scoped="" ref="0x107b9c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x107b94470" loc="84:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x107b94470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b947c0"/>
        <function-ref name="write" scoped="" ref="0x107b94948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x107b98528" loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x107b98528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b98878"/>
        <function-ref name="write" scoped="" ref="0x107b98a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x107b94c10" loc="85:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x107b94c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b92020"/>
        <function-ref name="write" scoped="" ref="0x107b921a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x107b9ce10" loc="70:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x107b9ce10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b9b1a8"/>
        <function-ref name="write" scoped="" ref="0x107b9b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x107b43020" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x107b43020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107b43370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x107b9b5f8" loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x107b9b5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b9b948"/>
        <function-ref name="write" scoped="" ref="0x107b9bad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x107b47558" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x107b47558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x107b478a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x107b47a30"/>
        <function-ref name="request" scoped="" ref="0x107b47bb8"/>
        <function-ref name="granted" scoped="" ref="0x107b47d40"/>
        <function-ref name="isOwner" scoped="" ref="0x107b46020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x107b409b8" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x107b409b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107b40d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x107ba1638" loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x107ba1638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107ba1988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x107b8b7c0" loc="100:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x107b8b7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b8bb10"/>
        <function-ref name="write" scoped="" ref="0x107b8bc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x107b8b020" loc="99:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x107b8b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b8b370"/>
        <function-ref name="write" scoped="" ref="0x107b8b4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x107b41020" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x107b41020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107b41370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x107b8d800" loc="96:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x107b8d800"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b8db50"/>
        <function-ref name="write" scoped="" ref="0x107b8dcd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x107b887c0" loc="106:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x107b887c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b88b10"/>
        <function-ref name="write" scoped="" ref="0x107b88c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x107b95470" loc="81:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x107b95470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b957c0"/>
        <function-ref name="write" scoped="" ref="0x107b95948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x107b91c10" loc="89:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x107b91c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b90020"/>
        <function-ref name="write" scoped="" ref="0x107b901a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x107b43638" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x107b43638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107b43988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x107b422e8" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x107b422e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107b42638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x107b974f0" loc="77:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x107b974f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b97840"/>
        <function-ref name="write" scoped="" ref="0x107b979c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x107ba1020" loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x107ba1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107ba1370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x107b97c90" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x107b97c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b96020"/>
        <function-ref name="write" scoped="" ref="0x107b961a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x107b8e470" loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x107b8e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107b8ebc0"/>
        <function-ref name="write" scoped="" ref="0x107b8ed48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x107b86c58" loc="112:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x107b86c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x107b84020"/>
        <function-ref name="writeDone" scoped="" ref="0x107b841a8"/>
        <function-ref name="write" scoped="" ref="0x107b84330"/>
        <function-ref name="beginRead" scoped="" ref="0x107b844b8"/>
        <function-ref name="readDone" scoped="" ref="0x107b84640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x107b7b690" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x107b7b690"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x107b7b9e0"/>
        <function-ref name="changed" scoped="" ref="0x107b7bb68"/>
        <function-ref name="amGroup" scoped="" ref="0x107b7bcf0"/>
        <function-ref name="setAddress" scoped="" ref="0x107b7be78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x107b7dce0" loc="13:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x107b7dce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x107bca0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x107bc5190" loc="5:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x107bc5190"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x107bc54e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x107bc2648" loc="8:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x107bc2648"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107bc2998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x107bc9ad8" loc="8:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x107bc9ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107bc9e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x107bad3f8" loc="14:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x107bad3f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107bad748"/>
        <function-ref name="write" scoped="" ref="0x107bad8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x107badc40" loc="15:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x107badc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x107bb1020"/>
        <function-ref name="stop" scoped="" ref="0x107bb11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x107bb3b08" loc="11:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x107bb3b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107bb3e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x107bb6bb0" loc="8:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x107bb6bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107c02020"/>
        <function-ref name="write" scoped="" ref="0x107c021a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x107c02530" loc="11:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x107c02530"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x107c02880"/>
        <function-ref name="isInput" scoped="" ref="0x107c02a08"/>
        <function-ref name="toggle" scoped="" ref="0x107c02b90"/>
        <function-ref name="isOutput" scoped="" ref="0x107c02d18"/>
        <function-ref name="get" scoped="" ref="0x107c01020"/>
        <function-ref name="makeOutput" scoped="" ref="0x107c011a8"/>
        <function-ref name="set" scoped="" ref="0x107c01330"/>
        <function-ref name="clr" scoped="" ref="0x107c014b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x107bf9748" loc="15:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x107bf9748"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e878b8"/>
            <typename><typedef-ref name="TMicro" ref="0x106e87c10"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x107bfc578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x107bfe108" loc="11:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x107bfe108"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107bfe458"/>
        <function-ref name="write" scoped="" ref="0x107bfe5e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x107bfe968" loc="14:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x107bfe968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x107bfecb8"/>
        <function-ref name="isInput" scoped="" ref="0x107bfee40"/>
        <function-ref name="toggle" scoped="" ref="0x107bfd020"/>
        <function-ref name="isOutput" scoped="" ref="0x107bfd1a8"/>
        <function-ref name="get" scoped="" ref="0x107bfd330"/>
        <function-ref name="makeOutput" scoped="" ref="0x107bfd4b8"/>
        <function-ref name="set" scoped="" ref="0x107bfd640"/>
        <function-ref name="clr" scoped="" ref="0x107bfd7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x107c00b88" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x107c00b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e878b8"/>
            <typename><typedef-ref name="TMicro" ref="0x106e87c10"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x107bd9930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x107bd6020" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x107bd6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e878b8"/>
            <typename><typedef-ref name="TMicro" ref="0x106e87c10"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x107bd6d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x107c2d410" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x107c2d410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e878b8"/>
            <typename><typedef-ref name="TMicro" ref="0x106e87c10"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x107c2b190"/>
        <function-ref name="clearOverflow" scoped="" ref="0x107c2baa0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x107c2b618"/>
        <function-ref name="overflow" scoped="" ref="0x107c2a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x107c27790" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x107c27790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e878b8"/>
            <typename><typedef-ref name="TMicro" ref="0x106e87c10"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x107c26578"/>
        <function-ref name="clearOverflow" scoped="" ref="0x107c25020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x107c26a00"/>
        <function-ref name="overflow" scoped="" ref="0x107c254a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x107c21de8" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x107c21de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x107c20170"/>
        <function-ref name="setClockSource" scoped="" ref="0x107c202f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x107c20480"/>
        <function-ref name="get" scoped="" ref="0x107c20608"/>
        <function-ref name="disableEvents" scoped="" ref="0x107c20790"/>
        <function-ref name="clearOverflow" scoped="" ref="0x107c20918"/>
        <function-ref name="getMode" scoped="" ref="0x107c20aa0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x107c20c28"/>
        <function-ref name="overflow" scoped="" ref="0x107c20db0"/>
        <function-ref name="setMode" scoped="" ref="0x107c1f020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x107c1f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x107c23e08" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x107c23e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e878b8"/>
            <typename><typedef-ref name="TMicro" ref="0x106e87c10"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x107c22be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x107c21548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x107c210c0"/>
        <function-ref name="overflow" scoped="" ref="0x107c219d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x107c03828" loc="3:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x107c03828"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x107c03b78"/>
        <function-ref name="isInput" scoped="" ref="0x107c03d00"/>
        <function-ref name="toggle" scoped="" ref="0x107c1b020"/>
        <function-ref name="isOutput" scoped="" ref="0x107c1b1a8"/>
        <function-ref name="get" scoped="" ref="0x107c1b330"/>
        <function-ref name="makeOutput" scoped="" ref="0x107c1b4b8"/>
        <function-ref name="set" scoped="" ref="0x107c1b640"/>
        <function-ref name="clr" scoped="" ref="0x107c1b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x107c19c18" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x107c19c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x107c18020"/>
        <function-ref name="isInput" scoped="" ref="0x107c181a8"/>
        <function-ref name="setResistor" scoped="" ref="0x107c18330"/>
        <function-ref name="toggle" scoped="" ref="0x107c184b8"/>
        <function-ref name="isOutput" scoped="" ref="0x107c18640"/>
        <function-ref name="getResistor" scoped="" ref="0x107c187c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x107c18950"/>
        <function-ref name="get" scoped="" ref="0x107c18ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x107c18c60"/>
        <function-ref name="getRaw" scoped="" ref="0x107c18de8"/>
        <function-ref name="set" scoped="" ref="0x107c17020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x107c171a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x107c17330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x107c175b8"/>
        <function-ref name="clr" scoped="" ref="0x107c17740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x107c1aae8" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x107c1aae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x107c1ae38"/>
        <function-ref name="isInput" scoped="" ref="0x107c19020"/>
        <function-ref name="toggle" scoped="" ref="0x107c191a8"/>
        <function-ref name="isOutput" scoped="" ref="0x107c19330"/>
        <function-ref name="get" scoped="" ref="0x107c194b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x107c19640"/>
        <function-ref name="set" scoped="" ref="0x107c197c8"/>
        <function-ref name="clr" scoped="" ref="0x107c19950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x107c15588" loc="14:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x107c15588"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x107c158d8"/>
        <function-ref name="stop" scoped="" ref="0x107c15a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x107c6d5f8" loc="46:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x107c6d5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x107c6d948"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x107c6dad0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x107c6dc58"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x107c6dde0"/>
        <function-ref name="setCca" scoped="" ref="0x107c6c020"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x107c6c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x107c69280" loc="47:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x107c69280"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x107c695d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x107c06870" loc="45:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x107c06870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x107c06bc0"/>
        <function-ref name="cancel" scoped="" ref="0x107c06d48"/>
        <function-ref name="modify" scoped="" ref="0x107c6d020"/>
        <function-ref name="sendDone" scoped="" ref="0x107c6d1a8"/>
        <function-ref name="resend" scoped="" ref="0x107c6d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisableRx" ref="0x107c660d0" loc="49:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DisableRx" scoped="" ref="0x107c660d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisableRx"/>
      </instance>
      <interface-functions>
        <function-ref name="enableRx" scoped="" ref="0x107c66420"/>
        <function-ref name="disableRx" scoped="" ref="0x107c665a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x107c060c0" loc="44:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x107c060c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x107c06410"/>
        <function-ref name="stop" scoped="" ref="0x107c06598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x107c69988" loc="48:../../chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x107c69988"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x107c69cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x107c614b0" loc="51:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x107c614b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x107c61800"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x107c61988"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x107c61b10"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x107c61c98"/>
        <function-ref name="setCca" scoped="" ref="0x107c61e20"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x107c60020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x107c58150" loc="58:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x107c58150"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e87150"/>
            <typename><typedef-ref name="T32khz" ref="0x106e874a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10631d020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x107c57700"/>
        <function-ref name="clear" scoped="" ref="0x107c57de0"/>
        <function-ref name="isValid" scoped="" ref="0x107c57020"/>
        <function-ref name="set" scoped="" ref="0x107c4f4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x107c3c3d0" loc="79:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x107c3c3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107c3c720"/>
        <function-ref name="write" scoped="" ref="0x107c3c8a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x107c3cc00" loc="80:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x107c3cc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107c3b020"/>
        <function-ref name="write" scoped="" ref="0x107c3b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x107c60428" loc="52:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x107c60428"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x107c60778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x107c3fa90" loc="73:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x107c3fa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107c3fde0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x107c4dba8" loc="60:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x107c4dba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x107c4c020"/>
        <function-ref name="disable" scoped="" ref="0x107c4c1a8"/>
        <function-ref name="captured" scoped="" ref="0x107c4c330"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x107c4c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x107c5f648" loc="55:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x107c5f648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e87150"/>
            <typename><typedef-ref name="T32khz" ref="0x106e874a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10631d020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x107c5ccc0"/>
        <function-ref name="fired" scoped="" ref="0x107c5ed50"/>
        <function-ref name="startAt" scoped="" ref="0x107c5c6b8"/>
        <function-ref name="isRunning" scoped="" ref="0x107c5c230"/>
        <function-ref name="getAlarm" scoped="" ref="0x107c5b190"/>
        <function-ref name="start" scoped="" ref="0x107c5e3f0"/>
        <function-ref name="stop" scoped="" ref="0x107c5e8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x107c5b628" loc="56:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x107c5b628"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x107c5b978"/>
        <function-ref name="setNetwork" scoped="" ref="0x107c5bb00"/>
        <function-ref name="getRssi" scoped="" ref="0x107c5bc88"/>
        <function-ref name="getNetwork" scoped="" ref="0x107c5be10"/>
        <function-ref name="getPower" scoped="" ref="0x107c5a020"/>
        <function-ref name="getLqi" scoped="" ref="0x107c5a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x107c413b0" loc="68:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x107c413b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107c41700"/>
        <function-ref name="write" scoped="" ref="0x107c41888"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x107c41c20" loc="69:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x107c41c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107c40020"/>
        <function-ref name="write" scoped="" ref="0x107c401a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x107c9de10" loc="84:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x107c9de10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x107ca01a8"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x107ca0330"/>
        <function-ref name="sfd" scoped="" ref="0x107ca04b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x107c626b8" loc="50:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x107c626b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x107c62a08"/>
        <function-ref name="cancel" scoped="" ref="0x107c62b90"/>
        <function-ref name="modify" scoped="" ref="0x107c62d18"/>
        <function-ref name="sendDone" scoped="" ref="0x107c61020"/>
        <function-ref name="resend" scoped="" ref="0x107c611a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x107c43b28" loc="66:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x107c43b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x107c43e78"/>
        <function-ref name="abortRelease" scoped="" ref="0x107c42030"/>
        <function-ref name="attemptRelease" scoped="" ref="0x107c421b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x107c3e1d8" loc="74:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x107c3e1d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107c3e728"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x107c47b10" loc="62:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x107c47b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x107c47e60"/>
        <function-ref name="isInput" scoped="" ref="0x107c45020"/>
        <function-ref name="toggle" scoped="" ref="0x107c451a8"/>
        <function-ref name="isOutput" scoped="" ref="0x107c45330"/>
        <function-ref name="get" scoped="" ref="0x107c454b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x107c45640"/>
        <function-ref name="set" scoped="" ref="0x107c457c8"/>
        <function-ref name="clr" scoped="" ref="0x107c45950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x107c647d0" loc="48:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x107c647d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x107c64b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x107c5a4d8" loc="57:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x107c5a4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x107c5a828"/>
        <function-ref name="getHeader" scoped="" ref="0x107c5a9b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x107c5ab38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x107c4d020" loc="59:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x107c4d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x107c4d370"/>
        <function-ref name="isSet" scoped="" ref="0x107c4d4f8"/>
        <function-ref name="cancel" scoped="" ref="0x107c4d680"/>
        <function-ref name="set" scoped="" ref="0x107c4d808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x107c3ead8" loc="75:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x107c3ead8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107c3ee28"/>
        <function-ref name="write" scoped="" ref="0x107c3d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x107c44e68" loc="65:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x107c44e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x107c431e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x107c43370"/>
        <function-ref name="request" scoped="" ref="0x107c434f8"/>
        <function-ref name="granted" scoped="" ref="0x107c43680"/>
        <function-ref name="isOwner" scoped="" ref="0x107c43808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x107c4c800" loc="61:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x107c4c800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x107c4cc50"/>
        <function-ref name="isInput" scoped="" ref="0x107c4cdd8"/>
        <function-ref name="toggle" scoped="" ref="0x107c47020"/>
        <function-ref name="isOutput" scoped="" ref="0x107c471a8"/>
        <function-ref name="get" scoped="" ref="0x107c47330"/>
        <function-ref name="makeOutput" scoped="" ref="0x107c474b8"/>
        <function-ref name="set" scoped="" ref="0x107c47640"/>
        <function-ref name="clr" scoped="" ref="0x107c477c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x107c3b500" loc="81:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x107c3b500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107c3b850"/>
        <function-ref name="write" scoped="" ref="0x107c3b9d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x107c3bd48" loc="82:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x107c3bd48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107ca20d8"/>
        <function-ref name="write" scoped="" ref="0x107ca2260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x107c40520" loc="70:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x107c40520"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107c40870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x107c45c98" loc="63:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x107c45c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x107c44020"/>
        <function-ref name="isInput" scoped="" ref="0x107c441a8"/>
        <function-ref name="toggle" scoped="" ref="0x107c44330"/>
        <function-ref name="isOutput" scoped="" ref="0x107c444b8"/>
        <function-ref name="get" scoped="" ref="0x107c44640"/>
        <function-ref name="makeOutput" scoped="" ref="0x107c447c8"/>
        <function-ref name="set" scoped="" ref="0x107c44950"/>
        <function-ref name="clr" scoped="" ref="0x107c44ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x107ca0770" loc="85:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x107ca0770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x107ca0ac0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x107ca0c48"/>
        <function-ref name="led1On" scoped="" ref="0x107ca0dd0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x107c9f020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x107c9f1a8"/>
        <function-ref name="get" scoped="" ref="0x107c9f330"/>
        <function-ref name="led1Off" scoped="" ref="0x107c9f4b8"/>
        <function-ref name="led2Off" scoped="" ref="0x107c9fad8"/>
        <function-ref name="set" scoped="" ref="0x107c9f640"/>
        <function-ref name="led0On" scoped="" ref="0x107c9f7c8"/>
        <function-ref name="led2On" scoped="" ref="0x107c9f950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x107c3f3a0" loc="72:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x107c3f3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107c3f6f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x107c3daa8" loc="78:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x107c3daa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107c3ddf8"/>
        <function-ref name="write" scoped="" ref="0x107c3c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisableRx" ref="0x107c9cbb8" loc="89:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DisableRx" scoped="" ref="0x107c9cbb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisableRx"/>
      </instance>
      <interface-functions>
        <function-ref name="enableRx" scoped="" ref="0x107c9b020"/>
        <function-ref name="disableRx" scoped="" ref="0x107c9b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x107c9fe78" loc="87:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x107c9fe78"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107c9c1f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x107c64e10" loc="49:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x107c64e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x107c621a8"/>
        <function-ref name="stop" scoped="" ref="0x107c62330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x107c42528" loc="67:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x107c42528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x107c42878"/>
        <function-ref name="writeDone" scoped="" ref="0x107c42a00"/>
        <function-ref name="write" scoped="" ref="0x107c42b88"/>
        <function-ref name="beginRead" scoped="" ref="0x107c42d10"/>
        <function-ref name="readDone" scoped="" ref="0x107c41020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x107c40bf0" loc="71:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x107c40bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107c3f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x107c3d3a8" loc="77:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x107c3d3a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107c3d6f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x107c60b70" loc="53:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x107c60b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x107c5f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x107c9c580" loc="88:../../chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x107c9c580"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107c9c8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x107d39a88" loc="69:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x107d39a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107d38020"/>
        <function-ref name="write" scoped="" ref="0x107d381a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x107cda100" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x107cda100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107cda450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x107d3ca88" loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x107d3ca88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107d3cdd8"/>
        <function-ref name="write" scoped="" ref="0x107d3b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x107d37470" loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x107d37470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107d377c0"/>
        <function-ref name="write" scoped="" ref="0x107d37948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x107d30c10" loc="86:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x107d30c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107d2e020"/>
        <function-ref name="write" scoped="" ref="0x107d2e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x107d37c10" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x107d37c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107d35020"/>
        <function-ref name="write" scoped="" ref="0x107d351a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x107d232e8" loc="108:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x107d232e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107d23638"/>
        <function-ref name="write" scoped="" ref="0x107d237c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x107d252e8" loc="104:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x107d252e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107d25638"/>
        <function-ref name="write" scoped="" ref="0x107d257c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x107cd83a0" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x107cd83a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107cd86f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x107d2b470" loc="93:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x107d2b470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107d2b7c0"/>
        <function-ref name="write" scoped="" ref="0x107d2b948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x107d262e8" loc="102:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x107d262e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107d26638"/>
        <function-ref name="write" scoped="" ref="0x107d267c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x107d3ba88" loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x107d3ba88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107d3bdd8"/>
        <function-ref name="write" scoped="" ref="0x107d3a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x107d3aa88" loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x107d3aa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107d3add8"/>
        <function-ref name="write" scoped="" ref="0x107d39020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x107d31470" loc="83:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x107d31470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107d317c0"/>
        <function-ref name="write" scoped="" ref="0x107d31948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x107d33c10" loc="79:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x107d33c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107d32020"/>
        <function-ref name="write" scoped="" ref="0x107d321a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x107d35470" loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x107d35470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107d357c0"/>
        <function-ref name="write" scoped="" ref="0x107d35948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x107cdca18" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x107cdca18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x107cdcd68"/>
        <function-ref name="abortRelease" scoped="" ref="0x107cdb020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x107cdb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x107cd7c50" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x107cd7c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107d3f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x107d3f2e8" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x107d3f2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107d3f738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x107d2aa38" loc="95:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x107d2aa38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107d2ad88"/>
        <function-ref name="write" scoped="" ref="0x107d29020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x107d3fa00" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x107d3fa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107d3fd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x107d26a88" loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x107d26a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107d26dd8"/>
        <function-ref name="write" scoped="" ref="0x107d25020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x107cd7020" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x107cd7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107cd7370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x107d2cc10" loc="92:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x107d2cc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107d2b020"/>
        <function-ref name="write" scoped="" ref="0x107d2b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x107d3a2e8" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x107d3a2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107d3a638"/>
        <function-ref name="write" scoped="" ref="0x107d3a7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x107d3b2e8" loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x107d3b2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107d3b638"/>
        <function-ref name="write" scoped="" ref="0x107d3b7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x107cdba88" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x107cdba88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107cdbdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x107d2dc10" loc="90:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x107d2dc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107d2c020"/>
        <function-ref name="write" scoped="" ref="0x107d2c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x107d2e470" loc="87:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x107d2e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107d2e7c0"/>
        <function-ref name="write" scoped="" ref="0x107d2e948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x107d2c470" loc="91:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x107d2c470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107d2c7c0"/>
        <function-ref name="write" scoped="" ref="0x107d2c948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x107d24a88" loc="107:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x107d24a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107d24dd8"/>
        <function-ref name="write" scoped="" ref="0x107d23020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x107d25a88" loc="105:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x107d25a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107d25dd8"/>
        <function-ref name="write" scoped="" ref="0x107d24020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x107d32470" loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x107d32470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107d327c0"/>
        <function-ref name="write" scoped="" ref="0x107d32948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x107d2ec10" loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x107d2ec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107d2d020"/>
        <function-ref name="write" scoped="" ref="0x107d2d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x107d27a88" loc="101:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x107d27a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107d27dd8"/>
        <function-ref name="write" scoped="" ref="0x107d26020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x107d34470" loc="76:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x107d34470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107d347c0"/>
        <function-ref name="write" scoped="" ref="0x107d34948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x107d23a88" loc="111:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x107d23a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x107d23dd8"/>
        <function-ref name="writeDone" scoped="" ref="0x107d22020"/>
        <function-ref name="write" scoped="" ref="0x107d221a8"/>
        <function-ref name="beginRead" scoped="" ref="0x107d22330"/>
        <function-ref name="readDone" scoped="" ref="0x107d224b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x107cdb470" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x107cdb470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107cdb7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x107d3c2e8" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x107d3c2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107d3c638"/>
        <function-ref name="write" scoped="" ref="0x107d3c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x107d392e8" loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x107d392e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107d39638"/>
        <function-ref name="write" scoped="" ref="0x107d397c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x107d31c10" loc="84:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x107d31c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107d30020"/>
        <function-ref name="write" scoped="" ref="0x107d301a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x107d35c10" loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x107d35c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107d34020"/>
        <function-ref name="write" scoped="" ref="0x107d341a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x107d30470" loc="85:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x107d30470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107d307c0"/>
        <function-ref name="write" scoped="" ref="0x107d30948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x107d38470" loc="70:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x107d38470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107d387c0"/>
        <function-ref name="write" scoped="" ref="0x107d38948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x107cda718" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x107cda718"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107cdaa68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x107d38c10" loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x107d38c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107d37020"/>
        <function-ref name="write" scoped="" ref="0x107d371a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x107cddda0" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x107cddda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x107cdc170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x107cdc2f8"/>
        <function-ref name="request" scoped="" ref="0x107cdc480"/>
        <function-ref name="granted" scoped="" ref="0x107cdc608"/>
        <function-ref name="isOwner" scoped="" ref="0x107cdc790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x107d3e060" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x107d3e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107d3e3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x107d3ec90" loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x107d3ec90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107d3c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x107d272e8" loc="100:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x107d272e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107d27638"/>
        <function-ref name="write" scoped="" ref="0x107d277c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x107d29a88" loc="99:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x107d29a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107d29dd8"/>
        <function-ref name="write" scoped="" ref="0x107d27020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x107cd7638" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x107cd7638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107cd7988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x107d292e8" loc="96:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x107d292e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107d29638"/>
        <function-ref name="write" scoped="" ref="0x107d297c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x107d242e8" loc="106:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x107d242e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107d24638"/>
        <function-ref name="write" scoped="" ref="0x107d247c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x107d32c10" loc="81:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x107d32c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107d31020"/>
        <function-ref name="write" scoped="" ref="0x107d311a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x107d2d470" loc="89:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x107d2d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107d2d7c0"/>
        <function-ref name="write" scoped="" ref="0x107d2d948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x107cdad30" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x107cdad30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107cd80d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x107cd89b8" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x107cd89b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107cd8d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x107d34c10" loc="77:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x107d34c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107d33020"/>
        <function-ref name="write" scoped="" ref="0x107d331a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x107d3e678" loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x107d3e678"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107d3e9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x107d33470" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x107d33470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107d337c0"/>
        <function-ref name="write" scoped="" ref="0x107d33948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x107d2bc10" loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x107d2bc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107d2a5e8"/>
        <function-ref name="write" scoped="" ref="0x107d2a770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x107d22780" loc="112:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x107d22780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x107d22ad0"/>
        <function-ref name="writeDone" scoped="" ref="0x107d22c58"/>
        <function-ref name="write" scoped="" ref="0x107d22de0"/>
        <function-ref name="beginRead" scoped="" ref="0x107d20020"/>
        <function-ref name="readDone" scoped="" ref="0x107d201a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x107d124b8" loc="42:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x107d124b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x107d12808"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x107d12990"/>
        <function-ref name="sfd" scoped="" ref="0x107d12b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisableFifoP" ref="0x107d0ed80" loc="46:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DisableFifoP" scoped="" ref="0x107d0ed80"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisableFifoP"/>
      </instance>
      <interface-functions>
        <function-ref name="enableFifoP" scoped="" ref="0x107d10170"/>
        <function-ref name="disableFifoP" scoped="" ref="0x107d102f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x107d12de8" loc="43:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x107d12de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x107d11170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x107d11578" loc="44:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x107d11578"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x107d118c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x107d15ba0" loc="41:../../chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x107d15ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x107d12020"/>
        <function-ref name="stop" scoped="" ref="0x107d121a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x107d72500" loc="56:../../chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x107d72500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x107d72850"/>
        <function-ref name="isInput" scoped="" ref="0x107d729d8"/>
        <function-ref name="toggle" scoped="" ref="0x107d72b60"/>
        <function-ref name="isOutput" scoped="" ref="0x107d72ce8"/>
        <function-ref name="get" scoped="" ref="0x107d72e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x107d71020"/>
        <function-ref name="set" scoped="" ref="0x107d711a8"/>
        <function-ref name="clr" scoped="" ref="0x107d71330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x107d6a7d8" loc="66:../../chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x107d6a7d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x107d6ab28"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x107d6acb0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x107d6ae38"/>
        <function-ref name="syncDone" scoped="" ref="0x107d69020"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x107d691a8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x107d69330"/>
        <function-ref name="setChannel" scoped="" ref="0x107d694b8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x107d69640"/>
        <function-ref name="setPanAddr" scoped="" ref="0x107d697c8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x107d69950"/>
        <function-ref name="getExtAddr" scoped="" ref="0x107d69ad8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x107d69c60"/>
        <function-ref name="sync" scoped="" ref="0x107d69de8"/>
        <function-ref name="getChannel" scoped="" ref="0x107d68120"/>
        <function-ref name="getPanAddr" scoped="" ref="0x107d682a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x107d523f8" loc="156:../../chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x107d523f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x107d52748"/>
        <function-ref name="runTask" scoped="" ref="0x107d528d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x107d68870" loc="67:../../chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x107d68870"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e87150"/>
            <typename><typedef-ref name="T32khz" ref="0x106e874a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10631d020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x107d67d40"/>
        <function-ref name="clear" scoped="" ref="0x107d66458"/>
        <function-ref name="isValid" scoped="" ref="0x107d67660"/>
        <function-ref name="set" scoped="" ref="0x107d66b38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x107d71690" loc="57:../../chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x107d71690"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x107d719e0"/>
        <function-ref name="isInput" scoped="" ref="0x107d71b68"/>
        <function-ref name="toggle" scoped="" ref="0x107d71cf0"/>
        <function-ref name="isOutput" scoped="" ref="0x107d71e78"/>
        <function-ref name="get" scoped="" ref="0x107d70030"/>
        <function-ref name="makeOutput" scoped="" ref="0x107d701b8"/>
        <function-ref name="set" scoped="" ref="0x107d70340"/>
        <function-ref name="clr" scoped="" ref="0x107d704c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x107d63558" loc="71:../../chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x107d63558"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107d638a8"/>
        <function-ref name="write" scoped="" ref="0x107d63a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x107d63d88" loc="72:../../chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x107d63d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107d62170"/>
        <function-ref name="write" scoped="" ref="0x107d622f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x107d61020" loc="74:../../chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x107d61020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107d61370"/>
        <function-ref name="write" scoped="" ref="0x107d614f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x107d6b020" loc="64:../../chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x107d6b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x107d6b370"/>
        <function-ref name="setNetwork" scoped="" ref="0x107d6b4f8"/>
        <function-ref name="getRssi" scoped="" ref="0x107d6b680"/>
        <function-ref name="getNetwork" scoped="" ref="0x107d6b808"/>
        <function-ref name="getPower" scoped="" ref="0x107d6b990"/>
        <function-ref name="getLqi" scoped="" ref="0x107d6bb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x107d0b330" loc="49:../../chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x107d0b330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x107d0b680"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x107d0b808"/>
        <function-ref name="sfd" scoped="" ref="0x107d0b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisableFifoP" ref="0x107d74a80" loc="53:../../chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DisableFifoP" scoped="" ref="0x107d74a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisableFifoP"/>
      </instance>
      <interface-functions>
        <function-ref name="enableFifoP" scoped="" ref="0x107d74dd0"/>
        <function-ref name="disableFifoP" scoped="" ref="0x107d73020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChaseListen" ref="0x107d609e0" loc="79:../../chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChaseListen" scoped="" ref="0x107d609e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChaseListen"/>
      </instance>
      <interface-functions>
        <function-ref name="reboot_rec" scoped="" ref="0x107d60d30"/>
        <function-ref name="begin_rec" scoped="" ref="0x107d5f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x107d6c0f0" loc="62:../../chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x107d6c0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107d6c540"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x107d73368" loc="55:../../chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x107d73368"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x107d736b8"/>
        <function-ref name="isInput" scoped="" ref="0x107d73840"/>
        <function-ref name="toggle" scoped="" ref="0x107d739c8"/>
        <function-ref name="isOutput" scoped="" ref="0x107d73b50"/>
        <function-ref name="get" scoped="" ref="0x107d73cd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x107d73e60"/>
        <function-ref name="set" scoped="" ref="0x107d72020"/>
        <function-ref name="clr" scoped="" ref="0x107d721a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x107d61888" loc="75:../../chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x107d61888"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107d61dd8"/>
        <function-ref name="write" scoped="" ref="0x107d60020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x107d0c4a0" loc="47:../../chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x107d0c4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x107d0c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x107d6be48" loc="65:../../chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x107d6be48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x107d6a1c0"/>
        <function-ref name="getHeader" scoped="" ref="0x107d6a348"/>
        <function-ref name="getMetadata" scoped="" ref="0x107d6a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x107d0bc60" loc="50:../../chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x107d0bc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x107d74020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x107d6e538" loc="60:../../chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x107d6e538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x107d6e888"/>
        <function-ref name="immediateRequest" scoped="" ref="0x107d6ea10"/>
        <function-ref name="request" scoped="" ref="0x107d6eb98"/>
        <function-ref name="granted" scoped="" ref="0x107d6ed20"/>
        <function-ref name="isOwner" scoped="" ref="0x107d6d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x107d62650" loc="73:../../chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x107d62650"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107d629a0"/>
        <function-ref name="write" scoped="" ref="0x107d62b28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x107d6d390" loc="61:../../chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x107d6d390"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x107d6d6e0"/>
        <function-ref name="writeDone" scoped="" ref="0x107d6d868"/>
        <function-ref name="write" scoped="" ref="0x107d6d9f0"/>
        <function-ref name="beginRead" scoped="" ref="0x107d6db78"/>
        <function-ref name="readDone" scoped="" ref="0x107d6dd00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x107d60398" loc="76:../../chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x107d60398"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107d606e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x107d74428" loc="51:../../chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x107d74428"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x107d74778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x107d5fa98" loc="83:../../chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x107d5fa98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x107d5fde8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x107d5e020"/>
        <function-ref name="led1On" scoped="" ref="0x107d5e1a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x107d5e330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x107d5e4b8"/>
        <function-ref name="get" scoped="" ref="0x107d5e640"/>
        <function-ref name="led1Off" scoped="" ref="0x107d5e7c8"/>
        <function-ref name="led2Off" scoped="" ref="0x107d5ede8"/>
        <function-ref name="set" scoped="" ref="0x107d5e950"/>
        <function-ref name="led0On" scoped="" ref="0x107d5ead8"/>
        <function-ref name="led2On" scoped="" ref="0x107d5ec60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x107d64b48" loc="70:../../chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x107d64b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107d63020"/>
        <function-ref name="write" scoped="" ref="0x107d631a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x107d64448" loc="69:../../chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x107d64448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107d64798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisableRx" ref="0x107d5f308" loc="80:../../chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DisableRx" scoped="" ref="0x107d5f308"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisableRx"/>
      </instance>
      <interface-functions>
        <function-ref name="enableRx" scoped="" ref="0x107d5f658"/>
        <function-ref name="disableRx" scoped="" ref="0x107d5f7e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x107d708a8" loc="58:../../chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x107d708a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x107d70bf8"/>
        <function-ref name="disable" scoped="" ref="0x107d70d80"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x107d6e020"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x107d6e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x107d6c8e0" loc="63:../../chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x107d6c8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107d6cc30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x107d0cae0" loc="48:../../chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x107d0cae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x107d0ce30"/>
        <function-ref name="stop" scoped="" ref="0x107d0b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x107dbb398" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x107dbb398"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x107dbb6e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x107dc48b0" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x107dc48b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x107dc4c00"/>
        <function-ref name="setNetwork" scoped="" ref="0x107dc4d88"/>
        <function-ref name="getRssi" scoped="" ref="0x107dc1020"/>
        <function-ref name="getNetwork" scoped="" ref="0x107dc11a8"/>
        <function-ref name="getPower" scoped="" ref="0x107dc1330"/>
        <function-ref name="getLqi" scoped="" ref="0x107dc14b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x107dbbd80" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x107dbbd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e87150"/>
            <typename><typedef-ref name="T32khz" ref="0x106e874a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10631d020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x107dbc278"/>
        <function-ref name="clear" scoped="" ref="0x107dbc958"/>
        <function-ref name="isValid" scoped="" ref="0x107dbeaf8"/>
        <function-ref name="set" scoped="" ref="0x107dba088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x107dc0310" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x107dc0310"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x107dc0660"/>
        <function-ref name="getHeader" scoped="" ref="0x107dc07e8"/>
        <function-ref name="getMetadata" scoped="" ref="0x107dc0970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x107db6870" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x107db6870"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x107db6bc0"/>
        <function-ref name="isSet" scoped="" ref="0x107db6d48"/>
        <function-ref name="cancel" scoped="" ref="0x107db4020"/>
        <function-ref name="set" scoped="" ref="0x107db41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x107dbac58" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x107dbac58"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e88990"/>
            <typename><typedef-ref name="TMilli" ref="0x106e88ce8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10631d020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x107db70f8"/>
        <function-ref name="clear" scoped="" ref="0x107db77d8"/>
        <function-ref name="isValid" scoped="" ref="0x107db89f0"/>
        <function-ref name="set" scoped="" ref="0x107db6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x107dc1850" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x107dc1850"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x107dc1ba0"/>
        <function-ref name="noAck" scoped="" ref="0x107dc1d28"/>
        <function-ref name="wasAcked" scoped="" ref="0x107dc0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x107daf320" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x107daf320"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x107daf670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x107db1160" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x107db1160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x107db14b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x107db1638"/>
        <function-ref name="getRssi" scoped="" ref="0x107db17c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x107db1948"/>
        <function-ref name="getPower" scoped="" ref="0x107db1ad0"/>
        <function-ref name="getLqi" scoped="" ref="0x107db1c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x107e12308" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x107e12308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x107e12658"/>
        <function-ref name="payloadLength" scoped="" ref="0x107e127e0"/>
        <function-ref name="getPayload" scoped="" ref="0x107e12968"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x107e12af0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x107e12c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x107dafd08" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x107dafd08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e87150"/>
            <typename><typedef-ref name="T32khz" ref="0x106e874a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10631d020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x107dad1f0"/>
        <function-ref name="clear" scoped="" ref="0x107dad8d0"/>
        <function-ref name="isValid" scoped="" ref="0x107daeac0"/>
        <function-ref name="set" scoped="" ref="0x107dab020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x107db0970" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x107db0970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x107db0cc0"/>
        <function-ref name="getHeader" scoped="" ref="0x107db0e48"/>
        <function-ref name="getMetadata" scoped="" ref="0x107daf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x107e136c8" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x107e136c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x107e13a18"/>
        <function-ref name="isSet" scoped="" ref="0x107e13ba0"/>
        <function-ref name="cancel" scoped="" ref="0x107e13d28"/>
        <function-ref name="set" scoped="" ref="0x107e12020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x107e111d8" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x107e111d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e87150"/>
            <typename><typedef-ref name="T32khz" ref="0x106e874a8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x107e11d58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x107e10438" loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x107e10438"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e88990"/>
            <typename><typedef-ref name="TMilli" ref="0x106e88ce8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x107e0f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x107dabbf0" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x107dabbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e88990"/>
            <typename><typedef-ref name="TMilli" ref="0x106e88ce8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10631d020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x107e15088"/>
        <function-ref name="clear" scoped="" ref="0x107e15768"/>
        <function-ref name="isValid" scoped="" ref="0x107daa970"/>
        <function-ref name="set" scoped="" ref="0x107e15e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x107db0020" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x107db0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x107db0370"/>
        <function-ref name="noAck" scoped="" ref="0x107db04f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x107db0680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x107e2f020" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x107e2f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e87150"/>
            <typename><typedef-ref name="T32khz" ref="0x106e874a8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x107e2fba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x107e2e230" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x107e2e230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e87150"/>
            <typename><typedef-ref name="T32khz" ref="0x106e874a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10631d020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x107e2d020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x107e2d930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x107e2d4a8"/>
        <function-ref name="overflow" scoped="" ref="0x107e2ddb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x107e29020" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x107e29020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e88990"/>
            <typename><typedef-ref name="TMilli" ref="0x106e88ce8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x107e262b8"/>
        <function-ref name="fired" scoped="" ref="0x107e28978"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x107e276c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x107e27278"/>
        <function-ref name="getdt" scoped="" ref="0x107e26b58"/>
        <function-ref name="gett0" scoped="" ref="0x107e26708"/>
        <function-ref name="isRunning" scoped="" ref="0x107e28dc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x107e29b68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x107e27c98"/>
        <function-ref name="startOneShot" scoped="" ref="0x107e28088"/>
        <function-ref name="stop" scoped="" ref="0x107e28528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x107e83a88" loc="69:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x107e83a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107e82020"/>
        <function-ref name="write" scoped="" ref="0x107e821a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x107e1f020" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x107e1f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107e1f370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x107e19a88" loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x107e19a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107e19dd8"/>
        <function-ref name="write" scoped="" ref="0x107e17020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x107e81470" loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x107e81470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107e817c0"/>
        <function-ref name="write" scoped="" ref="0x107e81948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x107e7ac10" loc="86:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x107e7ac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107e79020"/>
        <function-ref name="write" scoped="" ref="0x107e791a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x107e81c10" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x107e81c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107e80020"/>
        <function-ref name="write" scoped="" ref="0x107e801a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x107e6d2e8" loc="108:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x107e6d2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107e6d638"/>
        <function-ref name="write" scoped="" ref="0x107e6d7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x107e6f2e8" loc="104:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x107e6f2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107e6f638"/>
        <function-ref name="write" scoped="" ref="0x107e6f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x107e1e2e8" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x107e1e2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107e1e638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x107e75470" loc="93:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x107e75470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107e757c0"/>
        <function-ref name="write" scoped="" ref="0x107e75948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x107e702e8" loc="102:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x107e702e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107e70638"/>
        <function-ref name="write" scoped="" ref="0x107e707c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x107e17a88" loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x107e17a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107e17dd8"/>
        <function-ref name="write" scoped="" ref="0x107e16020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x107e16a88" loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x107e16a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107e16dd8"/>
        <function-ref name="write" scoped="" ref="0x107e83020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x107e7b470" loc="83:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x107e7b470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107e7b7c0"/>
        <function-ref name="write" scoped="" ref="0x107e7b948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x107e7dc10" loc="79:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x107e7dc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107e7c020"/>
        <function-ref name="write" scoped="" ref="0x107e7c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x107e80470" loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x107e80470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107e807c0"/>
        <function-ref name="write" scoped="" ref="0x107e80948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x107e218c8" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x107e218c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x107e21c18"/>
        <function-ref name="abortRelease" scoped="" ref="0x107e21da0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x107e20020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x107e1cc50" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x107e1cc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107e1b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x107e1b2e8" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x107e1b2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107e1b738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x107e74a38" loc="95:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x107e74a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107e74d88"/>
        <function-ref name="write" scoped="" ref="0x107e73020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x107e1ba00" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x107e1ba00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107e1bd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x107e70a88" loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x107e70a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107e70dd8"/>
        <function-ref name="write" scoped="" ref="0x107e6f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x107e1c020" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x107e1c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107e1c370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x107e76c10" loc="92:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x107e76c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107e75020"/>
        <function-ref name="write" scoped="" ref="0x107e751a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x107e162e8" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x107e162e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107e16638"/>
        <function-ref name="write" scoped="" ref="0x107e167c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x107e172e8" loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x107e172e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107e17638"/>
        <function-ref name="write" scoped="" ref="0x107e177c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x107e20900" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x107e20900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107e20c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x107e77c10" loc="90:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x107e77c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107e76020"/>
        <function-ref name="write" scoped="" ref="0x107e761a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x107e79470" loc="87:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x107e79470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107e797c0"/>
        <function-ref name="write" scoped="" ref="0x107e79948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x107e76470" loc="91:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x107e76470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107e767c0"/>
        <function-ref name="write" scoped="" ref="0x107e76948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x107e6ea88" loc="107:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x107e6ea88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107e6edd8"/>
        <function-ref name="write" scoped="" ref="0x107e6d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x107e6fa88" loc="105:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x107e6fa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107e6fdd8"/>
        <function-ref name="write" scoped="" ref="0x107e6e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x107e7c470" loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x107e7c470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107e7c7c0"/>
        <function-ref name="write" scoped="" ref="0x107e7c948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x107e79c10" loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x107e79c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107e77020"/>
        <function-ref name="write" scoped="" ref="0x107e771a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x107e72a88" loc="101:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x107e72a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107e72dd8"/>
        <function-ref name="write" scoped="" ref="0x107e70020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x107e7e470" loc="76:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x107e7e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107e7e7c0"/>
        <function-ref name="write" scoped="" ref="0x107e7e948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x107e6da88" loc="111:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x107e6da88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x107e6ddd8"/>
        <function-ref name="writeDone" scoped="" ref="0x107e6c020"/>
        <function-ref name="write" scoped="" ref="0x107e6c1a8"/>
        <function-ref name="beginRead" scoped="" ref="0x107e6c330"/>
        <function-ref name="readDone" scoped="" ref="0x107e6c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x107e202e8" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x107e202e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107e20638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x107e192e8" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x107e192e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107e19638"/>
        <function-ref name="write" scoped="" ref="0x107e197c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x107e832e8" loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x107e832e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107e83638"/>
        <function-ref name="write" scoped="" ref="0x107e837c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x107e7bc10" loc="84:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x107e7bc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107e7a020"/>
        <function-ref name="write" scoped="" ref="0x107e7a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x107e80c10" loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x107e80c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107e7e020"/>
        <function-ref name="write" scoped="" ref="0x107e7e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x107e7a470" loc="85:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x107e7a470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107e7a7c0"/>
        <function-ref name="write" scoped="" ref="0x107e7a948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x107e82470" loc="70:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x107e82470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107e827c0"/>
        <function-ref name="write" scoped="" ref="0x107e82948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x107e1f638" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x107e1f638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107e1f988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x107e82c10" loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x107e82c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107e81020"/>
        <function-ref name="write" scoped="" ref="0x107e811a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x107e22c60" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x107e22c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x107e21020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x107e211a8"/>
        <function-ref name="request" scoped="" ref="0x107e21330"/>
        <function-ref name="granted" scoped="" ref="0x107e214b8"/>
        <function-ref name="isOwner" scoped="" ref="0x107e21640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x107e1a060" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x107e1a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107e1a3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x107e1ac90" loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x107e1ac90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107e19020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x107e722e8" loc="100:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x107e722e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107e72638"/>
        <function-ref name="write" scoped="" ref="0x107e727c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x107e73a88" loc="99:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x107e73a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107e73dd8"/>
        <function-ref name="write" scoped="" ref="0x107e72020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x107e1c638" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x107e1c638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107e1c988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x107e732e8" loc="96:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x107e732e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107e73638"/>
        <function-ref name="write" scoped="" ref="0x107e737c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x107e6e2e8" loc="106:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x107e6e2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107e6e638"/>
        <function-ref name="write" scoped="" ref="0x107e6e7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x107e7cc10" loc="81:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x107e7cc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107e7b020"/>
        <function-ref name="write" scoped="" ref="0x107e7b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x107e77470" loc="89:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x107e77470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107e777c0"/>
        <function-ref name="write" scoped="" ref="0x107e77948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x107e1fc50" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x107e1fc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107e1e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x107e1e900" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x107e1e900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107e1ec50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x107e7ec10" loc="77:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x107e7ec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107e7d020"/>
        <function-ref name="write" scoped="" ref="0x107e7d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x107e1a678" loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x107e1a678"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x107e1a9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x107e7d470" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x107e7d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107e7d7c0"/>
        <function-ref name="write" scoped="" ref="0x107e7d948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x107e75c10" loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x107e75c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x107e745e8"/>
        <function-ref name="write" scoped="" ref="0x107e74770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x107e6c780" loc="112:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x107e6c780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x107e6cad0"/>
        <function-ref name="writeDone" scoped="" ref="0x107e6cc58"/>
        <function-ref name="write" scoped="" ref="0x107e6cde0"/>
        <function-ref name="beginRead" scoped="" ref="0x107e6b020"/>
        <function-ref name="readDone" scoped="" ref="0x107e6b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x107eb7268" loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x107eb7268"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x107eb75b8"/>
        <function-ref name="toIdle" scoped="" ref="0x107eb7740"/>
        <function-ref name="isState" scoped="" ref="0x107eb78c8"/>
        <function-ref name="isIdle" scoped="" ref="0x107eb7a50"/>
        <function-ref name="requestState" scoped="" ref="0x107eb7bd8"/>
        <function-ref name="forceState" scoped="" ref="0x107eb7d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x107eaf0a0" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="ChaseC.sleepTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x107eaf0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e88990"/>
            <typename><typedef-ref name="TMilli" ref="0x106e88ce8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x107eab2b8"/>
        <function-ref name="fired" scoped="" ref="0x107ead9b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x107eac6c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x107eac278"/>
        <function-ref name="getdt" scoped="" ref="0x107eabb58"/>
        <function-ref name="gett0" scoped="" ref="0x107eab708"/>
        <function-ref name="isRunning" scoped="" ref="0x107eade00"/>
        <function-ref name="startPeriodic" scoped="" ref="0x107eafbe8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x107eacc98"/>
        <function-ref name="startOneShot" scoped="" ref="0x107ead0c0"/>
        <function-ref name="stop" scoped="" ref="0x107ead560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x107ea95e8" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="ChaseC.delayTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x107ea95e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e88990"/>
            <typename><typedef-ref name="TMilli" ref="0x106e88ce8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x107ea58f0"/>
        <function-ref name="fired" scoped="" ref="0x107ea6020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x107ea6d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x107ea68c0"/>
        <function-ref name="getdt" scoped="" ref="0x107ea41c0"/>
        <function-ref name="gett0" scoped="" ref="0x107ea5d40"/>
        <function-ref name="isRunning" scoped="" ref="0x107ea6470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x107ea7158"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x107ea5320"/>
        <function-ref name="startOneShot" scoped="" ref="0x107ea75f8"/>
        <function-ref name="stop" scoped="" ref="0x107ea7a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x107ea2aa0" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="ChaseC.randTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x107ea2aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e88990"/>
            <typename><typedef-ref name="TMilli" ref="0x106e88ce8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x107e9fd60"/>
        <function-ref name="fired" scoped="" ref="0x107ea0470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x107e9f1c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x107ea0d10"/>
        <function-ref name="getdt" scoped="" ref="0x107e9e648"/>
        <function-ref name="gett0" scoped="" ref="0x107e9e1f8"/>
        <function-ref name="isRunning" scoped="" ref="0x107ea08c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x107ea1620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x107e9f790"/>
        <function-ref name="startOneShot" scoped="" ref="0x107ea1ac0"/>
        <function-ref name="stop" scoped="" ref="0x107ea0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x107ec1d28" loc="29:../../net/ChaseP.nc">
      <component-ref qname="ChaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x107ec1d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x107ec00a0"/>
        <function-ref name="isInput" scoped="" ref="0x107ec0228"/>
        <function-ref name="toggle" scoped="" ref="0x107ec03b0"/>
        <function-ref name="isOutput" scoped="" ref="0x107ec0538"/>
        <function-ref name="get" scoped="" ref="0x107ec06c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x107ec0848"/>
        <function-ref name="set" scoped="" ref="0x107ec09d0"/>
        <function-ref name="clr" scoped="" ref="0x107ec0b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TailSend" ref="0x107f1db08" loc="40:../../net/ChaseP.nc">
      <component-ref qname="ChaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TailSend" scoped="" ref="0x107f1db08"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x107f1de58"/>
        <function-ref name="getPayload" scoped="" ref="0x107f1c020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x107f1c1a8"/>
        <function-ref name="cancel" scoped="" ref="0x107f1c330"/>
        <function-ref name="sendDone" scoped="" ref="0x107f1c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChaseEnergy" ref="0x107ec6850" loc="18:../../net/ChaseP.nc">
      <component-ref qname="ChaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChaseEnergy" scoped="" ref="0x107ec6850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChaseEnergy"/>
      </instance>
      <interface-functions>
        <function-ref name="getRadioOnTime" scoped="" ref="0x107ec6ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChasePacket" ref="0x107ec7a78" loc="16:../../net/ChaseP.nc">
      <component-ref qname="ChaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChasePacket" scoped="" ref="0x107ec7a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChasePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x107ec7dc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sleepTimer" ref="0x107f2a8e8" loc="32:../../net/ChaseP.nc">
      <component-ref qname="ChaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sleepTimer" scoped="" ref="0x107f2a8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e88990"/>
            <typename><typedef-ref name="TMilli" ref="0x106e88ce8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x107f26bc0"/>
        <function-ref name="fired" scoped="" ref="0x107f28238"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x107f26020"/>
        <function-ref name="isOneShot" scoped="" ref="0x107f28ad8"/>
        <function-ref name="getdt" scoped="" ref="0x107f254d8"/>
        <function-ref name="gett0" scoped="" ref="0x107f25088"/>
        <function-ref name="isRunning" scoped="" ref="0x107f28688"/>
        <function-ref name="startPeriodic" scoped="" ref="0x107f29458"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x107f265f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x107f298f8"/>
        <function-ref name="stop" scoped="" ref="0x107f29d98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TailPacket" ref="0x107f1c7e8" loc="41:../../net/ChaseP.nc">
      <component-ref qname="ChaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TailPacket" scoped="" ref="0x107f1c7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x107f1cb38"/>
        <function-ref name="payloadLength" scoped="" ref="0x107f1ccc0"/>
        <function-ref name="getPayload" scoped="" ref="0x107f1ce48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x107f1a020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x107f1a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EnergyIndicator" ref="0x107ec15c0" loc="28:../../net/ChaseP.nc">
      <component-ref qname="ChaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x107ec15c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x107ec1a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="subReceive" ref="0x107ec4580" loc="23:../../net/ChaseP.nc">
      <component-ref qname="ChaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="subReceive" scoped="" ref="0x107ec4580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x107ec48d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x107f1f430" loc="36:../../net/ChaseP.nc">
      <component-ref qname="ChaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x107f1f430"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e88990"/>
            <typename><typedef-ref name="TMilli" ref="0x106e88ce8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x107f1e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChaseControl" ref="0x107ec72e8" loc="15:../../net/ChaseP.nc">
      <component-ref qname="ChaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChaseControl" scoped="" ref="0x107ec72e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChaseControl"/>
      </instance>
      <interface-functions>
        <function-ref name="dc_started" scoped="" ref="0x107ec7638"/>
        <function-ref name="dc_start" scoped="" ref="0x107ec77c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x107f20a60" loc="34:../../net/ChaseP.nc">
      <component-ref qname="ChaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x107f20a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x107f20db0"/>
        <function-ref name="rand32" scoped="" ref="0x107f1f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x107ec39c8" loc="25:../../net/ChaseP.nc">
      <component-ref qname="ChaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioControl" scoped="" ref="0x107ec39c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x107ec3d18"/>
        <function-ref name="stopDone" scoped="" ref="0x107ec2020"/>
        <function-ref name="start" scoped="" ref="0x107ec21a8"/>
        <function-ref name="stop" scoped="" ref="0x107ec2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChaseListen" ref="0x107ec8b08" loc="14:../../net/ChaseP.nc">
      <component-ref qname="ChaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChaseListen" scoped="" ref="0x107ec8b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChaseListen"/>
      </instance>
      <interface-functions>
        <function-ref name="reboot_rec" scoped="" ref="0x107ec8e58"/>
        <function-ref name="begin_rec" scoped="" ref="0x107ec7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="cc2420_begin_rec" ref="0x107f0b020" loc="103:../../net/ChaseP.nc">
      <component-ref qname="ChaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="cc2420_begin_rec" scoped="" ref="0x107f0b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x107f0b370"/>
        <function-ref name="runTask" scoped="" ref="0x107f0b4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="radio_stop" ref="0x107f063f0" loc="113:../../net/ChaseP.nc">
      <component-ref qname="ChaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="radio_stop" scoped="" ref="0x107f063f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x107f06740"/>
        <function-ref name="runTask" scoped="" ref="0x107f068c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="pkt_resend" ref="0x107f0c100" loc="102:../../net/ChaseP.nc">
      <component-ref qname="ChaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="pkt_resend" scoped="" ref="0x107f0c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x107f0c450"/>
        <function-ref name="runTask" scoped="" ref="0x107f0c5d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="randTimer" ref="0x107f25ad0" loc="33:../../net/ChaseP.nc">
      <component-ref qname="ChaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="randTimer" scoped="" ref="0x107f25ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e88990"/>
            <typename><typedef-ref name="TMilli" ref="0x106e88ce8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x107f21d60"/>
        <function-ref name="fired" scoped="" ref="0x107f23470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x107f211c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x107f23d10"/>
        <function-ref name="getdt" scoped="" ref="0x107f20648"/>
        <function-ref name="gett0" scoped="" ref="0x107f201f8"/>
        <function-ref name="isRunning" scoped="" ref="0x107f238c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x107f24658"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x107f21790"/>
        <function-ref name="startOneShot" scoped="" ref="0x107f24af8"/>
        <function-ref name="stop" scoped="" ref="0x107f23020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x107ec6e18" loc="19:../../net/ChaseP.nc">
      <component-ref qname="ChaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x107ec6e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x107ec41a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signal_classify" ref="0x107f10298" loc="96:../../net/ChaseP.nc">
      <component-ref qname="ChaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signal_classify" scoped="" ref="0x107f10298"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x107f107e8"/>
        <function-ref name="runTask" scoped="" ref="0x107f10970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="start_rand_ippi" ref="0x107f0be60" loc="104:../../net/ChaseP.nc">
      <component-ref qname="ChaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="start_rand_ippi" scoped="" ref="0x107f0be60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x107f0a1e8"/>
        <function-ref name="runTask" scoped="" ref="0x107f0a370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="radio_start" ref="0x107f075a0" loc="112:../../net/ChaseP.nc">
      <component-ref qname="ChaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="radio_start" scoped="" ref="0x107f075a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x107f078f0"/>
        <function-ref name="runTask" scoped="" ref="0x107f07a78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChaseDelay" ref="0x107ec60c0" loc="17:../../net/ChaseP.nc">
      <component-ref qname="ChaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChaseDelay" scoped="" ref="0x107ec60c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChaseDelay"/>
      </instance>
      <interface-functions>
        <function-ref name="getTime" scoped="" ref="0x107ec6410"/>
        <function-ref name="getDelay" scoped="" ref="0x107ec6598"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketIndicator" ref="0x107ec2e78" loc="27:../../net/ChaseP.nc">
      <component-ref qname="ChaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x107ec2e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x107ec11f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="subSend" ref="0x107ec4c30" loc="24:../../net/ChaseP.nc">
      <component-ref qname="ChaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="subSend" scoped="" ref="0x107ec4c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x107ec3020"/>
        <function-ref name="cancel" scoped="" ref="0x107ec31a8"/>
        <function-ref name="modify" scoped="" ref="0x107ec3330"/>
        <function-ref name="sendDone" scoped="" ref="0x107ec34b8"/>
        <function-ref name="resend" scoped="" ref="0x107ec3640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x107f1e428" loc="37:../../net/ChaseP.nc">
      <component-ref qname="ChaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x107f1e428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x107f1e778"/>
        <function-ref name="led0Toggle" scoped="" ref="0x107f1e900"/>
        <function-ref name="led1On" scoped="" ref="0x107f1ea88"/>
        <function-ref name="led1Toggle" scoped="" ref="0x107f1ec10"/>
        <function-ref name="led2Toggle" scoped="" ref="0x107f1ed98"/>
        <function-ref name="get" scoped="" ref="0x107f1d020"/>
        <function-ref name="led1Off" scoped="" ref="0x107f1d1a8"/>
        <function-ref name="led2Off" scoped="" ref="0x107f1d7c8"/>
        <function-ref name="set" scoped="" ref="0x107f1d330"/>
        <function-ref name="led0On" scoped="" ref="0x107f1d4b8"/>
        <function-ref name="led2On" scoped="" ref="0x107f1d640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="delayTimer" ref="0x107f2f7a0" loc="31:../../net/ChaseP.nc">
      <component-ref qname="ChaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="delayTimer" scoped="" ref="0x107f2f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e88990"/>
            <typename><typedef-ref name="TMilli" ref="0x106e88ce8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x107f2ba18"/>
        <function-ref name="fired" scoped="" ref="0x107f2d158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x107f2de48"/>
        <function-ref name="isOneShot" scoped="" ref="0x107f2d9f8"/>
        <function-ref name="getdt" scoped="" ref="0x107f2a2e8"/>
        <function-ref name="gett0" scoped="" ref="0x107f2be68"/>
        <function-ref name="isRunning" scoped="" ref="0x107f2d5a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x107f2e370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x107f2b448"/>
        <function-ref name="startOneShot" scoped="" ref="0x107f2e810"/>
        <function-ref name="stop" scoped="" ref="0x107f2ecb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisableRx" ref="0x107ec25d8" loc="26:../../net/ChaseP.nc">
      <component-ref qname="ChaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DisableRx" scoped="" ref="0x107ec25d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisableRx"/>
      </instance>
      <interface-functions>
        <function-ref name="enableRx" scoped="" ref="0x107ec2928"/>
        <function-ref name="disableRx" scoped="" ref="0x107ec2ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signal_detect" ref="0x107f11298" loc="95:../../net/ChaseP.nc">
      <component-ref qname="ChaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signal_detect" scoped="" ref="0x107f11298"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x107f115e8"/>
        <function-ref name="runTask" scoped="" ref="0x107f11770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="pkt_send_init" ref="0x107f0f350" loc="100:../../net/ChaseP.nc">
      <component-ref qname="ChaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="pkt_send_init" scoped="" ref="0x107f0f350"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x107f0f6a0"/>
        <function-ref name="runTask" scoped="" ref="0x107f0f828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChaseFlood" ref="0x107ec8378" loc="13:../../net/ChaseP.nc">
      <component-ref qname="ChaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChaseFlood" scoped="" ref="0x107ec8378"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChaseFlood"/>
      </instance>
      <interface-functions>
        <function-ref name="init_flood" scoped="" ref="0x107ec86c8"/>
        <function-ref name="pkt_reced" scoped="" ref="0x107ec8850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x107ec0e10" loc="30:../../net/ChaseP.nc">
      <component-ref qname="ChaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x107ec0e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x107f2f1a8"/>
        <function-ref name="userId" scoped="" ref="0x107f2f330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="pkt_send" ref="0x107f0d298" loc="101:../../net/ChaseP.nc">
      <component-ref qname="ChaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="pkt_send" scoped="" ref="0x107f0d298"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x107f0d5e8"/>
        <function-ref name="runTask" scoped="" ref="0x107f0d770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x108089550" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="ChaseC.TailSend"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x108089550"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1080898a0"/>
        <function-ref name="getPayload" scoped="" ref="0x108089a28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x108089bb0"/>
        <function-ref name="cancel" scoped="" ref="0x108089d38"/>
        <function-ref name="sendDone" scoped="" ref="0x108088020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x108088268" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="ChaseC.TailSend"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x108088268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1080885b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x108088740"/>
        <function-ref name="getPayload" scoped="" ref="0x1080888c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x108088a50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x108088bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x108088e20" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="ChaseC.TailSend"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x108088e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x1080871a8"/>
        <function-ref name="source" scoped="" ref="0x108087330"/>
        <function-ref name="address" scoped="" ref="0x1080874b8"/>
        <function-ref name="destination" scoped="" ref="0x108087640"/>
        <function-ref name="setSource" scoped="" ref="0x1080877c8"/>
        <function-ref name="setDestination" scoped="" ref="0x108087950"/>
        <function-ref name="type" scoped="" ref="0x108087ad8"/>
        <function-ref name="setType" scoped="" ref="0x108087c60"/>
        <function-ref name="isForMe" scoped="" ref="0x108087de8"/>
        <function-ref name="setGroup" scoped="" ref="0x108086020"/>
        <function-ref name="localGroup" scoped="" ref="0x1080861a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x108086430" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="ChaseC.TailSend"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x108086430"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x108086780"/>
        <function-ref name="noAck" scoped="" ref="0x108086908"/>
        <function-ref name="wasAcked" scoped="" ref="0x108086a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x108a54530" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ChaseC.TailSend.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x108a54530"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x108a54880"/>
        <function-ref name="getPayload" scoped="" ref="0x108a54a08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x108a54b90"/>
        <function-ref name="cancel" scoped="" ref="0x108a54d18"/>
        <function-ref name="sendDone" scoped="" ref="0x108a53020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x108a532c8" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ChaseC.TailSend.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x108a532c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x108a53618"/>
        <function-ref name="getPayload" scoped="" ref="0x108a537a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x108a53928"/>
        <function-ref name="cancel" scoped="" ref="0x108a53ab0"/>
        <function-ref name="sendDone" scoped="" ref="0x108a53c38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x108a53e80" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ChaseC.TailSend.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x108a53e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x108a521f8"/>
        <function-ref name="source" scoped="" ref="0x108a52380"/>
        <function-ref name="address" scoped="" ref="0x108a52508"/>
        <function-ref name="destination" scoped="" ref="0x108a52690"/>
        <function-ref name="setSource" scoped="" ref="0x108a52818"/>
        <function-ref name="setDestination" scoped="" ref="0x108a529a0"/>
        <function-ref name="type" scoped="" ref="0x108a52b28"/>
        <function-ref name="setType" scoped="" ref="0x108a52cb0"/>
        <function-ref name="isForMe" scoped="" ref="0x108a52e38"/>
        <function-ref name="setGroup" scoped="" ref="0x108a51020"/>
        <function-ref name="localGroup" scoped="" ref="0x108a511a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x107ff2020" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x107ff2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x107ff2370"/>
        <function-ref name="getPayload" scoped="" ref="0x107ff24f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x107ff2680"/>
        <function-ref name="cancel" scoped="" ref="0x107ff2808"/>
        <function-ref name="sendDone" scoped="" ref="0x107ff2990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x10801f060" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x10801f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x106bce3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10801f3d0"/>
        <function-ref name="getPayload" scoped="" ref="0x10801f558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10801f6e0"/>
        <function-ref name="cancel" scoped="" ref="0x10801f868"/>
        <function-ref name="sendDone" scoped="" ref="0x10801f9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x1080202c8" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x1080202c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x108020638"/>
        <function-ref name="getPayload" scoped="" ref="0x1080207c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x108020948"/>
        <function-ref name="cancel" scoped="" ref="0x108020ad0"/>
        <function-ref name="sendDone" scoped="" ref="0x108020c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x10801d268" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x10801d268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10801d5b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x10801d740"/>
        <function-ref name="getPayload" scoped="" ref="0x10801d8c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10801da50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x10801dbd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x10801c020" loc="169:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x10801c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x10801c370"/>
        <function-ref name="runTask" scoped="" ref="0x10801c4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x10801c7c0" loc="126:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x10801c7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x10801cb10"/>
        <function-ref name="runTask" scoped="" ref="0x10801cc98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x10801fc38" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x10801fc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x10801e020"/>
        <function-ref name="source" scoped="" ref="0x10801e1a8"/>
        <function-ref name="address" scoped="" ref="0x10801e330"/>
        <function-ref name="destination" scoped="" ref="0x10801e4b8"/>
        <function-ref name="setSource" scoped="" ref="0x10801e640"/>
        <function-ref name="setDestination" scoped="" ref="0x10801e7c8"/>
        <function-ref name="type" scoped="" ref="0x10801e950"/>
        <function-ref name="setType" scoped="" ref="0x10801ead8"/>
        <function-ref name="isForMe" scoped="" ref="0x10801ec60"/>
        <function-ref name="setGroup" scoped="" ref="0x10801ede8"/>
        <function-ref name="localGroup" scoped="" ref="0x10801d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChaseEnergy" ref="0x108067730" loc="16:ChaseTestC.nc">
      <component-ref qname="ChaseTestC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChaseEnergy" scoped="" ref="0x108067730"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChaseEnergy"/>
      </instance>
      <interface-functions>
        <function-ref name="getRadioOnTime" scoped="" ref="0x108067a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChasePacket" ref="0x108073460" loc="9:ChaseTestC.nc">
      <component-ref qname="ChaseTestC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChasePacket" scoped="" ref="0x108073460"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChasePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x1080737b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x10806d428" loc="12:ChaseTestC.nc">
      <component-ref qname="ChaseTestC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x10806d428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x10806d778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x10806db08" loc="13:ChaseTestC.nc">
      <component-ref qname="ChaseTestC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x10806db08"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x10806de58"/>
        <function-ref name="stopDone" scoped="" ref="0x10806c020"/>
        <function-ref name="start" scoped="" ref="0x10806c1a8"/>
        <function-ref name="stop" scoped="" ref="0x10806c330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="energySerialSend" ref="0x1080636a0" loc="23:ChaseTestC.nc">
      <component-ref qname="ChaseTestC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="energySerialSend" scoped="" ref="0x1080636a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1080639f0"/>
        <function-ref name="getPayload" scoped="" ref="0x108063b78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x108063d00"/>
        <function-ref name="cancel" scoped="" ref="0x108062020"/>
        <function-ref name="sendDone" scoped="" ref="0x1080621a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChaseControl" ref="0x108074bb8" loc="8:ChaseTestC.nc">
      <component-ref qname="ChaseTestC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChaseControl" scoped="" ref="0x108074bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChaseControl"/>
      </instance>
      <interface-functions>
        <function-ref name="dc_started" scoped="" ref="0x108073020"/>
        <function-ref name="dc_start" scoped="" ref="0x1080731a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="delaySerialSend" ref="0x108064828" loc="22:ChaseTestC.nc">
      <component-ref qname="ChaseTestC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="delaySerialSend" scoped="" ref="0x108064828"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x108064c78"/>
        <function-ref name="getPayload" scoped="" ref="0x108064e00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x108063020"/>
        <function-ref name="cancel" scoped="" ref="0x1080631a8"/>
        <function-ref name="sendDone" scoped="" ref="0x108063330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x108073a38" loc="10:ChaseTestC.nc">
      <component-ref qname="ChaseTestC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x108073a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x108073d88"/>
        <function-ref name="rand32" scoped="" ref="0x108072020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="energySerialPkt" ref="0x10805f020" loc="26:ChaseTestC.nc">
      <component-ref qname="ChaseTestC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="energySerialPkt" scoped="" ref="0x10805f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10805f370"/>
        <function-ref name="payloadLength" scoped="" ref="0x10805f4f8"/>
        <function-ref name="getPayload" scoped="" ref="0x10805f680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10805f808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x10805f990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="floodTimer" ref="0x108072490" loc="11:ChaseTestC.nc">
      <component-ref qname="ChaseTestC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="floodTimer" scoped="" ref="0x108072490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e88990"/>
            <typename><typedef-ref name="TMilli" ref="0x106e88ce8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10806e6c8"/>
        <function-ref name="fired" scoped="" ref="0x108071db0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x108070ad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x108070688"/>
        <function-ref name="getdt" scoped="" ref="0x10806d020"/>
        <function-ref name="gett0" scoped="" ref="0x10806eb18"/>
        <function-ref name="isRunning" scoped="" ref="0x108070238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x108071020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x10806e0f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x1080714c0"/>
        <function-ref name="stop" scoped="" ref="0x108071960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChaseDelay" ref="0x108067d30" loc="17:ChaseTestC.nc">
      <component-ref qname="ChaseTestC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChaseDelay" scoped="" ref="0x108067d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChaseDelay"/>
      </instance>
      <interface-functions>
        <function-ref name="getTime" scoped="" ref="0x1080660d8"/>
        <function-ref name="getDelay" scoped="" ref="0x108066260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="floodSerialSend" ref="0x108065b28" loc="21:ChaseTestC.nc">
      <component-ref qname="ChaseTestC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="floodSerialSend" scoped="" ref="0x108065b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x108065e78"/>
        <function-ref name="getPayload" scoped="" ref="0x108064030"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1080641b8"/>
        <function-ref name="cancel" scoped="" ref="0x108064340"/>
        <function-ref name="sendDone" scoped="" ref="0x1080644c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="delaySerialPkt" ref="0x1080601f0" loc="25:ChaseTestC.nc">
      <component-ref qname="ChaseTestC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="delaySerialPkt" scoped="" ref="0x1080601f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x108060540"/>
        <function-ref name="payloadLength" scoped="" ref="0x1080606c8"/>
        <function-ref name="getPayload" scoped="" ref="0x108060850"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1080609d8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x108060b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="floodSerialPkt" ref="0x108062500" loc="24:ChaseTestC.nc">
      <component-ref qname="ChaseTestC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="floodSerialPkt" scoped="" ref="0x108062500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x108062850"/>
        <function-ref name="payloadLength" scoped="" ref="0x1080629d8"/>
        <function-ref name="getPayload" scoped="" ref="0x108062b60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x108062ce8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x108062e70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x1080664d8" loc="19:ChaseTestC.nc">
      <component-ref qname="ChaseTestC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x1080664d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x108066828"/>
        <function-ref name="led0Toggle" scoped="" ref="0x1080669b0"/>
        <function-ref name="led1On" scoped="" ref="0x108066b38"/>
        <function-ref name="led1Toggle" scoped="" ref="0x108066cc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x108066e48"/>
        <function-ref name="get" scoped="" ref="0x108065020"/>
        <function-ref name="led1Off" scoped="" ref="0x1080651a8"/>
        <function-ref name="led2Off" scoped="" ref="0x1080657c8"/>
        <function-ref name="set" scoped="" ref="0x108065330"/>
        <function-ref name="led0On" scoped="" ref="0x1080654b8"/>
        <function-ref name="led2On" scoped="" ref="0x108065640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="dcTimer" ref="0x10806c780" loc="15:ChaseTestC.nc">
      <component-ref qname="ChaseTestC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="dcTimer" scoped="" ref="0x10806c780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x106e88990"/>
            <typename><typedef-ref name="TMilli" ref="0x106e88ce8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x108068a18"/>
        <function-ref name="fired" scoped="" ref="0x108069158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x108069e48"/>
        <function-ref name="isOneShot" scoped="" ref="0x1080699f8"/>
        <function-ref name="getdt" scoped="" ref="0x1080672e8"/>
        <function-ref name="gett0" scoped="" ref="0x108068e68"/>
        <function-ref name="isRunning" scoped="" ref="0x1080695a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x10806b370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x108068448"/>
        <function-ref name="startOneShot" scoped="" ref="0x10806b810"/>
        <function-ref name="stop" scoped="" ref="0x10806bcb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChaseFlood" ref="0x108074418" loc="7:ChaseTestC.nc">
      <component-ref qname="ChaseTestC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChaseFlood" scoped="" ref="0x108074418"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChaseFlood"/>
      </instance>
      <interface-functions>
        <function-ref name="init_flood" scoped="" ref="0x108074768"/>
        <function-ref name="pkt_reced" scoped="" ref="0x1080748f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x1080951d0" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x1080951d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x108095520"/>
        <function-ref name="getPayload" scoped="" ref="0x1080956a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x108095830"/>
        <function-ref name="cancel" scoped="" ref="0x1080959b8"/>
        <function-ref name="sendDone" scoped="" ref="0x108095b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x108095d88" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x108095d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10810c170"/>
        <function-ref name="payloadLength" scoped="" ref="0x10810c2f8"/>
        <function-ref name="getPayload" scoped="" ref="0x10810c480"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10810c608"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x10810c790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x10810c9d8" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x10810c9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x10810cd28"/>
        <function-ref name="source" scoped="" ref="0x10810b020"/>
        <function-ref name="address" scoped="" ref="0x10810b1a8"/>
        <function-ref name="destination" scoped="" ref="0x10810b330"/>
        <function-ref name="setSource" scoped="" ref="0x10810b4b8"/>
        <function-ref name="setDestination" scoped="" ref="0x10810b640"/>
        <function-ref name="type" scoped="" ref="0x10810b7c8"/>
        <function-ref name="setType" scoped="" ref="0x10810b950"/>
        <function-ref name="isForMe" scoped="" ref="0x10810bad8"/>
        <function-ref name="setGroup" scoped="" ref="0x10810bc60"/>
        <function-ref name="localGroup" scoped="" ref="0x10810bde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x10810a0a0" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x10810a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x10810a3f0"/>
        <function-ref name="noAck" scoped="" ref="0x10810a578"/>
        <function-ref name="wasAcked" scoped="" ref="0x10810a700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x108ab3d00" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x108ab3d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x108ab20a0"/>
        <function-ref name="getPayload" scoped="" ref="0x108ab2228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x108ab23b0"/>
        <function-ref name="cancel" scoped="" ref="0x108ab2538"/>
        <function-ref name="sendDone" scoped="" ref="0x108ab26c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x108ab2968" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x108ab2968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x108ab2cb8"/>
        <function-ref name="getPayload" scoped="" ref="0x108ab2e40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x108ab1020"/>
        <function-ref name="cancel" scoped="" ref="0x108ab11a8"/>
        <function-ref name="sendDone" scoped="" ref="0x108ab1330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x108ab1578" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x108ab1578"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x108ab18c8"/>
        <function-ref name="source" scoped="" ref="0x108ab1a50"/>
        <function-ref name="address" scoped="" ref="0x108ab1bd8"/>
        <function-ref name="destination" scoped="" ref="0x108ab1d60"/>
        <function-ref name="setSource" scoped="" ref="0x108aaf020"/>
        <function-ref name="setDestination" scoped="" ref="0x108aaf1a8"/>
        <function-ref name="type" scoped="" ref="0x108aaf330"/>
        <function-ref name="setType" scoped="" ref="0x108aaf4b8"/>
        <function-ref name="isForMe" scoped="" ref="0x108aaf640"/>
        <function-ref name="setGroup" scoped="" ref="0x108aaf7c8"/>
        <function-ref name="localGroup" scoped="" ref="0x108aaf950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x108108c28" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/QueueC.nc">
      <component-ref qname="PrintfC.QueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x108108c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x1080e3960"/>
        <function-ref name="enqueue" scoped="" ref="0x1080e1680"/>
        <function-ref name="element" scoped="" ref="0x1080e1cb0"/>
        <function-ref name="full" scoped="" ref="0x108107c38"/>
        <function-ref name="maxSize" scoped="" ref="0x1080e3510"/>
        <function-ref name="dequeue" scoped="" ref="0x1080e1020"/>
        <function-ref name="empty" scoped="" ref="0x1081077e8"/>
        <function-ref name="size" scoped="" ref="0x1080e30c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x1080dc4e8" loc="93:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x1080dc4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x1080d81f8"/>
        <function-ref name="enqueue" scoped="" ref="0x1080d7020"/>
        <function-ref name="element" scoped="" ref="0x1080d7650"/>
        <function-ref name="full" scoped="" ref="0x1080db4d8"/>
        <function-ref name="maxSize" scoped="" ref="0x1080dbd78"/>
        <function-ref name="dequeue" scoped="" ref="0x1080d8858"/>
        <function-ref name="empty" scoped="" ref="0x1080db088"/>
        <function-ref name="size" scoped="" ref="0x1080db928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x1080d7cc8" loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x1080d7cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1080d50a0"/>
        <function-ref name="getPayload" scoped="" ref="0x1080d5228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1080d53b0"/>
        <function-ref name="cancel" scoped="" ref="0x1080d5538"/>
        <function-ref name="sendDone" scoped="" ref="0x1080d56c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x1080d5948" loc="95:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x1080d5948"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1080d5c98"/>
        <function-ref name="payloadLength" scoped="" ref="0x1080d5e20"/>
        <function-ref name="getPayload" scoped="" ref="0x1080d4020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1080d41a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x1080d4330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="retrySend" ref="0x1081499a8" loc="114:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="retrySend" scoped="" ref="0x1081499a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x108149cf8"/>
        <function-ref name="runTask" scoped="" ref="0x108149e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1080dd5a8" loc="89:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1080dd5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1080dd8f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x1080d45a8" loc="96:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x1080d45a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x1080d48f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x1080d4a80"/>
        <function-ref name="led1On" scoped="" ref="0x1080d4c08"/>
        <function-ref name="led1Toggle" scoped="" ref="0x1080d4d90"/>
        <function-ref name="led2Toggle" scoped="" ref="0x1080d3020"/>
        <function-ref name="get" scoped="" ref="0x1080d31a8"/>
        <function-ref name="led1Off" scoped="" ref="0x1080d3330"/>
        <function-ref name="led2Off" scoped="" ref="0x1080d3950"/>
        <function-ref name="set" scoped="" ref="0x1080d34b8"/>
        <function-ref name="led0On" scoped="" ref="0x1080d3640"/>
        <function-ref name="led2On" scoped="" ref="0x1080d37c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x1080dac10" loc="90:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x1080dac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x1080dc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x108130400" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x108130400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x108130750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10812f678" loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10812f678"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10812f9c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x10812fc98" loc="95:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x10812fc98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x10812c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x108127358" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x108127358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x1081276a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x108127a38" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x108127a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x108127d88"/>
        <function-ref name="stopDone" scoped="" ref="0x108124020"/>
        <function-ref name="start" scoped="" ref="0x1081241a8"/>
        <function-ref name="stop" scoped="" ref="0x108124330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x10812d020" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="ChaseTestAppC.floodSerialSend"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x10812d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10812d370"/>
        <function-ref name="getPayload" scoped="" ref="0x10812d4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10812d680"/>
        <function-ref name="cancel" scoped="" ref="0x10812d808"/>
        <function-ref name="sendDone" scoped="" ref="0x10812d990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x10812dbd8" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="ChaseTestAppC.floodSerialSend"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x10812dbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10811e020"/>
        <function-ref name="payloadLength" scoped="" ref="0x10811e1a8"/>
        <function-ref name="getPayload" scoped="" ref="0x10811e330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10811e4b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x10811e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x10811e888" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="ChaseTestAppC.floodSerialSend"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x10811e888"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x10811ebd8"/>
        <function-ref name="source" scoped="" ref="0x10811ed60"/>
        <function-ref name="address" scoped="" ref="0x10811d020"/>
        <function-ref name="destination" scoped="" ref="0x10811d1a8"/>
        <function-ref name="setSource" scoped="" ref="0x10811d330"/>
        <function-ref name="setDestination" scoped="" ref="0x10811d4b8"/>
        <function-ref name="type" scoped="" ref="0x10811d640"/>
        <function-ref name="setType" scoped="" ref="0x10811d7c8"/>
        <function-ref name="isForMe" scoped="" ref="0x10811d950"/>
        <function-ref name="setGroup" scoped="" ref="0x10811dad8"/>
        <function-ref name="localGroup" scoped="" ref="0x10811dc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x10811c020" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="ChaseTestAppC.floodSerialSend"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x10811c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x10811c370"/>
        <function-ref name="noAck" scoped="" ref="0x10811c4f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x10811c680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x108b30188" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ChaseTestAppC.floodSerialSend.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x108b30188"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x108b304d8"/>
        <function-ref name="getPayload" scoped="" ref="0x108b30660"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x108b307e8"/>
        <function-ref name="cancel" scoped="" ref="0x108b30970"/>
        <function-ref name="sendDone" scoped="" ref="0x108b30af8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x108b30da0" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ChaseTestAppC.floodSerialSend.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x108b30da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x108b2f170"/>
        <function-ref name="getPayload" scoped="" ref="0x108b2f2f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x108b2f480"/>
        <function-ref name="cancel" scoped="" ref="0x108b2f608"/>
        <function-ref name="sendDone" scoped="" ref="0x108b2f790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x108b2f9d8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ChaseTestAppC.floodSerialSend.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x108b2f9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x108b2fd28"/>
        <function-ref name="source" scoped="" ref="0x108b2e020"/>
        <function-ref name="address" scoped="" ref="0x108b2e1a8"/>
        <function-ref name="destination" scoped="" ref="0x108b2e330"/>
        <function-ref name="setSource" scoped="" ref="0x108b2e4b8"/>
        <function-ref name="setDestination" scoped="" ref="0x108b2e640"/>
        <function-ref name="type" scoped="" ref="0x108b2e7c8"/>
        <function-ref name="setType" scoped="" ref="0x108b2e950"/>
        <function-ref name="isForMe" scoped="" ref="0x108b2ead8"/>
        <function-ref name="setGroup" scoped="" ref="0x108b2ec60"/>
        <function-ref name="localGroup" scoped="" ref="0x108b2ede8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x10811a7b0" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="ChaseTestAppC.delaySerialSend"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x10811a7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10811ab00"/>
        <function-ref name="getPayload" scoped="" ref="0x10811ac88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10811ae10"/>
        <function-ref name="cancel" scoped="" ref="0x108119020"/>
        <function-ref name="sendDone" scoped="" ref="0x1081191a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x1081193f0" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="ChaseTestAppC.delaySerialSend"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x1081193f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x108119740"/>
        <function-ref name="payloadLength" scoped="" ref="0x1081198c8"/>
        <function-ref name="getPayload" scoped="" ref="0x108119a50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x108119bd8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x108119d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x108118020" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="ChaseTestAppC.delaySerialSend"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x108118020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x108118370"/>
        <function-ref name="source" scoped="" ref="0x1081184f8"/>
        <function-ref name="address" scoped="" ref="0x108118680"/>
        <function-ref name="destination" scoped="" ref="0x108118808"/>
        <function-ref name="setSource" scoped="" ref="0x108118990"/>
        <function-ref name="setDestination" scoped="" ref="0x108118b18"/>
        <function-ref name="type" scoped="" ref="0x108118ca0"/>
        <function-ref name="setType" scoped="" ref="0x108118e28"/>
        <function-ref name="isForMe" scoped="" ref="0x108117020"/>
        <function-ref name="setGroup" scoped="" ref="0x1081171a8"/>
        <function-ref name="localGroup" scoped="" ref="0x108117330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x1081175b8" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="ChaseTestAppC.delaySerialSend"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x1081175b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x108117908"/>
        <function-ref name="noAck" scoped="" ref="0x108117a90"/>
        <function-ref name="wasAcked" scoped="" ref="0x108117c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x108b19958" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ChaseTestAppC.delaySerialSend.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x108b19958"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x108b19ca8"/>
        <function-ref name="getPayload" scoped="" ref="0x108b19e30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x108b18020"/>
        <function-ref name="cancel" scoped="" ref="0x108b181a8"/>
        <function-ref name="sendDone" scoped="" ref="0x108b18330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x108b185d8" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ChaseTestAppC.delaySerialSend.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x108b185d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x108b18928"/>
        <function-ref name="getPayload" scoped="" ref="0x108b18ab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x108b18c38"/>
        <function-ref name="cancel" scoped="" ref="0x108b18dc0"/>
        <function-ref name="sendDone" scoped="" ref="0x108b17020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x108b17268" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ChaseTestAppC.delaySerialSend.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x108b17268"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x108b175b8"/>
        <function-ref name="source" scoped="" ref="0x108b17740"/>
        <function-ref name="address" scoped="" ref="0x108b178c8"/>
        <function-ref name="destination" scoped="" ref="0x108b17a50"/>
        <function-ref name="setSource" scoped="" ref="0x108b17bd8"/>
        <function-ref name="setDestination" scoped="" ref="0x108b17d60"/>
        <function-ref name="type" scoped="" ref="0x108b16020"/>
        <function-ref name="setType" scoped="" ref="0x108b161a8"/>
        <function-ref name="isForMe" scoped="" ref="0x108b16330"/>
        <function-ref name="setGroup" scoped="" ref="0x108b164b8"/>
        <function-ref name="localGroup" scoped="" ref="0x108b16640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x108113060" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="ChaseTestAppC.energySerialSend"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x108113060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1081133b0"/>
        <function-ref name="getPayload" scoped="" ref="0x108113538"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1081136c0"/>
        <function-ref name="cancel" scoped="" ref="0x108113848"/>
        <function-ref name="sendDone" scoped="" ref="0x1081139d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x108113c18" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="ChaseTestAppC.energySerialSend"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x108113c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x108112020"/>
        <function-ref name="payloadLength" scoped="" ref="0x1081121a8"/>
        <function-ref name="getPayload" scoped="" ref="0x108112330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1081124b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x108112640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x108112888" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="ChaseTestAppC.energySerialSend"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x108112888"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x108112bd8"/>
        <function-ref name="source" scoped="" ref="0x108112d60"/>
        <function-ref name="address" scoped="" ref="0x108111020"/>
        <function-ref name="destination" scoped="" ref="0x1081111a8"/>
        <function-ref name="setSource" scoped="" ref="0x108111330"/>
        <function-ref name="setDestination" scoped="" ref="0x1081114b8"/>
        <function-ref name="type" scoped="" ref="0x108111640"/>
        <function-ref name="setType" scoped="" ref="0x1081117c8"/>
        <function-ref name="isForMe" scoped="" ref="0x108111950"/>
        <function-ref name="setGroup" scoped="" ref="0x108111ad8"/>
        <function-ref name="localGroup" scoped="" ref="0x108111c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x108110020" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="ChaseTestAppC.energySerialSend"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x108110020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x108110370"/>
        <function-ref name="noAck" scoped="" ref="0x1081104f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x108110680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x108b03e68" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ChaseTestAppC.energySerialSend.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x108b03e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x108b001e8"/>
        <function-ref name="getPayload" scoped="" ref="0x108b00370"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x108b004f8"/>
        <function-ref name="cancel" scoped="" ref="0x108b00680"/>
        <function-ref name="sendDone" scoped="" ref="0x108b00808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x108b00ab0" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ChaseTestAppC.energySerialSend.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x108b00ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x108b00e00"/>
        <function-ref name="getPayload" scoped="" ref="0x108aff020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x108aff1a8"/>
        <function-ref name="cancel" scoped="" ref="0x108aff330"/>
        <function-ref name="sendDone" scoped="" ref="0x108aff4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x108aff700" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ChaseTestAppC.energySerialSend.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x108aff700"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x108affa50"/>
        <function-ref name="source" scoped="" ref="0x108affbd8"/>
        <function-ref name="address" scoped="" ref="0x108affd60"/>
        <function-ref name="destination" scoped="" ref="0x108afe020"/>
        <function-ref name="setSource" scoped="" ref="0x108afe1a8"/>
        <function-ref name="setDestination" scoped="" ref="0x108afe330"/>
        <function-ref name="type" scoped="" ref="0x108afe4b8"/>
        <function-ref name="setType" scoped="" ref="0x108afe640"/>
        <function-ref name="isForMe" scoped="" ref="0x108afe7c8"/>
        <function-ref name="setGroup" scoped="" ref="0x108afe950"/>
        <function-ref name="localGroup" scoped="" ref="0x108afead8"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x106a1b8c0" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x106a19580" loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x106a45328" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x106a476f0" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x106a46bc8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x106a47070" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x106a47e00" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x106a2b328" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x106a2b9a8" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x106a46500" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x1066f0b08" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x10664fae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x106a8dae0" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x106a8d870" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x106a90178" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x106a3e978"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x106a3d858"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x106a8c328" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x106a8b178" loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x106a8d178" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x106a8ca00" loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x106a908b0" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x106a8f020" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x106a8f9f0" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x106a3e978"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x106a3d858"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x106a8f780" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x106a3e978"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x106a3d858"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x106aa0328" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x106a9d6e8" loc="79:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x106a9d478" loc="79:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x106a9c290" loc="86:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="81:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x106a9c020" loc="86:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x106a9ecf8" loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x106a9e568" loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x106aa0c50" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x106aa09e0" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x106a89a20" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x106a85378" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x106a85108" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x106a85cd8" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x106a85a68" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x106aa46e0" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x106aa4470" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x106aa4d68" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x106a77ae8" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x106a93338" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x106a930c8" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x106a76258" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x106a79020" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x106a76930" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x106a79e28" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x106a77460" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x106a79750" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x106a78500" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x106a78da0" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x106a78b30" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x106a93cd0" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x106a93a60" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x106abadc0" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x1069d61d8" loc="76:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x106898490" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x106593020" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x10659e020" loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x106593718" loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x1065a6ba0" loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x1065a53e0" loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x106be35b8" loc="113:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x106be3348" loc="113:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x106be2a40" loc="138:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x106be27d0" loc="138:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x106be69a0" loc="104:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x106be3da0" loc="130:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x106c342f0" loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x106bceb18"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x106c36990" loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x106bceb18"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x106c36cf0" loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x106c34060" loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x106c30628" loc="135:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="126:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x106c30060" loc="135:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x106c30370" loc="135:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x106c2f828" loc="123:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="113:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x106c335b8" loc="96:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="82:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x106c33348" loc="96:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x106c32a00" loc="110:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="98:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x106c32458" loc="110:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x106c32780" loc="110:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
      <documentation loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x106c27838" loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x106c275c8" loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x106c26830" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x106c265c0" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x106c4a948" loc="126:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="109:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x106c4a380" loc="126:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x106c4a690" loc="126:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x106c48ab8" loc="106:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="96:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x106c49bd0" loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x106c49640" loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x106c49950" loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Receive.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x106c2ba40" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Receive.nc">
        <documentation loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
              <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x106c2b140" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x106c2b468" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x106c2b778" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x106c50428" loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x106c50b60" loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x106c4e328" loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x106c4d1d8" loc="83:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x106c4c810" loc="100:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x106c70020" loc="117:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x106c4ea40" loc="77:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x106c70b20" loc="134:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x106c708b0" loc="134:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x106c51cd8" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x106c4d948" loc="89:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x106c4c0d8" loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x106c58520" loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x106c582b0" loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x106c57630" loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x106c573c0" loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x106c55700" loc="85:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x106c55490" loc="85:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x106c5dc60" loc="177:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x106bce760"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x106c5d9f0" loc="177:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x106c41d18" loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x106bceb18"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x106c41aa8" loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x106c43290" loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x106bceb18"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x106c43ce8" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x106bceb18"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x106c43a78" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x106c3d5d8" loc="121:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x106bceb18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x106c3d020" loc="121:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x106c3d358" loc="121:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x106bceb18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x106c420b8" loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x106bceb18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x106c3fa98" loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x106c3fdd0" loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x106bceb18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x106c3a8c8" loc="147:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x106bce3b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x106c3a658" loc="147:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x106c38b70" loc="162:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x106bce3b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x106c385f0" loc="162:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x106c388f0" loc="162:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x106bce3b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x106c3c788" loc="136:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x106c3c518" loc="136:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x106c5b0b8" loc="187:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x106bce760"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x106c5ca80" loc="187:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x106c5cdb0" loc="187:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x106bce760"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x106c5be20" loc="195:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x106bce760"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x106c66bb0" loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x106c66620" loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x106c66930" loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x106c5f2d8" loc="125:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="115:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x106c61c90" loc="125:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x106c5f020" loc="125:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x106c61488" loc="112:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="102:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x106c630a8" loc="89:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="77:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x106c64e08" loc="89:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x106c625c8" loc="100:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="91:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x106c62020" loc="100:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x106c62348" loc="100:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x106cc82a0" loc="31:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x106cc9bb0" loc="31:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x106cc8020" loc="31:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x106cca4a0" loc="15:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x106cc92e0" loc="23:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x106ccacb8" loc="23:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x106cc9060" loc="23:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/StdControl.nc">
      <documentation loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x106cd7e40" loc="95:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x106cd4600" loc="105:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="97:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x106cf9328" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x106cd6bd0" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x106cdc258" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x106cda660" loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x106cd8290" loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x106cd8020" loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x106cdae78" loc="79:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x106cdcd48" loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x106cdcad8" loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x106cd8a88" loc="100:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x106cd96f8" loc="85:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x106ce3070" loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x106ce3928" loc="81:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x106ce4748" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x106ce44d8" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x106ce24b0" loc="91:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x106ce2240" loc="91:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x106cdf030" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x106cdfbd8" loc="69:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x106cdf968" loc="69:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x106cde6a0" loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x106cde430" loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartStream.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x106e07b50" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x106e075b0" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x106e078d0" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x106e024e0" loc="79:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x106e02270" loc="79:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x106e002a0" loc="90:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="81:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x106e02c58" loc="90:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x106e00020" loc="90:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x106e03258" loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x106dffa38" loc="99:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="92:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x106dff160" loc="99:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x106dff480" loc="99:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x106dff7a8" loc="99:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x106e03ad0" loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x106e06358" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x106e059f8" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x106e05d18" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x106e060c8" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartByte.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x106e3eaf0" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x106e3e880" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x106e3b8f8" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x106e3b340" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x106e3b678" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x106e9d070" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x106e9d938" loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x106e9c950" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x106e631e0"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x106e635e8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Resource.nc">
      <documentation loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x106e719b8" loc="120:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="104:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x106e73a68" loc="97:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="90:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x106e73178" loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x106e71258" loc="102:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="99:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x106e703e0" loc="128:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="122:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x106e92020" loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x106e936f8" loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x106e8a738" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x106e8a4c8" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x106e8ed60" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x106ec35d0" loc="213:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x106ecea38" loc="143:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x106eaa020" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x106e36880"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x106e340d8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x106eaed48" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x106e36880"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x106e340d8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x106ea1c98" loc="123:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x106ea73f8" loc="70:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x106e31518"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x106e31d40"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x106ea7188" loc="70:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x106e31518"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x106e31d40"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x106ec8c28" loc="180:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x106ec4070" loc="197:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x106ea9a18" loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x106e33608"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x106e33d80"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x106ea7b80" loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x106e31518"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x106e31d40"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x106ea3688" loc="97:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x106ea3418" loc="97:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x106ea5cf8" loc="95:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x106ec8558" loc="179:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x106ea9290" loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x106e33608"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x106e33d80"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x106ea9020" loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x106e33608"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x106e33d80"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x106ea6c20" loc="85:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x106ec7328" loc="181:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x106ea55b8" loc="90:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x106ea5348" loc="90:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x106ea2e18" loc="113:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x106ea1578" loc="118:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x106ec9770" loc="177:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x106ecc720" loc="163:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x106ea0b38" loc="133:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x106ec9e48" loc="178:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x106ecd1d8" loc="148:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x106ec79e0" loc="182:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x106ea3df8" loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x106e3a130"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x106e37088"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x106ec5178" loc="187:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x106ec4e48" loc="207:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x106ea64e0" loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x106ea6270" loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x106ec1020" loc="224:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x106ec3c88" loc="224:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x106eaa788" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x106e36880"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x106e340d8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x106ea03e0" loc="128:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x106ecd8c8" loc="153:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x106ec9020" loc="174:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x106e631e0"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x106e635e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x106ecac78" loc="174:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x106e631e0"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x106e635e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x106eca290" loc="168:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x106e48950"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x106e48d58"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x106eca020" loc="168:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x106e48950"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x106e48d58"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x106ec1868" loc="231:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x106ec58f8" loc="192:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x106ea25e8" loc="108:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x106ec4768" loc="202:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x106ecc020" loc="158:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x106ece328" loc="138:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x106ebdb10" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x106ebdb10"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x106ebdd40" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x106ebdd40"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x106eba620" loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x106ebdd40"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x106eb9688" loc="76:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x106ebae38" loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x106eb9d78" loc="82:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x106f468c8" loc="95:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x106f450d8" loc="105:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x106f33178" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x106f33860" loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x106f61e58" loc="110:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x106f61be8" loc="110:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x106f35ae0" loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x106f32718" loc="87:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x106f60718" loc="117:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x106f32020" loc="85:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x106f349f0" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x106f62c88" loc="99:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x106f34258" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x106f39d08" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x106f32e30" loc="92:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x106f613e0" loc="101:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x106f62598" loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x106f35400" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x1071dc020" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x1071dc6e8" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x1071de290" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x1071db4a0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x1071de930" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x1071dcda0" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x1071df548" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x1071dfbb8" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x10723e720" loc="90:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x10723c020" loc="98:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x107267590" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x10728dc48" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x10728bc58" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x10728d428" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x10728b490" loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x10728a560" loc="81:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x107280ac8" loc="79:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x107289c58"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x107280858" loc="79:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x107289c58"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x107284b00" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x1072815e8" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x107289c58"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x107281378" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x107289c58"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x107280020" loc="70:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x107289c58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x1072d6110" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x1073489a0" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x1073489a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x10733f328" loc="136:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10631d020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x107344e68" loc="83:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x107341ad8" loc="114:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10631d020"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10631d020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x107341540" loc="114:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10631d020"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x107341858" loc="114:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10631d020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x107342da8" loc="98:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x10733e290" loc="151:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10631d020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x10733fa48" loc="144:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10631d020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x107342610" loc="92:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x1073454a0" loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10631d020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x107345230" loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10631d020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x1073409e0" loc="129:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10631d020"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10631d020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x107340448" loc="129:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10631d020"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x107340760" loc="129:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10631d020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x107344020" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10631d020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x107345c70" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10631d020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x1073447c8" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x107369d70" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x107369d70"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x107366630" loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10631d020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x107361470" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x107361470"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x1073616a0" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1073616a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x10735c020" loc="109:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1073616a0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x10735e1d8" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x10735d6c0" loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1073616a0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1073616a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x10735d120" loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1073616a0"/></type-var>
          </variable>
          <variable name="dt" ref="0x10735d440" loc="103:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1073616a0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x10735e948" loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x10735c7a0" loc="116:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1073616a0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x10735f290" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1073616a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x10735f020" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1073616a0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x10735fa60" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Random.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x1074eb020" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x1074ec6f0" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10631d020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x1074aabd0" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x1074aabd0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x1074ef6b8" loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x1074aabd0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x1074ef448" loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x1074aabd0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChaseEnergy" loc="1:../../interface/ChaseEnergy.nc">
      <function command="" provided="0" name="getRadioOnTime" ref="0x10750d598" loc="2:../../interface/ChaseEnergy.nc">
        <interfacedef-ref qname="ChaseEnergy"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10631d020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChasePacket" loc="1:../../interface/ChasePacket.nc">
      <function command="" provided="0" name="getPayload" ref="0x107511878" loc="2:../../interface/ChasePacket.nc">
        <interfacedef-ref qname="ChasePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x1075112b0" loc="2:../../interface/ChasePacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1075115c0" loc="2:../../interface/ChasePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChaseControl" loc="1:../../interface/ChaseControl.nc">
      <function event="" provided="0" name="dc_started" ref="0x107512020" loc="7:../../interface/ChaseControl.nc">
        <interfacedef-ref qname="ChaseControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="err" ref="0x107513c58" loc="7:../../interface/ChaseControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dc_start" ref="0x107513588" loc="2:../../interface/ChaseControl.nc">
        <interfacedef-ref qname="ChaseControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChaseListen" loc="1:../../interface/ChaseListen.nc">
      <function event="" provided="0" name="reboot_rec" ref="0x1074d3c30" loc="2:../../interface/ChaseListen.nc">
        <interfacedef-ref qname="ChaseListen"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="begin_rec" ref="0x1074cd328" loc="3:../../interface/ChaseListen.nc">
        <interfacedef-ref qname="ChaseListen"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChaseDelay" loc="3:../../interface/ChaseDelay.nc">
      <function command="" provided="0" name="getTime" ref="0x1074ce948" loc="4:../../interface/ChaseDelay.nc">
        <interfacedef-ref qname="ChaseDelay"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10631d020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="getDelay" ref="0x10750f2d0" loc="5:../../interface/ChaseDelay.nc">
        <interfacedef-ref qname="ChaseDelay"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x1074d6540"/>
                <typename><typedef-ref name="chase_delay_t" ref="0x1074d6b58"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lay" ref="0x10750f060" loc="5:../../interface/ChaseDelay.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x1074d6540"/>
                <typename><typedef-ref name="chase_delay_t" ref="0x1074d6b58"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChaseFlood" loc="1:../../interface/ChaseFlood.nc">
      <function command="" provided="0" name="init_flood" ref="0x1074d0930" loc="2:../../interface/ChaseFlood.nc">
        <interfacedef-ref qname="ChaseFlood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x1074d0020" loc="2:../../interface/ChaseFlood.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1074d0330" loc="2:../../interface/ChaseFlood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </variable>
          <variable name="payload" ref="0x1074d06a0" loc="2:../../interface/ChaseFlood.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="pkt_reced" ref="0x1074cf9a8" loc="3:../../interface/ChaseFlood.nc">
        <interfacedef-ref qname="ChaseFlood"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
              <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x1074cf060" loc="3:../../interface/ChaseFlood.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1074cf370" loc="3:../../interface/ChaseFlood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </variable>
          <variable name="payload" ref="0x1074cf6e0" loc="3:../../interface/ChaseFlood.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x1074f89f8" loc="95:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1074f8788" loc="95:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x1074fbdd0" loc="81:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1074fbb60" loc="81:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x1074fc640" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x1074fc3d0" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x1074fdb60" loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x1074fd8f0" loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x1074fb020" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x1074fcd88" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x1074f9c30" loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1074f99c0" loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x1075252a0" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x107527b70" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x107525020" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x1075215f0" loc="77:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x107521020" loc="77:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x107521370" loc="77:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x107525d00" loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x10631b728"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x107525a90" loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x1075235e0" loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x107523370" loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x1075273e8" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x107527178" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x1075247d8" loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x107524568" loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x1075300b8" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x107531aa8" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x107531dc0" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x10752f328" loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x10752c958" loc="84:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x10752db90" loc="84:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x10752c3b8" loc="84:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x10752c6c8" loc="84:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x10752d3f8" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x10752fe00" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x10752d178" loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x107530ac8" loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x107530858" loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x10751e668" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10751e3c0" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x10751fc08" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x106bdfb70"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x106bdc438"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10751f920" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x10751c880" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x106bdced8"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x106bfe6c8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10751c598" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x107536020" loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x107533020" loc="97:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x107535780" loc="90:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x107538740" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x107537768" loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x107536828" loc="76:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x107535020" loc="83:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x107537020" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/State.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x107517ce8" loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x107519458" loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x107517590" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x107517320" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x107519b60" loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x10751a290" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x10751a020" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x10751acb8" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x10751aa48" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x10759b680" loc="106:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x10759b0c8" loc="106:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x10759b400" loc="106:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x10759d178" loc="93:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x10759e840" loc="87:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x10759e200" loc="87:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x10759e5c0" loc="87:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x1075a30a8" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x1075a4e00" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x10759d980" loc="98:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x1075a0990" loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x1075a0720" loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x1075a2108" loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x1075a3e40" loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x10759a828" loc="117:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x10759fa30" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x10759f7c0" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x10759a070" loc="112:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x1075a2828" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x107514df0"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x10750b548"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x1075a0020" loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x1075a46d0" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x1075a3790" loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x10759f110" loc="77:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Read.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x1075962a0" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x1075962a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x107596ad8" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Read.nc">
        <documentation loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x1075957c8" loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Read.nc">
        <documentation loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x1075962a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x107595248" loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x107595548" loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x1075962a0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x1075be338" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x106be5e38"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x1075be0c8" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x1075bed90" loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x106be5e38"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x1075beb20" loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x107588678" loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x107514df0"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x10750b548"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x1075c6178" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x106bceb18"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x1075c5020" loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x1075c68d8" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x106bce760"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x1075c8920" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x106bce760"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x106bceb18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x1075c8368" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x106bce760"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x1075c86a0" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x106bceb18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x1075b7328" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x106be5e38"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x1075c3688" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x106be5e38"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x1075cc878" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x1075c30c8" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x1075c33f8" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x1075c1de8" loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x106be5e38"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x1075c1020" loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x1075c1828" loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x1075c1b58" loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x1075caa78" loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x1075ca328" loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x1075cbbc0" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x1075cb378" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x1076d90d8" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x1076d7178" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x1076d9a00" loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x1076d9790" loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x1076dc8b8" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x107707bc0" loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x107705540" loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x107707498" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x107706d50" loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x107706ae0" loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x1076bcd30" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x107706378" loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x1077ec8c8" loc="24:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x1077eb0d8" loc="31:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x1077eb8a8" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x10781a348" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x10781bd58" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x10781a0c8" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x1078142b0" loc="91:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x107816940" loc="91:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x107816c70" loc="91:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x107814020" loc="91:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x107817c50" loc="82:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x106be5e38"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x1078176a0" loc="82:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x1078179d0" loc="82:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x10781b020" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x106be5e38"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x10781c908" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x10781cc38" loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x107818948" loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x107818060" loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x107818390" loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x1078186b8" loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x107851930" loc="70:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x107851020" loc="70:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x107851380" loc="70:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1078516a0" loc="70:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x107850cc8" loc="82:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x107850060" loc="82:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x1078503c0" loc="82:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1078506e0" loc="82:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x107850a28" loc="83:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x1078569b8" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x107856748" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x1078c3360" loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x106e48950"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x106e48d58"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x1078c8338" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x1078c80c8" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x1078c7630" loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x1078c73c0" loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x1078c8b38" loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x1078c60a8" loc="81:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x1078c7dc8" loc="81:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x10798dae0" loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x107943178" loc="31:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x107939bf0" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x107939980" loc="62:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x10794cda8" loc="11:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x10798f020" loc="71:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x10793d020" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x107945360" loc="28:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x107942020" loc="34:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x1079463d0" loc="25:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x107946160" loc="25:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x1079499d8" loc="21:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x107941bc0" loc="41:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x107938a60" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x10798d3e0" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x1079392a8" loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x1079881d8" loc="91:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x107984710" loc="100:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x10794bb80" loc="14:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x1079414c0" loc="38:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x10793fc68" loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x107946c30" loc="27:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x10794ec50" loc="7:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x10793ab10" loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x10793a8a0" loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x10794e580" loc="6:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x1079378d8" loc="69:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x10798b258" loc="81:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x107986828" loc="94:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x107984020" loc="97:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x10798fe40" loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x10798b928" loc="83:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x107938360" loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x1079892a8" loc="87:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x10794a290" loc="15:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x10793c110" loc="53:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x10798a750" loc="86:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x10798eca8" loc="77:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x10793e810" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x10793e5a0" loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x107985020" loc="95:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x10793a1d8" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x10798f730" loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x10794c6b0" loc="8:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x106e7e658"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x106e7ea60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x10794c440" loc="8:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x106e7e658"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x106e7ea60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x107942dc8" loc="37:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x1079492d0" loc="19:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x107949060" loc="19:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x10793f4e0" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x10793f270" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x107989a18" loc="90:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x107947a60" loc="24:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x10794a9a0" loc="18:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x10793ca50" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x10793c7e0" loc="54:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10631cb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x10794b4d0" loc="12:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x10798a020" loc="84:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x10798e5a0" loc="75:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x1079371d8" loc="68:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x10793d980" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x10793d710" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x1079426d8" loc="35:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x107945a40" loc="29:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x107985730" loc="96:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x107947338" loc="22:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x1079470c8" loc="22:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x107988938" loc="92:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x107943848" loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x1079860d8" loc="93:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x107bc23b0" loc="13:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x107bc2140" loc="13:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x107bae3f0" loc="10:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x107bb2ac0" loc="10:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x107bb2e08" loc="10:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x107bae160" loc="10:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x107bad0b8" loc="11:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x107baeac8" loc="11:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x107baedd8" loc="11:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x107bfa420" loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x107bfa420"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x107bfa650" loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x107bfa650"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x107bf9118" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x107bfa650"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x107bfae78" loc="66:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x107bfa650"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x107c6ce20" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisableRx" loc="1:../../chips/cc2420/transmit/DisableRx.nc">
      <function command="" provided="0" name="enableRx" ref="0x107c6bde0" loc="3:../../chips/cc2420/transmit/DisableRx.nc">
        <interfacedef-ref qname="DisableRx"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRx" ref="0x107c6b770" loc="2:../../chips/cc2420/transmit/DisableRx.nc">
        <interfacedef-ref qname="DisableRx"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x107c592e8" loc="35:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x107c592e8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x107c59518" loc="35:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x107c59518"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x107c54290" loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x107c59518"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x107c54020" loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x107c53370" loc="70:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x107c53100" loc="70:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x107c560a8" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x107c59dc8" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x107c525e0" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x107c59518"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x107c52020" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x107c52360" loc="78:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x107c59518"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x107c9dac0" loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x107c9d170" loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x107c9d840" loc="63:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x107c9ea00" loc="55:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x107c9e290" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10631d020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x107c9e020" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10631d020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x107c4a8e0" loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x107c4a670" loc="58:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x107c4e990" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x107c4e720" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x107c49720" loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x107c494b0" loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x107c487f8" loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x107c48588" loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisableFifoP" loc="1:../../chips/cc2420/receive/DisableFifoP.nc">
      <function command="" provided="0" name="enableFifoP" ref="0x107d0eae8" loc="3:../../chips/cc2420/receive/DisableFifoP.nc">
        <interfacedef-ref qname="DisableFifoP"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableFifoP" ref="0x107d0e460" loc="2:../../chips/cc2420/receive/DisableFifoP.nc">
        <interfacedef-ref qname="DisableFifoP"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x107dbd9e0" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x107dbd770" loc="47:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:152" alignment="I:1"><nx_struct-ref name="message_t" ref="0x106c12c58"/>
                <typename><typedef-ref name="message_t" ref="0x106c36228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Queue.nc">
      <documentation loc="33:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x108102020" loc="43:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x108102020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x1080ff728" loc="80:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="74:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x108102020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x1080fd020" loc="97:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="90:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10659a780"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x108102020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x1080fed78" loc="97:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x108102020"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x106317508"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:2"><attribute-ref name="one" ref="0x106317508"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x1080fb020" loc="108:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="99:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x108102020"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x1080fdc50" loc="108:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="full" ref="0x108100020" loc="57:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="52:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is full.</short>
          <long>&#10; Returns if the queue is full.&#10;&#10; @return Whether the queue is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x1080ff020" loc="72:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="67:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x1080fe290" loc="88:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="82:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x108102020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x108102848" loc="50:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="45:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1065961d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x108100738" loc="65:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="59:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10631c790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/Putchar.nc">
      <documentation loc="32:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TINYOS_OS_DIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x1080da8d8" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/Putchar.nc">
        <documentation loc="46:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x1080da668" loc="49:/Users/ZhichaoCao/Documents/czc/tinyos-main/tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
